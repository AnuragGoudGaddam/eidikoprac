{"version":3,"sources":["component/properties.js","app-data/BulkPaymentColmns.js","component/GlobalFiltering.js","component/BulkPayments.js","component/ExcpCol.js","component/IndividualPayment.js","component/IndividualPaymentFields.js","component/BulkPaymentField.js","component/PaymentTabs.js","app-data/SerachResultColumn.js","component/ExportsButtons.js","component/SearchResults.js","component/TransactionSearchCriteria.js","app-data/PaymentColumn.js","component/GlobalFilteringPaymentReq.js","component/PaymentRequestTable.js","component/PaymentRequestFields.js","component/CompletedRequestColumn.js","component/GlobalFilteringCompReq.js","component/CompletedRequestTable.js","component/CompletedRequest.js","component/ReportsColumn.js","component/ReportsTable.js","component/ReportsForm.js","component/TransactionalReportColumn.js","component/TransactionalReportTable.js","component/TransactionalReport.js","component/ReportsTab.js","component/BudgetDetailsTable.js","component/Popup.js","component/ReserveFundButtonAdvance.js","component/ReserveFundDetailsTableFooters.js","component/ReserveFundDetails.js","component/ReserveFundDetailsCopy.js","component/AppTabs.js","component/DocumentPath.js","component/Footer.js","component/logo.png","component/Header.js","component/Login.js","component/DocumentColumns.js","component/DocumentTable.js","component/DocumentUpload.js","component/AttachmentFields.js","component/ExceptionUpdate.js","component/AttachmentFields_CompletedRequest.js","component/AttachmentTemp.js","component/Temp.js","component/BulkEdit.js","component/Test.js","component/LoginFailed.js","component/ReserveAttachmentFields.js","component/Dashboard/Dchart2.js","component/Dashboard/linechart.js","component/Dashboard/Dashboard.js","component/Dashboard/dash.js","component/Dashboard/apexchartsdonut.js","component/Dashboard/donutchartfrom.js","component/Dashboard/dounautchart2.js","component/Dashboard/Globalfilter.js","component/Dashboard/GenericTable.js","component/Dashboard/colunmcases.js","component/Dashboard/tableData.js","component/Dashboard/label.js","component/Dashboard/table.js","App.js","reportWebVitals.js","reducer/addUserReducer.js","reducer/index.js","store/userStore.js","index.js"],"names":["CONTEXTROOT","process","PROTOCOL","window","location","protocol","DOMAIN","host","console","log","concat","OA_SERVICE_URL","properties","loginURL","userAuth","searchResult","attachmentUpdate","managementCompanyList","saveAttachmentData","getMatrixRefNo","displayAttachmentDetails","getCompletedRequests","getPaymentData","searchPaymentData","excelUpload","supplierList","generateReports","reportsExcel","reportsPDF","loadingExpDates","transactionalPdf","transactionalExcel","generateTransactionalReports","exceptionUpdate","bulkPaymentColumns","paymentColumns","getBuilding","getBuildingsByMgmtComp","getBulkPayment","attachmentFieldReq","documentPath","getPath","getListDocuments","fileUpload","loadAttachmentDetails","individualPaymentsList","buildingNames","budgetDetails","updateBudget","completedRequestList","completedPdf","completedExcel","individualDataList","bulkDataList","downloadPDF","dataURl","fetchReserveFundData","saveReserveFundData","reserveFundUpdateDetail","BULKPAYMENT_COLUMNS","id","Header","accessor","Cell","e","_jsx","Link","to","value","target","rel","children","Tooltip","title","IconButton","EditIcon","GlobalFiltering","_ref","filter","setFilter","_jsxs","_Fragment","class","style","marginTop","marginLeft","Col","Input","placeholder","onChange","BulkPayments","prop","_objectSpread2","columns","useMemo","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","dataArray","info","JSON","stringify","_useTable","useTable","useGlobalFilter","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","state","setGlobalFilter","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","pageIndex","pageSize","globalFilter","width","Table","_objectSpread","size","striped","_defineProperty","backgroundColor","color","bordercolor","fontSize","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","textAlign","length","type","defaultValue","pageNumber","Number","padding","Button","onClick","disabled","EXCPQ_COLUMNS","IndividualPayment","responsive","fontWeight","IndividualPaymentFields","indivData","setIndivData","_useState3","_useState4","_useState5","_useState6","data1","setData1","_useState7","_useState8","_useState9","_useState10","setData3","_useState11","_useState12","building","setBuilding","individualData","mgmtCompId","buildingId","getBuildingNames","_asyncToGenerator","_regeneratorRuntime","mark","_callee","name","wrap","_context","prev","next","preventDefault","axios","get","sent","stop","_x","apply","arguments","fetchManagementComany","_ref2","_callee2","company","_context2","fetchBuilding","_ref3","_callee3","_context3","className","overflowX","Form","onSubmit","event","alert","head","token","ReactSession","username","post","then","response","error","loadIndividualData","FormGroup","Label","sm","selected","opt","mcNameEn","newdata","handle","buildingName","borderColor","BulkPaymentField","bulkData","setBulkData","bulkDataImput","loadBulkData","PaymentTabs","_React$useState","React","_React$useState2","tbVal","setVal","AppBar","position","maxHeight","Tabs","TabIndicatorProps","background","marginBottom","height","val","Tab","label","minWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","SEARCH_RESULT_COLUMNS","ExportsButtons","SearchResults","props","Data","Search","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","handleMatrixRefNo","setState","MatrixRefNo","handleBeneficiaryName","BeneficiaryName","handleCustomerRef","CustomerRef","handlecurrency","currency","handleProduct","Product","handlesubProduct","subProduct","handleInitiationDateFrom","InitiationDateFrom","handleInitiationDateTo","InitiationDateTo","handleAmountFrom","AmountFrom","handleAmountTo","AmountTo","handleSortby","Sortby","handleSortOrder","SortOrder","handleMatrixFileRefNo","MatrixFileRefNo","handleDebitAccountNumber","DebitAccountNumber","handleManagementCompanyName","handleBuildingName","valueChange","handleStatus","Status","buildingDropDownData","fetchSupplier","supplier","SupplierList","handleSubmit","Event","postbody","matrixRefNo","debitAccountNumberDesc","beneficiaryName","customerReference","status","paymentCurrency","amountFrom","amountTo","initiatorDateFrom","initiatorDateTo","sortOrder","sortBy","SearchResult","paymentData","count","resetForm","BuildingName","dropdowndata","_createClass","key","_this2","this","_jsxs2","_this3","_this$state","maxwidth","Card","CardTitle","tag","CardBody","for","hidden","supplierId","supplierName","offset","borderRadius","margin","Component","PaymentColumns","GlobalFilteringPaymentReq","PaymentRequestTable","PaymentRequestFields","clearFile","setClearFile","history","useHistory","files","setFile","dropDownData","setDropDownData","tableData","setTableData","_useState13","_useState14","setCompany","fetchCompany","handleInput","fileValidation","fileInput","document","getElementById","filePath","exec","innerHTML","getListDocumnetsFromServer","inline","onChange1","CustomInput","accept","fileRef","url","formData","FormData","append","config","push","reload","opt2","CompletedRequestColumn","GlobalFilteringCompReq","CompletedRequestTable","CompletedRequest","compData","setCompData","data2","setData2","_useState15","_useState16","years","setYears","completedData","budgetYear","getYears","_ref4","_callee4","date","year","i","_context4","Date","getFullYear","reverse","_ref5","_callee5","_context5","loadCompletedData","downloadLink","createElement","linkSource","href","download","click","downloadPDFData","table","ExcelData","ReportsColumn","ReportsTable","ReportsForm","reportData","setReportData","report","invoiceYear","loadReportData","maxLength","TransactionalReportColumn","TransactionalReportTable","TransactionalReport","transactionFrom","transactionTo","marginRight","ReportsTab","useStyles","makeStyles","theme","root","selectTableCell","tableCell","input","saveButton","cancleButton","editButton","CustomTableCell","calculateTotalAmount","classes","isEditMode","TableCell","align","onBlur","BudgetDetailsTable","setRows","previous","setPrevious","getDetails","_ref6","abrupt","_x2","onToggleEditMode","budgetItemId","mode","put","res","catch","err","newRows","balanceAmount","totalBudget","consumedAmount","Paper","TableHead","TableRow","TableBody","DoneIcon","Popup","handleClose","content","ReserveFundButtonAdvance","responseData","setResponseData","save","requestData","accountNumber","branchCode","cifNumber","reserveAccountNumber","test","setIsOpen","cif_Number","mgmnt_Comp_Id","building_Id","account_Number","reserve_Account_Number","is_Active","branch_Code","getFundDetails","requestOptions","_x3","isOpen","togglePopup","float","required","reserveFundId","ReserveFundDetailsTableFooters","enabled","ReserveFundDetails","ReserveFundDetailsCopy","search","RevertIcon","AppTabs","variant","Child","useParams","DocumentPath","open","Route","path","Footer","bottom","isLogged","setLogged","user","useSelector","userStore","PATH","pathname","minHeight","display","top","src","logo","alt","remove","Login","userName","setUsername","password","setPassword","useDispatch","set","localeCompare","message","t0","left","overflow","autoComplete","replace","Container","DocumentColumns","downloadDocument","fileName","DocumentTable","pymtReqId","DocumentUpload","pymtId","AttachmentFields","autoRenewal","setAutoRenewal","setOpen","setAttachmentFlag","governmentCheckBox","setGovernmentCheckBox","isExcpApproval","setIsExcpApproval","insuranceCheckBox","setInsuranceCheckBox","noProperDocumentCheckBox","setNoProperDocumentCheckBox","disableSaveButton","setDisableSaveButton","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","data3","matrixFileRefNo","subPaymentsCount","ids","strMatrixRefNo","invoiceAmount","tradeLicenseExpDate","agreementExpDate","serviceCode","bifurcation","isGovernmentEntity","isInsuranceCompany","curdate","datecolor","saveData","postData","today","dd","getDate","mm","getMonth","fetchData","autoRenewalData","noDocumentData","isExceptionalApproval","issuanceAuthority","invoiceDateYear","attachmentFlag","noProperDocuments","remarks","undefined","hiddenTrade","dat","handleTrade","handleAgree","md","check","Checkbox","checked","close","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","hiddenAgree","ExceptionUpdate","_putData","putData","updateData","AttachmentTemp","_jsx2","Temp","BulkEdit","onRevert","Test","LoginFailed","method","action","ReserveAttachmentFields","IsActiveCheckBox","isActive","uv","pv","amt","Dchart2","ResponsiveContainer","PieChart","Pie","dataKey","isAnimationActive","cx","cy","outerRadius","fill1","fill","transform","bgcolor","border","boxShadow","p","createData","calories","fat","carbs","protein","LinechartD","Box","Grid","container","item","LineChart","Line","stroke","strokeWidth","CartesianGrid","XAxis","YAxis","Modal","onClose","sx","TableContainer","component","scope","Dashboard","setCarbsData","handleOpen","handleCarbsClick","carbs1","carbsdetails","find","each","spacing","xs","BarChart","wrapperStyle","strokeDasharray","Bar","barSize","disablePortal","disableEnforceFocus","cursor","textDecoration","MenuIcon","Dash","index","lg","Typography","CasePriority","chart","stacked","toolbar","show","zoom","breakpoint","options","legend","offsetX","offsetY","plotOptions","bar","horizontal","dataLabels","total","xaxis","categories","opacity","series","Chart","RiskLevel","caseDonutData","setCaseDonutData","dashboardData","donutData","closedCasesCount","openCasesCount","overdueCasesCount","updateDonutData","labels","colors","formatter","opts","w","seriesIndex","pie","expandOnClick","donut","showAlways","CaseTypes123","dataLables","GlobalFilter","alignItems","SearchIcon","InputBase","ml","flex","inputProps","GenericTable","col","_ref$apiData","apiData","viewAll","_ref$isGlobalSearch","isGlobalSearch","_ref$isExportExcel","isExportExcel","stickyHeader","renderStatus","isPageSize","pointerColumn","withStyles","MuiTableCell","renderTableBodyCell","PopperProps","truncateText","textTransform","ArrowRightAltIcon","GetAppOutlined","elevation","_createElement","alignLabel","toUpperCase","caseRefernece","sasCaseId","cifId","alteredEntityNumber","primaryEntityName","ageing","alertCreationDate","createrUserId","assignedTo","caseCreatedDate","Cases_column","_e$row","_e$row$original","original","caseRefNo","PlayArrowRoundedIcom","openCasesData","TableData","isPagination","App","isUser","setStoreType","Switch","exact","Redirect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","combineReducers","payload","createStore","ReactDOM","BrowserRouter","basename","Provider","store"],"mappings":"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","file":"static/js/main.2b03c282.chunk.js","sourcesContent":["import { data } from \"jquery\";\r\n\r\n// const DOMAIN = process.env.REACT_APP_DOMAIN;\r\nconst CONTEXTROOT = process.env.REACT_APP_CONTEXTROOT;\r\nconst PROTOCOL = window.location.protocol;\r\nconst DOMAIN = window.location.host;\r\nconsole.log(`Dynamic server url:  ${PROTOCOL}//${DOMAIN}/${CONTEXTROOT}`);\r\n// const OA_SERVICE_URL = `http://localhost:3001`;\r\nconst OA_SERVICE_URL = `${PROTOCOL}//${DOMAIN}/${CONTEXTROOT}`;\r\n const OA_RESERVEFUND_URL = `http://localhost:5050`;\r\n// const OA_RESERVEFUND_URL = `${PROTOCOL}//${DOMAIN}/${CONTEXTROOT}`;\r\nconsole.log(OA_SERVICE_URL);\r\nexport const properties = {\r\n  loginURL: `${OA_SERVICE_URL}/login`,\r\n  userAuth: `${OA_SERVICE_URL}/auth`,\r\n  searchResult: `${OA_SERVICE_URL}/search/getPaymentData`,\r\n  attachmentUpdate: `${OA_SERVICE_URL}/completedrequest/updateData`,\r\n  managementCompanyList: `${OA_SERVICE_URL}/attachment/managementCompany/`,\r\n  saveAttachmentData: `${OA_SERVICE_URL}/attachment/saveAttachmentData`,\r\n  getMatrixRefNo: `${OA_SERVICE_URL}/attachment/getMatrixNo/`,\r\n  displayAttachmentDetails: `${OA_SERVICE_URL}/completedrequest/pymtReqId/`,\r\n  getCompletedRequests: `${OA_SERVICE_URL}/completedrequest/getCompletedRequests`,\r\n  getPaymentData: `${OA_SERVICE_URL}/payment/getPaymentData`,\r\n  searchPaymentData: `${OA_SERVICE_URL}/payment/searchPaymentData`,\r\n  excelUpload: `${OA_SERVICE_URL}/payment/excelUpload`,\r\n  supplierList: `${OA_SERVICE_URL}/reports/supplierList`,\r\n  generateReports: `${OA_SERVICE_URL}/reports/getReportList`,\r\n  reportsExcel: `${OA_SERVICE_URL}/reports/excelGenerate`,\r\n  reportsPDF: `${OA_SERVICE_URL}/reports/pdfGenerate`,\r\n  loadingExpDates: `${OA_SERVICE_URL}/attachment/getExpiryDates/`,\r\n  transactionalPdf: `${OA_SERVICE_URL}/transactional/pdfGenerate`,\r\n  transactionalExcel: `${OA_SERVICE_URL}/transactional/excelGenerate`,\r\n  generateTransactionalReports: `${OA_SERVICE_URL}/transactional/getReportsList`,\r\n  exceptionUpdate: `${OA_SERVICE_URL}/exception/queue/updateData`,\r\n  bulkPaymentColumns: `${OA_SERVICE_URL}/exceptionUpdate`,\r\n  paymentColumns: `${OA_SERVICE_URL}/attachmentField`,\r\n  getBuilding: `${OA_SERVICE_URL}/properties/groupNames`,\r\n  getBuildingsByMgmtComp: `${OA_SERVICE_URL}/payment/getBuildings`,\r\n  getBulkPayment: `${OA_SERVICE_URL}/exception/queue/bulkpayments/list`,\r\n  attachmentFieldReq: `${OA_SERVICE_URL}/attachmentFieldcomplreq`,\r\n  documentPath: `${OA_SERVICE_URL}/documentpath`,\r\n  getPath: `${OA_SERVICE_URL}/documents`,\r\n  getListDocuments: `${OA_SERVICE_URL}/documents/pymtReqId`,\r\n  fileUpload: `${OA_SERVICE_URL}/saveDocument/`,\r\n  loadAttachmentDetails: `${OA_SERVICE_URL}/exception/queue/pymtReqId`,\r\n  individualPaymentsList: `${OA_SERVICE_URL}/exception/queue/individualpayments/list`,\r\n  buildingNames: `${OA_SERVICE_URL}/buildings/buildingNames`,\r\n  budgetDetails: `${OA_SERVICE_URL}/budget/budgetDetails`,\r\n  updateBudget: `${OA_SERVICE_URL}/budget/updateBudget`,\r\n  completedRequestList: `${OA_SERVICE_URL}/completedrequest/completedRequests`,\r\n  completedPdf: `${OA_SERVICE_URL}/completedrequest/pdfGenerate`,\r\n  completedExcel: `${OA_SERVICE_URL}/completedrequest/excelGenerate`,\r\n  individualDataList: `${OA_SERVICE_URL}/exception/queue/individualpayments`,\r\n  bulkDataList: `${OA_SERVICE_URL}/exception/queue/bulkpayments`,\r\n  downloadPDF: `${OA_SERVICE_URL}/reports/downloadPDF`,\r\n  dataURl:`${OA_SERVICE_URL}`,\r\n  fetchReserveFundData:`${OA_SERVICE_URL}/data`,\r\n  saveReserveFundData:`${OA_SERVICE_URL}/dataSave`,\r\n  reserveFundUpdateDetail:`${OA_SERVICE_URL}/dataUpdate`,\r\n};\r\n","import { properties } from \"../component/properties\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nconst BULKPAYMENT_COLUMNS = [\r\n  ,\r\n  {\r\n    id: \"matrixreflink\",\r\n    Header: \" \",\r\n    accessor: \"pymtReqId\",\r\n    Cell: (e) => (\r\n      <Link to={`/ExceptionUpdate/` + e.value} target='_blank' rel='noopener'>\r\n        <Tooltip title='Edit'>\r\n          <IconButton>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Link>\r\n    ),\r\n  },\r\n  {\r\n    Header: \"Matrix Ref No.\",\r\n    accessor: \"strMatrixRefNo\",\r\n  },\r\n  {\r\n    Header: \"Sub Product\",\r\n    accessor: \"subProduct\",\r\n  },\r\n\r\n  {\r\n    Header: \"Debit Account Number Description\",\r\n    accessor: \"debitAccountNumberDesc\",\r\n  },\r\n  {\r\n    Header: \"Beneficiary Name\",\r\n    accessor: \"beneficiaryName\",\r\n  },\r\n  {\r\n    Header: \"Initiator Date\",\r\n    accessor: \"displayInitiatorDate\",\r\n  },\r\n  {\r\n    Header: \"Payment Currency\",\r\n    accessor: \"paymentCurrency\",\r\n  },\r\n  {\r\n    Header: \"Amount\",\r\n    accessor: \"invoiceAmount\",\r\n  },\r\n  {\r\n    Header: \"Customer Reference\",\r\n    accessor: \"customerReference\",\r\n  },\r\n  {\r\n    Header: \"Initiator Name/Date Time\",\r\n    accessor: \"initiatorNameDateTime\",\r\n  },\r\n  {\r\n    Header: \"Remarks\",\r\n    accessor: \"remarks\",\r\n  },\r\n];\r\nexport default BULKPAYMENT_COLUMNS;\r\n","import { Form, FormGroup, Label, Input, Col, CustomInput } from \"reactstrap\";\r\nconst GlobalFiltering = ({ filter, setFilter }) => {\r\n  return (\r\n    <>\r\n    <div class='inline' style={{ marginTop: \"2rem\", marginLeft: \"-4rem\" }}>\r\n    Search\r\n  </div>\r\n  <Col style={{ marginTop: \"-1.7rem\", marginLeft: \"-1.5rem\" }}>\r\n    <Input\r\n      placeholder=''\r\n      value={filter || \"\"}\r\n      onChange={(e) => setFilter(e.target.value)}\r\n    />\r\n  </Col>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default GlobalFiltering;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  useFilters,\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nimport { Button, Table } from \"reactstrap\";\r\n\r\nimport BULKPAYMENT_COLUMNS from \"../app-data/BulkPaymentColmns\";\r\nimport GlobalFiltering from \"./GlobalFiltering\";\r\nimport { properties } from \"./properties\";\r\n\r\nconst BulkPayments = (prop) => {\r\n  const columns = useMemo(() => BULKPAYMENT_COLUMNS, []);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  // const getBulkPaymentFromServer = () => {\r\n  //   axios.get(properties.getBulkPayment).then(\r\n  //     (response) => {\r\n  //       console.log(\"loading....\");\r\n  //       console.log(response.data);\r\n  //       setData(response.data);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setData(prop.dataArray);\r\n    console.info(\"state data[][][] : \" + JSON.stringify(data));\r\n  });\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n  } = useTable(\r\n    { columns, data },\r\n    useGlobalFilter,\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n  const { pageIndex, pageSize } = state;\r\n  const { globalFilter } = state;\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginLeft: \"83%\", width: \"15%\", marginTop: \"-4rem\" }}>\r\n        <GlobalFiltering filter={globalFilter} setFilter={setGlobalFilter} />\r\n      </div>\r\n      <Table\r\n        size='sm'\r\n        striped={false}\r\n        striped={true}\r\n        style={{ marginTop: 20 }}\r\n        {...getTableProps()}>\r\n        <thead\r\n          style={{\r\n            backgroundColor: \"#254a9e\",\r\n            color: \"white\",\r\n            bordercolor: \"#254a9e\",\r\n            fontSize: 14,\r\n          }}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {\" \"}\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" ⬇️\"\r\n                        : \" ⬆️\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody style={{ fontSize: 14 }} {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td style={{ fontSize: 14 }} {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <span>\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          | Go To Page:{\" \"}\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\", padding: \"2\" }}\r\n          />{\" \"}\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}>\r\n          {[10, 20, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => nextPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BulkPayments;\r\n","import { Link } from \"react-router-dom\";\r\nimport ColumnFiltering from \"./ColumnFiltering\";\r\nimport { properties } from \"./properties\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nconst EXCPQ_COLUMNS = [\r\n  {\r\n    id: \"matrixreflink\",\r\n    Header: \" \",\r\n    accessor: \"pymtReqId\",\r\n    Cell: (e) => (\r\n      <Link to={`/ExceptionUpdate/` + e.value} target='_blank' rel='noopener'>\r\n        <Tooltip title='Edit'>\r\n          <IconButton>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Link>\r\n    ),\r\n  },\r\n  {\r\n    Header: \"Matrix Ref No.\",\r\n    accessor: \"strMatrixRefNo\",\r\n  },\r\n\r\n  {\r\n    Header: \"Sub Product\",\r\n    accessor: \"subProduct\",\r\n  },\r\n\r\n  {\r\n    Header: \"Debit Account Number Description\",\r\n    accessor: \"debitAccountNumberDesc\",\r\n  },\r\n  {\r\n    Header: \"Beneficiary Name\",\r\n    accessor: \"beneficiaryName\",\r\n  },\r\n  {\r\n    Header: \"Initiator Date\",\r\n    accessor: \"displayInitiatorDate\",\r\n  },\r\n  {\r\n    Header: \"Payment Currency\",\r\n    accessor: \"paymentCurrency\",\r\n  },\r\n  {\r\n    Header: \"Amount\",\r\n    accessor: \"invoiceAmount\",\r\n  },\r\n  {\r\n    Header: \"Customer Reference\",\r\n    accessor: \"customerReference\",\r\n  },\r\n  {\r\n    Header: \"Initiator Name/Date Time\",\r\n    accessor: \"initiatorNameDateTime\",\r\n  },\r\n  {\r\n    Header: \"Remarks\",\r\n    accessor: \"remarks\",\r\n  },\r\n];\r\nexport default EXCPQ_COLUMNS;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  useFilters,\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nimport { Button, Table } from \"reactstrap\";\r\nimport EXCPQ_COLUMNS from \"./ExcpCol\";\r\nimport GlobalFiltering from \"./GlobalFiltering\";\r\nimport { properties } from \"./properties\";\r\n\r\nconst IndividualPayment = (prop) => {\r\n  const columns = useMemo(() => EXCPQ_COLUMNS, []);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  // const getBulkPaymentFromServer = () => {\r\n  //   axios.get(properties.individualPaymentsList).then(\r\n  //     (response) => {\r\n  //       console.log(\"loading....\");\r\n  //       console.log(response.data);\r\n  //       setData(response.data);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setData(prop.dataArray);\r\n    console.info(\"state data[][][] : \" + JSON.stringify(data));\r\n  });\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n  } = useTable(\r\n    { columns, data },\r\n    useGlobalFilter,\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n  const { pageIndex, pageSize } = state;\r\n  const { globalFilter } = state;\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginLeft: \"83%\", width: \"15%\", marginTop: \"-4rem\" }}>\r\n        <GlobalFiltering filter={globalFilter} setFilter={setGlobalFilter} />\r\n      </div>\r\n      <Table\r\n        responsive='true'\r\n        size='sm'\r\n        striped={false}\r\n        striped={true}\r\n        style={{ marginTop: 20 }}\r\n        {...getTableProps()}>\r\n        <thead\r\n          style={{\r\n            backgroundColor: \"#254a9e\",\r\n            color: \"white\",\r\n            bordercolor: \"#254a9e\",\r\n            fontSize: 14,\r\n            fontWeight: \"bold\",\r\n          }}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {\" \"}\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" ⬇️\"\r\n                        : \" ⬆️\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody style={{ fontSize: 14 }} {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td style={{ fontSize: 14 }} {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <span>\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          | Go To Page:{\" \"}\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\", padding: \"0\" }}\r\n          />{\" \"}\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}>\r\n          {[10, 20, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => nextPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualPayment;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport IndividualPayment from \"./IndividualPayment\";\r\nimport { properties } from \"./properties\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\nfunction IndividualPaymentFields() {\r\n  const [indivData, setIndivData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [data1, setData1] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data3, setData3] = useState([]);\r\n  const [building, setBuilding] = useState([]);\r\n\r\n  const individualData = {\r\n    mgmtCompId: data.mgmtCompId,\r\n    buildingId: data.buildingId,\r\n  };\r\n\r\n  const loadIndividualData = (individualData) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.individualDataList, individualData, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          if (data.length) {\r\n            setIndivData(data);\r\n            console.info(\"Individual Response << : \" + JSON.stringify(data));\r\n          } else {\r\n            alert(\"No Record Found\");\r\n            setIndivData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log(data);\r\n    if (!data.mgmtCompId || !data.buildingId) {\r\n      event.preventDefault();\r\n      alert(\"Please select Mandatory fields\");\r\n      return false;\r\n    }\r\n\r\n    console.log(\"MgmtId:::\" + data.mgmtCompId);\r\n    console.log(\"buildingId:::\" + data.buildingId);\r\n\r\n    loadIndividualData(individualData);\r\n    event.preventDefault();\r\n  };\r\n\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n\r\n  const fetchManagementComany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    console.log(\"company\" + company.data);\r\n    setData1(company.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchManagementComany();\r\n  }, []);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    console.log(\"building\", building.data);\r\n    setData3(building.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n  }, []);\r\n\r\n  function handle(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='App' style={{ overflowX: \"hidden\" }}>\r\n        <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n          <FormGroup row>\r\n            <Label sm={2} className='required'>\r\n              Management Company\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='mgmtCompId'\r\n                name='mgmtCompId'\r\n                value={data.mgmtCompId}\r\n                onChange={(e) => getBuildingNames(e)}>\r\n                <option selected disabled>\r\n                  Please select a company\r\n                </option>\r\n                {data1.map((opt) => (\r\n                  <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2} className='required'>\r\n              Building Name\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                style={{ marginLeft: -65 }}\r\n                size='sm'\r\n                type='select'\r\n                id='buildingId'\r\n                // value={data.buildingId}\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a building\r\n                </option>\r\n                {building.map((opt) => (\r\n                  <option value={opt.buildingId}>{opt.buildingName}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Col>\r\n              <button\r\n                size='sm'\r\n                style={{\r\n                  backgroundColor: \"#254a9e\",\r\n                  borderColor: \"#254a9e\",\r\n                  fontSize: \"15px\",\r\n                  marginLeft: \"-4.3rem\",\r\n                }}\r\n                type='submit'\r\n                class='btn btn-primary'>\r\n                Search\r\n              </button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n        <IndividualPayment dataArray={indivData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndividualPaymentFields;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport BulkPayments from \"./BulkPayments\";\r\nimport { properties } from \"./properties\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\nfunction BulkPaymentField() {\r\n  const [bulkData, setBulkData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [data1, setData1] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data3, setData3] = useState([]);\r\n  const [building, setBuilding] = useState([]);\r\n\r\n  const bulkDataImput = {\r\n    mgmtCompId: data.mgmtCompId,\r\n    buildingId: data.buildingId,\r\n  };\r\n\r\n  const loadBulkData = (bulkDataImput) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.bulkDataList, bulkDataImput, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          if (data.length) {\r\n            setBulkData(data);\r\n            console.info(\"Bulk Response << : \" + JSON.stringify(data));\r\n          } else {\r\n            alert(\"No Record Found\");\r\n            setBulkData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const fetchManagementComany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    console.log(\"company\" + company.data);\r\n    setData1(company.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchManagementComany();\r\n  }, []);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    console.log(\"building\", building.data);\r\n    setData3(building.data);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   fetchBuilding();\r\n  // }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log(data);\r\n    if (!data.mgmtCompId || !data.buildingId) {\r\n      event.preventDefault();\r\n      alert(\"Please select Mandatory fields\");\r\n      return false;\r\n    }\r\n\r\n    console.log(\"MgmtId:::\" + data.mgmtCompId);\r\n    console.log(\"buildingId:::\" + data.buildingId);\r\n\r\n    loadBulkData(bulkDataImput);\r\n    event.preventDefault();\r\n  };\r\n\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n\r\n  function handle(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='App' style={{ overflowX: \"hidden\" }}>\r\n        <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n          <FormGroup row>\r\n            <Label sm={2} className='required'>\r\n              Management Company\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='mgmtCompId'\r\n                name='mgmtCompId'\r\n                value={data.mgmtCompId}\r\n                onChange={(e) => getBuildingNames(e)}>\r\n                <option selected disabled>\r\n                  Please select a company\r\n                </option>\r\n                {data1.map((opt) => (\r\n                  <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2} className='required'>\r\n              Building Name\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                style={{ marginLeft: -65 }}\r\n                size='sm'\r\n                type='select'\r\n                id='buildingId'\r\n                // value={data.buildingId}\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a building\r\n                </option>\r\n                {building.map((opt) => (\r\n                  <option value={opt.buildingId}>{opt.buildingName}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Col>\r\n              <button\r\n                size='sm'\r\n                style={{\r\n                  backgroundColor: \"#254a9e\",\r\n                  borderColor: \"#254a9e\",\r\n                  fontSize: \"15px\",\r\n                  marginLeft: \"-4.3rem\",\r\n                }}\r\n                type='submit'\r\n                class='btn btn-primary'>\r\n                Search\r\n              </button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n        <BulkPayments dataArray={bulkData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BulkPaymentField;\r\n","import React from 'react';\r\n\r\nimport {\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n} from '@material-ui/core';\r\n\r\nimport BulkPayments from './BulkPayments';\r\nimport IndividualPayment from './IndividualPayment';\r\nimport IndividualPaymentFields from './IndividualPaymentFields';\r\nimport BulkPaymentField from './BulkPaymentField';\r\n\r\nconst PaymentTabs = () => {\r\n    const [tbVal, setVal] = React.useState(0);\r\n\r\n    const moveTab = (e, val) => {\r\n        setVal(val)\r\n    }\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\" style={{marginTop:3 , backgroundColor:'#254a9e',maxHeight:'35px'}}>\r\n                <Tabs TabIndicatorProps={{style: {background:'white',marginBottom:'11px',}}} style={{height:'5px'}} value={tbVal} onChange={moveTab}>\r\n                    <Tab label=\"Individuals Payment\" style={{fontWeight:'bold',minWidth:\"2%\",fontSize:'13px',paddingTop:'0px' ,paddingBottom:'-40px',paddingLeft:'10px',paddingRight:'0px'}}/>\r\n                    <Tab label=\"Bulk Payment\" style={{fontWeight:'bold',minWidth:\"2%\",fontSize:'13px' ,paddingTop:'0px' ,paddingBottom:'-40px',paddingLeft:'10px',paddingRight:'0px'}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {tbVal=== 0 && <IndividualPaymentFields/>}\r\n            {tbVal=== 1 && <BulkPaymentField/>}\r\n            {/*\r\n            <TabPanel value={tbVal} index={0}>T1</TabPanel>\r\n            <TabPanel value={tbVal} index={1}>T2</TabPanel>\r\n            */}\r\n        </>\r\n    );\r\n}\r\nexport default PaymentTabs\r\n\r\n\r\n\r\n","const SEARCH_RESULT_COLUMNS = [\r\n  {\r\n    Header: \"Matrix Ref No/Matrix File RefNo\",\r\n    accessor: \"strMatrixRefNo\",\r\n  },\r\n\r\n  {\r\n    Header: \"Sub Product\",\r\n    accessor: \"subProduct\",\r\n  },\r\n\r\n  {\r\n    Header: \"Debit Account Number Description\",\r\n    accessor: \"debitAccountNumberDesc\",\r\n  },\r\n  {\r\n    Header: \"Beneficiary Name\",\r\n    accessor: \"beneficiaryName\",\r\n  },\r\n  {\r\n    Header: \"Initiator Date\",\r\n    accessor: \"initiatorDate\",\r\n  },\r\n  {\r\n    Header: \"Payment Currency\",\r\n    accessor: \"paymentCurrency\",\r\n  },\r\n  {\r\n    Header: \"Amount\",\r\n    accessor: \"invoiceAmount\",\r\n  },\r\n  {\r\n    Header: \"Customer Reference\",\r\n    accessor: \"customerReference\",\r\n  },\r\n  {\r\n    Header: \"Initiator Name\",\r\n    accessor: \"initiatorNameDateTime\",\r\n  },\r\n  {\r\n    Header: \"Status\",\r\n    accessor: \"status\",\r\n  },\r\n  {\r\n    Header: \"Remarks\",\r\n    accessor: \"remarks\",\r\n  },\r\n];\r\nexport default SEARCH_RESULT_COLUMNS;\r\n","import React from 'react';\r\n\r\nfunction ExportsButtons() {\r\n    return (\r\n        <div class=\"col ml-auto\" align=\"right\" style={{marginTop:5}}>\r\n            <button style={{backgroundColor:'#254a9e', borderColor:'#254a9e'}}  type=\"button\" class=\"btn btn-primary btn-sm\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}PDF</button>{' '}\r\n            <button style={{backgroundColor:'#254a9e', borderColor:'#254a9e'}} type=\"button\" class=\"btn btn-primary btn-sm\">\r\n                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}Excel</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExportsButtons\r\n","import React, { useMemo, useEffect, useState } from 'react';\r\n\r\nimport {\r\n  useFilters,\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from 'react-table';\r\nimport {\r\n  Button,\r\n  Table,\r\n} from 'reactstrap';\r\n\r\nimport SEARCH_RESULT_COLUMNS from '../app-data/SerachResultColumn';\r\nimport ExportsButtons from './ExportsButtons';\r\n\r\nconst SearchResults = (props) => {\r\n    const columns = useMemo(() => SEARCH_RESULT_COLUMNS, [])\r\n    const[data , setData] =  useState([]);\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        state,\r\n        setGlobalFilter,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize,\r\n    } = useTable({ columns, data }, useGlobalFilter, useFilters, useSortBy, usePagination)\r\n    const { pageIndex, pageSize } = state\r\n    const { globalFilter } = state\r\n  \r\n      \r\n    useEffect(() =>{\r\n     \r\n       setData(props.Data);\r\n    });\r\n\r\n    console.info('props : '+JSON.stringify(props.Data))\r\n    \r\n    return (\r\n        <div>\r\n         \r\n            <Table size='sm' striped={false} striped={true} style={{ marginTop: 20 }} {...getTableProps()}>\r\n                <thead style={{ backgroundColor: '#254a9e', color: 'white', bordercolor: '#254a9e', fontSize: 14 }}>\r\n                    {\r\n                        headerGroups.map((headerGroup) => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {\r\n                                    headerGroup.headers.map((column) => (\r\n                                        <th {...column.getHeaderProps(column.getSortByToggleProps())}> {column.render('Header')}\r\n                                            <span>\r\n                                                {\r\n                                                    column.isSorted ? (column.isSortedDesc ? ' ⬇️' : ' ⬆️') : ''\r\n                                                }\r\n                                            </span>\r\n                                        </th>\r\n                                    ))\r\n                                }\r\n\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {\r\n                        page.map((row) => {\r\n                            prepareRow(row)\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {\r\n                                        row.cells.map((cell) => {\r\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        })\r\n                                    }\r\n\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            <div style={{textAlign:'center'}}>\r\n                <span>\r\n                    Page{' '}\r\n                    <strong>\r\n                        {pageIndex+1} of {pageOptions.length}\r\n                    </strong>{' '}\r\n                </span>\r\n                <span>\r\n                    | Go To Page:{' '}\r\n                    <input type=\"number\" defaultValue={pageIndex+1} onChange={(e)=>{\r\n                        const pageNumber = e.target.value ? Number(e.target.value)-1:0\r\n                        gotoPage(pageNumber)                        \r\n                    }} \r\n                        style={{width:'50px', padding:'2',}}/>{' '}\r\n                </span>\r\n                <select value={pageSize} onChange={(e)=>setPageSize(Number(e.target.value))}>\r\n                        {[10, 20, 50].map((pageSize)=>(\r\n                        <option key={pageSize} value={pageSize}>\r\n                                Show {pageSize}\r\n                        </option>))}\r\n                </select>\r\n                <Button style={{backgroundColor:'#254a9e', color:'white'}} size=\"sm\" onClick={()=>gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</Button>{' '}\r\n                <Button style={{backgroundColor:'#254a9e', color:'white'}} size=\"sm\" onClick={()=>previousPage()} disabled={!canPreviousPage}>Previous</Button>{' '}\r\n                <Button style={{backgroundColor:'#254a9e', color:'white'}} size=\"sm\" onClick={()=>nextPage(pageCount-1)} disabled={!canNextPage}>Next</Button>{' '}\r\n                <Button style={{backgroundColor:'#254a9e', color:'white'}} size=\"sm\" onClick={()=>gotoPage(pageCount-1)} disabled={!canNextPage}>{'>>'}</Button>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n)\r\n}\r\n\r\nexport default SearchResults\r\n","import \"./mydiv.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\nimport SearchResults from \"./SearchResults\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\nexport default class Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      MatrixRefNo: \"\",\r\n      BeneficiaryName: \"\",\r\n      SupplierList: [],\r\n      CustomerRef: \"\",\r\n      currency: \"\",\r\n      DebitAccountNumber: \"\",\r\n      Product: \"\",\r\n      subProduct: \"\",\r\n      InitiationDateFrom: \"\",\r\n      InitiationDateTo: \"\",\r\n      AmountFrom: \"\",\r\n      AmountTo: \"\",\r\n      Sortby: \"DESC\",\r\n      SortOrder: \"\",\r\n      MatrixFileRefNo: \"\",\r\n      mcNameEn: \"\",\r\n      BuildingName: \"\",\r\n      buildingId: \"\",\r\n      Status: \"\",\r\n      SearchResult: [],\r\n      dropdowndata: [],\r\n      buildingDropDownData: [],\r\n    };\r\n  }\r\n\r\n  handleMatrixRefNo = (event) => {\r\n    this.setState({\r\n      MatrixRefNo: event.target.value,\r\n    });\r\n  };\r\n  handleBeneficiaryName = (event) => {\r\n    this.setState({\r\n      BeneficiaryName: event.target.value,\r\n    });\r\n  };\r\n  handleCustomerRef = (event) => {\r\n    this.setState({\r\n      CustomerRef: event.target.value,\r\n    });\r\n  };\r\n  handlecurrency = (event) => {\r\n    this.setState({\r\n      currency: event.target.value,\r\n    });\r\n  };\r\n  handleProduct = (event) => {\r\n    this.setState({\r\n      Product: event.target.value,\r\n    });\r\n  };\r\n  handlesubProduct = (event) => {\r\n    this.setState({\r\n      subProduct: event.target.value,\r\n    });\r\n  };\r\n  handleInitiationDateFrom = (event) => {\r\n    this.setState({\r\n      InitiationDateFrom: event.target.value,\r\n    });\r\n  };\r\n  handleInitiationDateTo = (event) => {\r\n    this.setState({\r\n      InitiationDateTo: event.target.value,\r\n    });\r\n  };\r\n  handleAmountFrom = (event) => {\r\n    this.setState({\r\n      AmountFrom: event.target.value,\r\n    });\r\n  };\r\n  handleAmountTo = (event) => {\r\n    this.setState({\r\n      AmountTo: event.target.value,\r\n    });\r\n  };\r\n  handleSortby = (event) => {\r\n    this.setState({\r\n      Sortby: event.target.value,\r\n    });\r\n  };\r\n  handleSortOrder = (event) => {\r\n    this.setState({\r\n      SortOrder: event.target.value,\r\n    });\r\n  };\r\n  handleMatrixFileRefNo = (event) => {\r\n    this.setState({\r\n      MatrixFileRefNo: event.target.value,\r\n    });\r\n  };\r\n  handleDebitAccountNumber = (event) => {\r\n    this.setState({\r\n      DebitAccountNumber: event.target.value,\r\n    });\r\n  };\r\n  handleManagementCompanyName = (event) => {\r\n    this.setState({\r\n      mcNameEn: event.target.value,\r\n    });\r\n  };\r\n  handleBuildingName = (event) => {\r\n    console.log(event.target.value);\r\n    this.setState({\r\n      buildingId: event.target.value,\r\n    });\r\n  };\r\n\r\n  valueChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleStatus = (event) => {\r\n    this.setState({\r\n      Status: event.target.value,\r\n    });\r\n  };\r\n  fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    this.setState({ buildingDropDownData: [] });\r\n    // this.setState({ buildingDropDownData: building.data });\r\n  };\r\n  fetchSupplier = async () => {\r\n    const supplier = await axios.get(properties.supplierList);\r\n    this.setState({ SupplierList: supplier.data });\r\n  };\r\n  componentDidMount() {\r\n    this.fetchBuilding();\r\n    this.fetchSupplier();\r\n    axios.get(properties.managementCompanyList).then(\r\n      (response) => {\r\n        this.setState({ dropdowndata: response.data });\r\n      },\r\n      (error) => {\r\n        console.log(\"dropdown : \" + error);\r\n      }\r\n    );\r\n  }\r\n\r\n  //get building name based on management comp\r\n  getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    this.setState({ [name]: value });\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) this.setState({ buildingDropDownData: building.data });\r\n    else this.setState({ buildingDropDownData: [] });\r\n  };\r\n\r\n  handleSubmit = (Event) => {\r\n    Event.preventDefault();\r\n\r\n    if (\r\n      this.state.MatrixRefNo == \"\" &&\r\n      this.state.BeneficiaryName == \"\" &&\r\n      this.state.CustomerRef == \"\" &&\r\n      this.state.currency == \"\" &&\r\n      this.state.subProduct == \"\" &&\r\n      this.state.InitiationDateFrom == \"\" &&\r\n      this.state.InitiationDateTo == \"\" &&\r\n      this.state.AmountFrom == \"\" &&\r\n      this.state.AmountTo == \"\" &&\r\n      this.state.Sortby != \"\" &&\r\n      this.state.SortOrder == \"\" &&\r\n      this.state.DebitAccountNumber == \"\" &&\r\n      this.state.Status == \"\" &&\r\n      this.state.mcNameEn == \"\" &&\r\n      this.state.buildingId == \"\"\r\n    ) {\r\n      alert(\"Please Enter At least Two Filters!\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      this.state.MatrixRefNo == \"\" &&\r\n      this.state.BeneficiaryName == \"\" &&\r\n      this.state.CustomerRef == \"\" &&\r\n      this.state.currency == \"\" &&\r\n      this.state.subProduct == \"\" &&\r\n      this.state.InitiationDateFrom == \"\" &&\r\n      this.state.InitiationDateTo == \"\" &&\r\n      this.state.AmountFrom == \"\" &&\r\n      this.state.AmountTo == \"\" &&\r\n      this.state.Sortby != \"\" &&\r\n      this.state.SortOrder != \"\" &&\r\n      this.state.DebitAccountNumber == \"\" &&\r\n      this.state.Status == \"\"\r\n    ) {\r\n      alert(\"Please Enter More Filters!\");\r\n      return false;\r\n    }\r\n\r\n    const postbody = {\r\n      matrixRefNo: this.state.MatrixRefNo,\r\n      subProduct: this.state.subProduct,\r\n      debitAccountNumberDesc: this.state.DebitAccountNumber,\r\n      beneficiaryName: this.state.BeneficiaryName,\r\n      customerReference: this.state.CustomerRef,\r\n      status: this.state.Status,\r\n      paymentCurrency: this.state.currency,\r\n      amountFrom: this.state.AmountFrom,\r\n      amountTo: this.state.AmountTo,\r\n      initiatorDateFrom: this.state.InitiationDateFrom,\r\n      initiatorDateTo: this.state.InitiationDateTo,\r\n      sortOrder: this.state.SortOrder,\r\n      sortBy: this.state.Sortby,\r\n      mcNameEn: this.state.mcNameEn,\r\n      buildingName: this.state.buildingName,\r\n    };\r\n\r\n    console.log(\"SUPPLIER!!\" + this.state.BeneficiaryName);\r\n    console.log(\"MGMT!!\" + this.state.mcNameEn);\r\n    console.log(\"this.state.buildingId\" + this.state.buildingId);\r\n    console.log(\"this.state.buildingName\" + this.state.buildingName);\r\n    var head = {\r\n      \"Content-Type\": \"application/json\",\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios.post(properties.searchResult, postbody, { headers: head }).then(\r\n      (response) => {\r\n        console.log(\"loading....\");\r\n        this.setState({\r\n          SearchResult: response.data.paymentData,\r\n          count: response.data.count,\r\n        });\r\n        if (\r\n          !response.data.paymentData ||\r\n          (response.data.paymentData == 0 && response.data.count == 0)\r\n        ) {\r\n          alert(\"No Records found!\");\r\n        }\r\n\r\n        if (response.data.count > 0) {\r\n          alert(\r\n            \"There are \" +\r\n              response.data.count +\r\n              \" records, Please apply more filters!\"\r\n          );\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"Error! : \" + error);\r\n      }\r\n    );\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      MatrixRefNo: \"\",\r\n      BeneficiaryName: \"\",\r\n      // SupplierList: [],\r\n      CustomerRef: \"\",\r\n      currency: \"\",\r\n      DebitAccountNumber: \"\",\r\n      Product: \"\",\r\n      subProduct: \"\",\r\n      InitiationDateFrom: \"\",\r\n      InitiationDateTo: \"\",\r\n      AmountFrom: \"\",\r\n      AmountTo: \"\",\r\n      Sortby: \"\",\r\n      SortOrder: \"\",\r\n      MatrixFileRefNo: \"\",\r\n      mcNameEn: \"\",\r\n      BuildingName: \"\",\r\n      buildingDropDownData: [],\r\n      Status: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      MatrixRefNo,\r\n      MatrixFileRefNo,\r\n      BeneficiaryName,\r\n      SupplierList,\r\n      CustomerRef,\r\n      currency,\r\n      Product,\r\n      subProduct,\r\n      InitiationDateFrom,\r\n      InitiationDateTo,\r\n      AmountFrom,\r\n      AmountTo,\r\n      Sortby,\r\n      SortOrder,\r\n      DebitAccountNumber,\r\n      mcNameEn,\r\n      BuildingName,\r\n      Status,\r\n      dropdowndata,\r\n      buildingDropDownData,\r\n    } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <div style={{ maxwidth: \"100%\", marginTop: \"5px\" }}>\r\n            <hr />\r\n            <Card>\r\n              <CardTitle\r\n                tag='h5'\r\n                id='tit1'\r\n                style={{ background: \"#254a9e\", color: \"white\" }}>\r\n                Transaction Search Criteria\r\n              </CardTitle>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for='MatrixRefNo' sm={2}>\r\n                    Matrix Ref No:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='MatrixRefNo'\r\n                      value={MatrixRefNo}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Label for='CustomerRef' sm={2}>\r\n                    Customer Ref:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='CustomerRef'\r\n                      value={CustomerRef}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n                  <Label\r\n                    for='ManagementCompanyName'\r\n                    sm={2}\r\n                    style={{ marginTop: \"-0.7rem\", marginBottom: \"-1rem\" }}>\r\n                    Management Company Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='mcNameEn'\r\n                      value={mcNameEn}\r\n                      onChange={this.valueChange}\r\n                      onChange={(e) => this.getBuildingNames(e)}>\r\n                      <option selected hidden>\r\n                        Please select a company\r\n                      </option>\r\n                      {dropdowndata.map((opt) => (\r\n                        <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col>\r\n                  {/*<Label for='DebitAccountNumber' sm={2}>\r\n                    Account Number:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='DebitAccountNumber'\r\n                      value={DebitAccountNumber}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col> */}\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  {/* <Label for='BeneficiaryName' sm={2}>\r\n                    Beneficiary Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='BeneficiaryName'\r\n                      value={BeneficiaryName}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col> */}\r\n\r\n                  <Label for='BeneficiaryName' sm={2}>\r\n                    Beneficiary Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='BeneficiaryName'\r\n                      id='BeneficiaryName'\r\n                      // value={BeneficiaryName}\r\n                      onChange={this.valueChange}>\r\n                      <option selected hidden>\r\n                        Select a beneficiary name\r\n                      </option>\r\n                      {SupplierList.map((opt) => (\r\n                        <option value={opt.supplierId}>\r\n                          {opt.supplierName}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col>\r\n                  <Label for='subProduct' sm={2}>\r\n                    Sub Product:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='subProduct'\r\n                      value={subProduct}\r\n                      onChange={this.valueChange}></Input>\r\n                  </Col>\r\n                  {/* <Label for='BuildingName' sm={2}>\r\n                    Building Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='BuildingName'\r\n                      id={BuildingName}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col> */}\r\n\r\n                  <Label for='buildingName' sm={2}>\r\n                    Building Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='buildingName'\r\n                      id='buildingName'\r\n                      // value={BuildingName}\r\n                      onChange={this.valueChange}>\r\n                      <option selected hidden>\r\n                        Select a building name\r\n                      </option>\r\n                      {buildingDropDownData.map((opt) => (\r\n                        <option value={opt.buildingId}>\r\n                          {opt.buildingName}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label for='InitiationDateFrom' sm={2}>\r\n                    Initiation Date From:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='date'\r\n                      name='InitiationDateFrom'\r\n                      value={InitiationDateFrom}\r\n                      placeholder='date placeholder'\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n                  <Label for='InitiationDateTo' sm={2}>\r\n                    Initiation Date To:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='date'\r\n                      name='InitiationDateTo'\r\n                      value={InitiationDateTo}\r\n                      placeholder='date placeholder'\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Label for='Status' sm={2}>\r\n                    Status:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='Status'\r\n                      value={Status}\r\n                      onChange={this.valueChange}>\r\n                      <option value=''>select</option>\r\n                      <option value='APPROVED'>APPROVED</option>\r\n                      <option value='EXCEPTION'>EXCEPTION</option>\r\n                      <option value='FAILED'>FAILED</option>\r\n                      <option value='IN PROGRESS'>IN PROGRESS</option>\r\n                      <option value='PENDING'>PENDING</option>\r\n                      <option value='REJECTED'>REJECTED</option>\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='AmountFrom' sm={2}>\r\n                    Amount From:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='AmountFrom'\r\n                      value={AmountFrom}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Label for='AmountTo' sm={2}>\r\n                    Amount To:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='AmountTo'\r\n                      value={AmountTo}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Label for='currency' sm={2}>\r\n                    Currency:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='currency'\r\n                      value={currency}\r\n                      onChange={this.valueChange}>\r\n                      <option value=''>select</option>\r\n                      <option value='AED'>AED</option>\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='DebitAccountNumber' sm={2}>\r\n                    Account Number:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='DebitAccountNumber'\r\n                      value={DebitAccountNumber}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n                  {/* <Label for='ManagementCompanyName' sm={2}>\r\n                    Management Company Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='mcNameEn'\r\n                      value={mcNameEn}\r\n                      onChange={this.valueChange}>\r\n                      <option selected hidden>\r\n                        Please select a company\r\n                      </option>\r\n                      {dropdowndata.map((opt) => (\r\n                        <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col> */}\r\n                  <Label for='SortOrder' sm={2}>\r\n                    Sort Order:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='SortOrder'\r\n                      value={SortOrder}\r\n                      onChange={this.valueChange}>\r\n                      <option value=''>select</option>\r\n                      <option value='MGMT_COMP_ID'>Management Company</option>\r\n                      <option value='BENEFICIARY_NAME'>Beneficiary Name</option>\r\n                      <option value='INITIATOR_DATE'>Initiation Date</option>\r\n                    </Input>\r\n                  </Col>\r\n\r\n                  <Label for='Sortby' sm={2}>\r\n                    Sort By:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='Sortby'\r\n                      value={Sortby}\r\n                      onChange={this.valueChange}\r\n                      defaultValue='Ascending'>\r\n                      <option value='DESC'>Descending</option>\r\n                      <option value='ASC'>Ascending</option>\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row></FormGroup>\r\n                <Col sm={{ offset: 9 }}>\r\n                  <Button\r\n                    color='primary'\r\n                    type='submit'\r\n                    id='Button'\r\n                    style={{\r\n                      borderRadius: \"5%\",\r\n                      margin: \"1%\",\r\n                      marginLeft: \"130px\",\r\n                      background: \"#254a9e\",\r\n                      color: \"white\",\r\n                    }}>\r\n                    Search\r\n                  </Button>\r\n                  <Button\r\n                    color='primary'\r\n                    type='reset'\r\n                    style={{\r\n                      background: \"#254a9e\",\r\n                      color: \"white\",\r\n                      borderRadius: \"5%\",\r\n                      marginLeft: \"55px\",\r\n                    }}\r\n                    onClick={this.resetForm}\r\n                    id='Button'>\r\n                    Reset\r\n                  </Button>\r\n                </Col>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n\r\n        {console.info(\"from Parent : \" + this.state.SearchResult)}\r\n        <SearchResults Data={this.state.SearchResult} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { properties } from \"../component/properties\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nexport const PaymentColumns = [\r\n  {\r\n    id: \"matrixreflink\",\r\n    Header: \" \",\r\n    accessor: \"pymtReqId\",\r\n    Cell: (e) => (\r\n      <Link to={`/attachmentField/` + e.value} target='_blank' rel='noopener'>\r\n        <Tooltip title='Edit'>\r\n          <IconButton>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Link>\r\n    ),\r\n  },\r\n  {\r\n    Header: \"Matrix Ref No.\",\r\n    accessor: \"strMatrixRefNo\",\r\n  },\r\n  {\r\n    Header: \"Sub Product\",\r\n    accessor: \"subProduct\",\r\n  },\r\n  {\r\n    Header: \"Debit Account Number Description\",\r\n    accessor: \"debitAccountNumberDesc\",\r\n  },\r\n  {\r\n    Header: \"Beneficiary Name\",\r\n    accessor: \"beneficiaryName\",\r\n  },\r\n  {\r\n    Header: \"Initiator Date\",\r\n    accessor: \"displayInitiatorDate\",\r\n  },\r\n  {\r\n    Header: \"Payment Currency\",\r\n    accessor: \"paymentCurrency\",\r\n  },\r\n  {\r\n    Header: \"Amount\",\r\n    accessor: \"invoiceAmount\",\r\n  },\r\n  {\r\n    Header: \"Customer Reference\",\r\n    accessor: \"customerReference\",\r\n  },\r\n  {\r\n    Header: \"Initiator Name/Date and Time\",\r\n    accessor: \"initiatorNameDateTime\",\r\n  },\r\n];\r\n","import { Form, FormGroup, Label, Input, Col, CustomInput } from \"reactstrap\";\r\nconst GlobalFilteringPaymentReq = ({ filter, setFilter }) => {\r\n  return (\r\n    <>\r\n      <div class='inline' style={{ marginTop: \"2rem\", marginLeft: \"-6.5rem\" }}>\r\n        Search\r\n      </div>\r\n      <Col style={{ marginTop: \"-1.7rem\", marginLeft: \"-1.5rem\" }}>\r\n        <Input\r\n          placeholder=''\r\n          value={filter || \"\"}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        />\r\n      </Col>\r\n      {/* <div class=\"col ml-auto\" align=\"right\">\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}PDF</button>{' '}\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\">\r\n    <i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}Excel</button>\r\n</div> */}\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GlobalFilteringPaymentReq;\r\n","import React, { useMemo, useEffect, useState } from \"react\";\r\n\r\nimport { PaymentColumns } from \"../app-data/PaymentColumn\";\r\nimport { Button, Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport GlobalFilteringPaymentReq from \"./GlobalFilteringPaymentReq\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useFilters,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n} from \"react-table\";\r\nexport const PaymentRequestTable = (props) => {\r\n  const columns = useMemo(() => PaymentColumns, []);\r\n\r\n  const data = props.data;\r\n\r\n  // const getListDocumnetsFromServer = () => {\r\n  //   axios.get(properties.getPaymentData).then(\r\n  //     (response) => {\r\n  //       console.log(\"loading....\");\r\n  //       setData(response.data);\r\n  //       console.log(response.data);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getListDocumnetsFromServer();\r\n  // }, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    setGlobalFilter,\r\n    prepareRow,\r\n  } = useTable(\r\n    { columns, data },\r\n    useGlobalFilter,\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const { pageIndex, pageSize } = state;\r\n  const { globalFilter } = state;\r\n  return (\r\n    <>\r\n      <div style={{ marginLeft: \"83%\", width: \"18%\", marginTop: \"-4rem\" }}>\r\n        <GlobalFilteringPaymentReq\r\n          filter={globalFilter}\r\n          setFilter={setGlobalFilter}\r\n          style={{ marginLeft: \"10\" }}\r\n        />\r\n      </div>\r\n      <Table\r\n        size='sm'\r\n        striped={true}\r\n        style={{ marginTop: \"1rem\" }}\r\n        {...getTableProps()}>\r\n        <thead\r\n          style={{\r\n            background: \"#254a9e\",\r\n            color: \"white\",\r\n            fontSize: 14,\r\n            fontWeight: \"bold\",\r\n          }}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody style={{ fontSize: 14 }} {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td style={{ fontSize: 14 }} {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div className='text-center'>\r\n        <span>\r\n          page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          Go to page:{\" \"}\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\" }}\r\n          />\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}>\r\n          {[10, 25, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Col, CustomInput } from \"reactstrap\";\r\nimport { PaymentRequestTable } from \"./PaymentRequestTable\";\r\nimport axios, { post } from \"axios\";\r\nimport { Button } from \"reactstrap\";\r\nimport { properties } from \"./properties\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CompassCalibrationOutlined } from \"@material-ui/icons\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\nfunction PaymentRequestFields() {\r\n  // const username = useSelector((state) => state.userStore.username);\r\n  // const username = \"checker1\";\r\n  const [clearFile, setClearFile] = useState();\r\n  const username = ReactSession.get(\"username\");\r\n  console.log(\"payment request fields started\");\r\n  let history = useHistory();\r\n  const [files, setFile] = useState();\r\n  const [dropDownData, setDropDownData] = useState({\r\n    mgmtCompId: \"\",\r\n    buildingId: \"\",\r\n  });\r\n  const [data, setData] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const [building, setBuilding] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    setBuilding(building.data);\r\n    // setBuilding([]);\r\n  };\r\n  const fetchCompany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    setCompany(company.data);\r\n    console.log(company.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n    fetchCompany();\r\n  }, []);\r\n\r\n  let handleInput = (e) => {\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setDropDownData({ ...dropDownData, [name]: value });\r\n    console.log(dropDownData);\r\n  };\r\n  let search = (e) => {\r\n    e.preventDefault();\r\n    console.log(dropDownData);\r\n    if (!dropDownData.mgmtCompId) {\r\n      alert(\"Please select management company\");\r\n      return false;\r\n    }\r\n    //call api to get search result\r\n    console.log(dropDownData);\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.searchPaymentData, dropDownData, { headers: head })\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          if (response.data) setTableData(response.data);\r\n          else {\r\n            setTableData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    <div className='App'>\r\n      <PaymentRequestTable data={tableData} />\r\n    </div>;\r\n  };\r\n\r\n  //get building name based on management comp\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setDropDownData({ ...dropDownData, [name]: value });\r\n    console.log(dropDownData);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n\r\n  //load table data\r\n\r\n  const getListDocumnetsFromServer = () => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios.get(properties.getPaymentData, { headers: head }).then(\r\n      (response) => {\r\n        console.log(\"loading....\");\r\n        setTableData(response.data);\r\n        console.log(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListDocumnetsFromServer();\r\n  }, []);\r\n\r\n  function fileUpload(e) {\r\n    e.preventDefault();\r\n    // if (!dropDownData.mgmtCompId) {\r\n    //   alert(\"Please select management company\");\r\n    //   return false;\r\n    // }\r\n\r\n    if (fileValidation()) {\r\n      const url = properties.excelUpload;\r\n      const formData = new FormData();\r\n      console.log(files);\r\n      formData.append(\"file\", files);\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          token: ReactSession.get(\"token\"),\r\n          username: ReactSession.get(\"username\"),\r\n        },\r\n      };\r\n      console.log(formData);\r\n      axios\r\n        .post(\r\n          url + `/${username}/${dropDownData.mgmtCompId}/`,\r\n          formData,\r\n          config\r\n        )\r\n        .then((response) => response.data)\r\n        .then(\r\n          (data) => {\r\n            console.log(data);\r\n            setData(data);\r\n            console.info(\"report response << : \" + JSON.stringify(data));\r\n            alert(data);\r\n            setClearFile(\"\");\r\n            // window.location.reload();\r\n            history.push(\"/tabs/\");\r\n          },\r\n          (error) => {\r\n            alert(\"Error: Upload failed please try after sometime!\");\r\n            history.push(\"/tabs/\");\r\n            // window.location.reload();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  function fileValidation(e) {\r\n    let extensions = /(\\.xls|\\.xlsx)$/i;\r\n    var fileInput = document.getElementById(\"file\");\r\n    var filePath = fileInput.value;\r\n    if (!filePath || !dropDownData.mgmtCompId) {\r\n      alert(\"Please select Management company and Payment request file\");\r\n      return false;\r\n    }\r\n    if (!extensions.exec(filePath)) {\r\n      console.log(\"Invalid file extension\");\r\n      alert(`Invalid file, system will accept only [.xls, .xlsx,] `);\r\n      fileInput.innerHTML = \"\";\r\n      return false;\r\n    }\r\n    console.log(\"Valid file extension found\");\r\n    return true;\r\n  }\r\n\r\n  const getFile = (e) => {\r\n    const fileRef = e.target.files[0];\r\n    setFile(fileRef);\r\n    fileValidation();\r\n  };\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5' inline>\r\n        <FormGroup row>\r\n          <Label className='required'>Management Company Name</Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='mgmtCompId'\r\n              name='mgmtCompId'\r\n              // value={company.mgmtCompId}\r\n              onChange={(e) => handleInput(e)}\r\n              onChange1={(e) => {\r\n                getBuildingNames(e);\r\n              }}\r\n              style={{ width: \"15rem\" }}>\r\n              <option selected disabled>\r\n                Please select a company\r\n              </option>\r\n              {company.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row className='ml-lg-5'>\r\n          <Label>Upload Payment Requests</Label>\r\n          <Col>\r\n            <div class='custom-file'>\r\n              <CustomInput\r\n                type='file'\r\n                accept='.xls, .xlsx'\r\n                onChange={getFile}\r\n                style={{ width: \"20rem\", textAlign: \"left\" }}\r\n                id='file'\r\n                name='file'\r\n                key={clearFile}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Button\r\n              onClick={fileUpload}\r\n              style={{ background: \"#254a9e\", color: \"white\" }}>\r\n              Upload{\" \"}\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                marginLeft: \"5vh\",\r\n                position: \"absolute\",\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n              }}\r\n              onClick={() => window.location.reload()}>\r\n              Refresh\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row className='mt-4'>\r\n          <Label>Building Name</Label>\r\n          <Col style={{ marginLeft: \"6.5rem\" }}>\r\n            <Input\r\n              type='select'\r\n              id='buildingId'\r\n              name='buildingId'\r\n              // value={dropDownData.mgmtCompId}\r\n              onChange={(e) => handleInput(e)}\r\n              style={{ width: \"15rem\" }}>\r\n              <option selected disabled>\r\n                Please select a building\r\n              </option>\r\n              {building.map((opt2) => (\r\n                <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              onClick={search}\r\n              style={{ background: \"#254a9e\", color: \"white\" }}>\r\n              Search{\" \"}\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n      <div className='App'>\r\n        <PaymentRequestTable data={tableData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PaymentRequestFields;\r\n","import { properties } from \"./properties\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nexport const CompletedRequestColumn = [\r\n  {\r\n    id: \"matrixreflink\",\r\n    Header: \" \",\r\n    accessor: \"pymtReqId\",\r\n    Cell: (e) => (\r\n      <Link\r\n        to={`/attachmentFieldcomplreq/` + e.value}\r\n        target='_blank'\r\n        rel='noopener'>\r\n        <Tooltip title='Edit'>\r\n          <IconButton>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Link>\r\n    ),\r\n  },\r\n  {\r\n    Header: \"Matrix Ref No.\",\r\n    accessor: \"strMatrixRefNo\",\r\n  },\r\n  {\r\n    Header: \"Sub Product\",\r\n    accessor: \"subProduct\",\r\n  },\r\n  {\r\n    Header: \"Debit Account Number Description\",\r\n    accessor: \"debitAccountNumberDesc\",\r\n  },\r\n  {\r\n    Header: \"Beneficiary Name\",\r\n    accessor: \"beneficiaryName\",\r\n  },\r\n  {\r\n    Header: \"Initiator Date\",\r\n    accessor: \"displayInitiatorDate\",\r\n  },\r\n  {\r\n    Header: \"Payment Currency\",\r\n    accessor: \"paymentCurrency\",\r\n  },\r\n  {\r\n    Header: \"Amount\",\r\n    accessor: \"invoiceAmount\",\r\n  },\r\n  {\r\n    Header: \"Customer Reference\",\r\n    accessor: \"customerReference\",\r\n  },\r\n  {\r\n    Header: \"Initiator Name/Date and Time\",\r\n    accessor: \"initiatorNameDateTime\",\r\n  },\r\n  {\r\n    Header: \"Status\",\r\n    accessor: \"status\",\r\n  },\r\n  {\r\n    Header: \"Remarks\",\r\n    accessor: \"remarks\",\r\n  },\r\n];\r\n","import { Form, FormGroup, Label, Input, Col, CustomInput } from \"reactstrap\";\r\nconst GlobalFilteringCompReq = ({ filter, setFilter }) => {\r\n  return (\r\n    <>\r\n      <div class='inline' style={{ marginTop: \"2rem\", marginLeft: \"-2rem\" }}>\r\n        Search\r\n      </div>\r\n      <Col style={{ marginTop: \"-1.7rem\", marginLeft: \"1rem\" }}>\r\n        <Input\r\n          placeholder=''\r\n          value={filter || \"\"}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        />\r\n      </Col>\r\n      {/* <div class=\"col ml-auto\" align=\"right\">\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}PDF</button>{' '}\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\">\r\n    <i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}Excel</button>\r\n</div> */}\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GlobalFilteringCompReq;","import React, { useMemo, useEffect, useState } from \"react\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useSortBy,\r\n} from \"react-table\";\r\nimport { CompletedRequestColumn } from \"./CompletedRequestColumn\";\r\nimport { Button, Table } from \"reactstrap\";\r\nimport GlobalFilteringCompReq from \"./GlobalFilteringCompReq\";\r\n\r\nexport const CompletedRequestTable = (prop) => {\r\n  const columns = useMemo(() => CompletedRequestColumn, []);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  // const getListDocumnetsFromServer = () => {\r\n  //   axios.get(properties.getCompletedRequests).then(\r\n  //     (response) => {\r\n  //       console.log(\"loading....\");\r\n  //       setData(response.data);\r\n  //       console.log(response.data);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setData(prop.dataArray);\r\n    console.info(\"state data[][][] : \" + JSON.stringify(data));\r\n  });\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    setGlobalFilter,\r\n    prepareRow,\r\n  } = useTable(\r\n    { columns, data },\r\n    useGlobalFilter,\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination,\r\n    usePagination\r\n  );\r\n\r\n  const { pageIndex, pageSize } = state;\r\n  const { globalFilter } = state;\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          marginLeft: \"83%\",\r\n          // alignSelf: \"self-end\",\r\n\r\n          marginTop: \"-7.5rem\",\r\n          marginBottom: \"4rem\",\r\n          width: \"15%\",\r\n        }}>\r\n        <GlobalFilteringCompReq\r\n          filter={globalFilter}\r\n          setFilter={setGlobalFilter}\r\n        />\r\n      </div>\r\n      <Table\r\n        size='sm'\r\n        striped={true}\r\n        style={{ marginTop: \"1rem\" }}\r\n        {...getTableProps()}>\r\n        <thead\r\n          style={{\r\n            background: \"#254a9e\",\r\n            color: \"white\",\r\n            fontSize: 14,\r\n            fontWeight: \"bold\",\r\n          }}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody style={{ fontSize: 14 }} {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td style={{ fontSize: 14 }} {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div className='text-center'>\r\n        <span>\r\n          page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          Go to page:{\" \"}\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\" }}\r\n          />\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}>\r\n          {[10, 25, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CompletedRequestTable } from \"./CompletedRequestTable\";\r\nimport { properties } from \"./properties\";\r\nimport axios from \"axios\";\r\nimport { Form, FormGroup, Label, Input, Col } from \"reactstrap\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nfunction CompletedRequest() {\r\n  const [compData, setCompData] = useState([]);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [data1, setData1] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data3, setData3] = useState([]);\r\n  const [building, setBuilding] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n\r\n\r\n  const completedData = {\r\n    mgmtCompId: data.mgmtCompId,\r\n    supplierId: data.supplierId,\r\n    buildingId: data.buildingId,\r\n    status: data.status,\r\n    budgetYear:data.budgetYear\r\n  };\r\n  //'http://localhost:3001/completedrequest/completedRequests'\r\n  const loadCompletedData = (completedData) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.completedRequestList, completedData, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          if (data.length) {\r\n            setCompData(data);\r\n            console.info(\"completed response << : \" + JSON.stringify(data));\r\n          } else {\r\n            alert(\"No Record Found\");\r\n            setCompData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log(data);\r\n    if (!data.mgmtCompId || !data.buildingId) {\r\n      event.preventDefault();\r\n      alert(\"Please select Mandatory fields\");\r\n      return false;\r\n    }\r\n    loadCompletedData(completedData);\r\n    event.preventDefault();\r\n  };\r\n  //'http://localhost:3001/completedrequest/pdfGenerate'\r\n  const downloadPDFData = (completedData) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.completedPdf, completedData, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.info(\"completed response << : \" + data);\r\n\r\n          const downloadLink = document.createElement(\"a\");\r\n          const fileName = \"CompletedPayments.pdf\";\r\n          const linkSource = `data:application/pdf;base64,${data}`;\r\n          downloadLink.href = linkSource;\r\n          downloadLink.download = fileName;\r\n          downloadLink.click();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const downloadPDF = (event) => {\r\n    downloadPDFData(completedData);\r\n    event.preventDefault();\r\n  };\r\n  //'http://localhost:3001/completedrequest/excelGenerate'\r\n  const ExcelData = (completedData) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.completedExcel, completedData, { headers: head })\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        console.log(\"completed data response\" + data);\r\n        console.table(\"completed>>>+++\" + JSON.stringify(data));\r\n\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = \"CompletedPayments.xlsx\";\r\n        const linkSource = `data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,${data}`;\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n      });\r\n  };\r\n  const ExcelSubmit = (event) => {\r\n    ExcelData(completedData);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const fetchManagementComany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    console.log(\"company\" + company.data);\r\n    setData1(company.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchManagementComany();\r\n  }, []);\r\n\r\n  const fetchSupplier = async () => {\r\n    const supplier = await axios.get(properties.supplierList);\r\n    console.log(\"supplier\" + supplier.data);\r\n    setData2(supplier.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchSupplier();\r\n  }, []);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    console.log(\"building\", building.data);\r\n    setData3(building.data);\r\n  };\r\n\r\n  const getYears = async () => {\r\n    var date = new Date();\r\n    let year = [];\r\n    for (var i = 2018; i <= date.getFullYear(); i++) {\r\n      year.push(i);\r\n    }\r\n    setYears(year.reverse());\r\n  };\r\n  useEffect(() =>{\r\n    getYears();\r\n},[]);\r\n\r\n  // useEffect(() => {\r\n  //   fetchBuilding();\r\n  // }, []);\r\n\r\n  function handle(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  //get building name based on management comp\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n    // setData({...data,['buildingId']:\"\"})\r\n    //   console.log('new Data '+data)\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='App' style={{ overflowX: \"hidden\" }}>\r\n        <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n          <FormGroup row>\r\n            <Label sm={2} className='required'>\r\n              Management Company\r\n            </Label>\r\n            <Col sm={2} style={{marginLeft:\"-1%\"}}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='mgmtCompId'\r\n                name='mgmtCompId'\r\n                value={data.mgmtCompId}\r\n                onChange={(e) => getBuildingNames(e)}>\r\n                <option selected disabled>\r\n                  Please select a company\r\n                </option>\r\n                {data1.map((opt) => (\r\n                  <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2}>Supplier Name</Label>\r\n            <Col sm={2} style={{marginLeft:\"-2%\"}}>\r\n              <Input\r\n                style={{ marginLeft: -20 }}\r\n                size='sm'\r\n                type='select'\r\n                id='supplierId'\r\n                value={data.supplierId}\r\n                size='sm'\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a supplier\r\n                </option>\r\n                {data2.map((opt2) => (\r\n                  <option value={opt2.supplierId}>{opt2.supplierName}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Col>\r\n              <button\r\n                size='sm'\r\n                style={{\r\n                  backgroundColor: \"#254a9e\",\r\n                  borderColor: \"#254a9e\",\r\n                  fontSize: \"11px\",\r\n                }}\r\n                type='submit'\r\n                class='btn btn-primary'>\r\n                Search\r\n              </button>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={2} className='required'>\r\n              Building Name\r\n            </Label>\r\n            <Col sm={2} style={{marginLeft:\"-1%\"}}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='buildingId'\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a building\r\n                </option>\r\n                {building.map((opt) => (\r\n                  <option value={opt.buildingId}>{opt.buildingName}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2}>Status</Label>\r\n            <Col sm={2} style={{marginLeft:\"-2%\"}}>\r\n              <Input\r\n                style={{ marginLeft: -20 }}\r\n                size='sm'\r\n                type='select'\r\n                value={data.status}\r\n                id='status'\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  {\" \"}\r\n                  Please select status\r\n                </option>\r\n                <option value='ALL'>ALL</option>\r\n                <option value='REJECTED'>REJECTED</option>\r\n                <option value='APPROVED'>APPROVED</option>\r\n              </Input>\r\n            </Col>\r\n\r\n            <div class='col ml-auto'>\r\n              <button\r\n                style={{ backgroundColor: \"#254a9e\", borderColor: \"#254a9e\" }}\r\n                type='button'\r\n                class='btn btn-primary btn-sm'\r\n                onClick={downloadPDF}>\r\n                <i class='fa fa-download' aria-hidden='true'></i> PDF\r\n              </button>{\" \"}\r\n              <button\r\n                style={{ backgroundColor: \"#254a9e\", borderColor: \"#254a9e\" }}\r\n                type='button'\r\n                class='btn btn-primary btn-sm'\r\n                onClick={ExcelSubmit}>\r\n                <i class='fa fa-download' aria-hidden='true'></i> EXCEL\r\n              </button>{\" \"}\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n          <Label sm={2}>Budget Year</Label>\r\n        <Col sm={2} style={{marginLeft:\"-1%\"}}>\r\n          <Input\r\n            type='select'\r\n            size='sm'\r\n            id='budgetYear'\r\n            name='budgetYear'\r\n            value={data.budgetYear}\r\n            onChange={(e)=>handle(e)}>\r\n            <option selected disabled>\r\n              Select Budget year\r\n            </option>\r\n            {years.map((year) => (\r\n              <option value={year}>{year}</option>\r\n            ))}\r\n          </Input>\r\n        </Col>\r\n          </FormGroup>\r\n\r\n        </Form>\r\n        <CompletedRequestTable dataArray={compData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CompletedRequest;\r\n","const ReportsColumn = [\r\n  {\r\n    Header: \"Management Company\",\r\n    accessor: \"mcNameEn\",\r\n  },\r\n  {\r\n    Header: \"Supplier Name\",\r\n    accessor: \"supplierName\",\r\n  },\r\n  {\r\n    Header: \"Budget year\",\r\n    accessor: \"budgetYear\",\r\n  },\r\n\r\n  {\r\n    Header: \"Invoice year\",\r\n    accessor: \"invoiceYear\",\r\n  },\r\n\r\n  {\r\n    Header: \"Total budget\",\r\n    accessor: \"totalBudget\",\r\n  },\r\n\r\n  {\r\n    Header: \"Consumed Amount\",\r\n    accessor: \"consumedAmount\",\r\n  },\r\n  {\r\n    Header: \"Balance Amount\",\r\n    accessor: \"balanceAmount\",\r\n  },\r\n];\r\nexport default ReportsColumn;\r\n","import React, {\r\n    useEffect,\r\n    useMemo,\r\n    useState,\r\n  } from 'react';\r\n  \r\n  \r\n  import {\r\n    usePagination,\r\n    useTable,\r\n  } from 'react-table';\r\n  import {\r\n    Button,\r\n    Table,\r\n  } from 'reactstrap';\r\n  \r\n  import ReportsColumn  from './ReportsColumn';\r\n  \r\n  export const ReportsTable = (prop) => {\r\n  \r\n      const columns = useMemo(()=> ReportsColumn,[])\r\n    \r\n      const[data , setData] =  useState([]);\r\n   \r\n     \r\n      useEffect(()=>{\r\n          setData(prop.dataArray);\r\n          console.info('state data[] : '+JSON.stringify(data));\r\n        });\r\n       \r\n  \r\n      const {\r\n          getTableProps,\r\n          getTableBodyProps,\r\n          headerGroups,\r\n          page,\r\n          nextPage,\r\n          previousPage,\r\n          canNextPage,\r\n          canPreviousPage,\r\n          pageOptions,\r\n          state,\r\n          gotoPage,\r\n          pageCount,\r\n          setPageSize,\r\n          prepareRow\r\n      } = useTable({\r\n          columns,\r\n          data\r\n      },\r\n      usePagination)\r\n  \r\n      const {pageIndex, pageSize} = state\r\n      \r\n      return (\r\n          <>\r\n          {console.info('from child component[] : '+JSON.stringify(prop.dataArray))}\r\n          <Table size='sm' striped={true} style={{marginTop: 3}} {...getTableProps()}>\r\n              <thead style={{background:'#254a9e', color:'white'}}>\r\n                  {headerGroups.map((headerGroup) =>\r\n                  <tr {...headerGroup.getHeaderGroupProps()}>\r\n                      {headerGroup.headers.map((column) => (\r\n                      <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                      \r\n                      ))}\r\n                      </tr>\r\n                  )}               \r\n              \r\n              </thead>\r\n              <tbody {...getTableBodyProps()}>\r\n                  \r\n                  {page.map((row)=> {\r\n                      prepareRow(row)\r\n                      return (\r\n                      <tr {...row.getRowProps()}>\r\n                          {row.cells.map((cell) => {\r\n                              return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                  </tr>\r\n                  )\r\n              })}\r\n              </tbody>\r\n      \r\n          </Table>\r\n          <div className=\"text-center\">\r\n          <span>\r\n              page{' '}\r\n              <strong>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n              </strong>{' '}\r\n              </span>\r\n              <span>\r\n                   Go to page:{' '}\r\n                  <input\r\n                  type='number'\r\n                  defaultValue={pageIndex + 1}\r\n                  onChange={(e) => {\r\n                      const pageNumber = e.target.value ? Number(e.target.value)-1 : 0\r\n                      gotoPage(pageNumber)\r\n                  }}\r\n                  style={{width: '50px'}}\r\n                  />\r\n              </span>\r\n              <select\r\n              value={pageSize}\r\n              onChange={(e) => setPageSize(Number(e.target.value))}>\r\n                  {[10,25,50].map((pageSize)=> (\r\n                      <option key={pageSize} value={pageSize}>Show {pageSize}</option>\r\n                  ))}\r\n              </select>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> previousPage()} disabled={!canPreviousPage}>Previous</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> nextPage()} disabled={!canNextPage}>Next</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(pageCount-1)} disabled={!canNextPage}>{'>>'}</Button>\r\n          </div>\r\n          \r\n          </>\r\n      )\r\n  }\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { ReportsTable } from \"./ReportsTable\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nexport default function ReportsForm() {\r\n  const [reportData, setReportData] = useState([]);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const [data1, setData1] = useState([]);\r\n\r\n  const [data2, setData2] = useState([]);\r\n\r\n  const report = {\r\n    mgmtCompId: data.mgmtCompId,\r\n    supplierId: data.supplierId,\r\n    budgetYear: data.budgetYear,\r\n    invoiceYear: data.invoiceYear,\r\n    //budgetRangeFrom: data.budgetRangeFrom,\r\n    //budgetRangeTo: data.budgetRangeTo,\r\n  };\r\n\r\n  const loadReportData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.generateReports, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          if (data.length) {\r\n            setReportData(data);\r\n            console.info(\"report response << : \" + JSON.stringify(data));\r\n          } else {\r\n            alert(\"No Record Found\");\r\n            setReportData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!data.mgmtCompId) {\r\n      alert(\"Please select Management Company\");\r\n      return false;\r\n    } else {\r\n      loadReportData(report);\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const downloadPDFData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.reportsPDF, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.info(\"report response << : \" + data);\r\n\r\n          const downloadLink = document.createElement(\"a\");\r\n          const fileName = \"Report.pdf\";\r\n          const linkSource = `data:application/pdf;base64,${data}`;\r\n          downloadLink.href = linkSource;\r\n          downloadLink.download = fileName;\r\n          downloadLink.click();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const downloadPDF = (event) => {\r\n    downloadPDFData(report);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const ExcelData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.reportsExcel, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        console.log(\"report data response\" + data);\r\n        console.table(\"responseData>>>+++\" + JSON.stringify(data));\r\n\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = \"Report.xlsx\";\r\n        const linkSource = `data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,${data}`;\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n      });\r\n  };\r\n\r\n  const ExcelSubmit = (event) => {\r\n    ExcelData(report);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const fetchManagementComany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    console.log(\"company\" + company.data);\r\n    setData1(company.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchManagementComany();\r\n  }, []);\r\n\r\n  const fetchSupplier = async () => {\r\n    const supplier = await axios.get(properties.supplierList);\r\n    console.log(\"supplier\" + supplier.data);\r\n    setData2(supplier.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchSupplier();\r\n  }, []);\r\n\r\n  function handle(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='App' style={{ overflowX: \"hidden\" }}>\r\n        <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n          <FormGroup row>\r\n            <Label sm={2} className='required'>\r\n              Management Company\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='mgmtCompId'\r\n                value={data.mgmtCompId}\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a company\r\n                </option>\r\n                {data1.map((opt) => (\r\n                  <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2}>Budget Year</Label>\r\n            <Col sm={2} style={{ marginLeft: \"-7%\" }}>\r\n              <Input\r\n                type='number'\r\n                maxLength={4}\r\n                size='sm'\r\n                id='budgetYear'\r\n                value={data.budgetYear}\r\n                onChange={(e) => handle(e)}\r\n              />\r\n            </Col>\r\n\r\n            <Col >\r\n              <button\r\n                size='sm'\r\n                style={{\r\n                  backgroundColor: \"#254a9e\",\r\n                  borderColor: \"#254a9e\",\r\n                  fontSize: \"11px\",\r\n                }}\r\n                type='submit'\r\n                class='btn btn-primary'>\r\n                Generate Report\r\n              </button>\r\n            </Col>\r\n\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={2}>Supplier Name</Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='supplierId'\r\n                value={data.supplierId}\r\n                size='sm'\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a supplier\r\n                </option>\r\n                {data2.map((opt2) => (\r\n                  <option value={opt2.supplierId}>{opt2.supplierName}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2}>Invoice Year</Label>\r\n            <Col sm={2} style={{ marginLeft: \"-7%\" }}>\r\n              <Input\r\n                type='number'\r\n                maxLength={4}\r\n                size='sm'\r\n                id='invoiceYear'\r\n                value={data.invoiceYear}\r\n                onChange={(e) => handle(e)}\r\n              />\r\n            </Col>\r\n\r\n            <div class='col ml-auto' >\r\n              <button\r\n                style={{ backgroundColor: \"#254a9e\", borderColor: \"#254a9e\" }}\r\n                type='button'\r\n                class='btn btn-primary btn-sm'\r\n                onClick={downloadPDF}>\r\n                <i class='fa fa-download' aria-hidden='true'></i> PDF\r\n              </button>{\" \"}\r\n              <button\r\n                style={{ backgroundColor: \"#254a9e\", borderColor: \"#254a9e\" }}\r\n                type='button'\r\n                class='btn btn-primary btn-sm'\r\n                onClick={ExcelSubmit}>\r\n                <i class='fa fa-download' aria-hidden='true'></i> EXCEL\r\n              </button>{\" \"}\r\n            </div>\r\n\r\n          </FormGroup>\r\n          {/*<FormGroup>\r\n            <Col sm={2} style={{ marginLeft: \"60%\" }}>\r\n              <button\r\n                size='sm'\r\n                style={{\r\n                  backgroundColor: \"#254a9e\",\r\n                  borderColor: \"#254a9e\",\r\n                  fontSize: \"11px\",\r\n                  // marginLeft: \"10%\",\r\n                }}\r\n                type='submit'\r\n                class='btn btn-primary'>\r\n                Generate Report\r\n              </button>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <div style={{ marginTop: \"-3rem\" }}>\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                borderColor: \"#254a9e\",\r\n                marginLeft: \"75%\",\r\n              }}\r\n              type='button'\r\n              class='btn btn-primary btn-sm'\r\n              onClick={downloadPDF}>\r\n              <i class='fa fa-download' aria-hidden='true'></i> PDF\r\n            </button>{\" \"}\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                marginLeft: \"10px\",\r\n                borderColor: \"#254a9e\",\r\n              }}\r\n              type='button'\r\n              class='btn btn-primary btn-sm'\r\n              onClick={ExcelSubmit}>\r\n              <i class='fa fa-download' aria-hidden='true'></i> EXCEL\r\n            </button>{\" \"}\r\n          </div>*/}\r\n          {/* </FormGroup>\r\n           <FormGroup>\r\n          <Col sm={11}>\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                borderColor: \"#254a9e\",\r\n                fontSize: \"11px\",\r\n                marginLeft: \"65%\",\r\n              }}\r\n              type='submit'\r\n              class='btn btn-primary'>\r\n              Generate Report\r\n            </button>\r\n          </Col>\r\n           </FormGroup> \r\n          <div style={{ marginTop: \"-2rem\" }}>\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                marginLeft: \"80%\",\r\n                borderColor: \"#254a9e\",\r\n              }}\r\n              type='button'\r\n              class='btn btn-primary btn-sm'\r\n              onClick={downloadPDF}>\r\n              <i class='fa fa-download' aria-hidden='true'></i> PDF\r\n            </button>{\" \"}\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                marginLeft: \"10px\",\r\n                borderColor: \"#254a9e\",\r\n              }}\r\n              type='button'\r\n              class='btn btn-primary btn-sm'\r\n              onClick={ExcelSubmit}>\r\n              <i class='fa fa-download' aria-hidden='true'></i> EXCEL\r\n            </button>{\" \"}\r\n          </div> */}\r\n        </Form>\r\n\r\n        <ReportsTable dataArray={reportData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const TransactionalReportColumn = [\r\n  {\r\n    Header: \"Total Transaction\",\r\n    accessor: \"totalTransaction\",\r\n  },\r\n  {\r\n    Header: \"In-Progress\",\r\n    accessor: \"inProgress\",\r\n  },\r\n  {\r\n    Header: \"Exception\",\r\n    accessor: \"exception\",\r\n  },\r\n  {\r\n    Header: \"Approved\",\r\n    accessor: \"approved\",\r\n  },\r\n\r\n  {\r\n    Header: \"Rejected\",\r\n    accessor: \"rejected\",\r\n  },\r\n\r\n  {\r\n    Header: \"User Name\",\r\n    accessor: \"userName\",\r\n  },\r\n];\r\nexport default TransactionalReportColumn;\r\n","import React, {\r\n    useEffect,\r\n    useMemo,\r\n    useState,\r\n  } from 'react';\r\n  \r\n  \r\n  import {\r\n    usePagination,\r\n    useTable,\r\n  } from 'react-table';\r\n  import {\r\n    Button,\r\n    Table,\r\n  } from 'reactstrap';\r\n  \r\n  import TransactionalReportColumn  from './TransactionalReportColumn';\r\n  \r\n  export const TransactionalReportTable = (prop) => {\r\n  \r\n      const columns = useMemo(()=> TransactionalReportColumn,[])\r\n    \r\n      const[data , setData] =  useState([]);\r\n   \r\n     \r\n      useEffect(()=>{\r\n          setData(prop.dataArray);\r\n          console.info('state data[] : '+JSON.stringify(data));\r\n        });\r\n       \r\n  \r\n      const {\r\n          getTableProps,\r\n          getTableBodyProps,\r\n          headerGroups,\r\n          page,\r\n          nextPage,\r\n          previousPage,\r\n          canNextPage,\r\n          canPreviousPage,\r\n          pageOptions,\r\n          state,\r\n          gotoPage,\r\n          pageCount,\r\n          setPageSize,\r\n          prepareRow\r\n      } = useTable({\r\n          columns,\r\n          data\r\n      },\r\n      usePagination)\r\n  \r\n      const {pageIndex, pageSize} = state\r\n      \r\n      return (\r\n          <>\r\n          {console.info('from child component[] : '+JSON.stringify(prop.dataArray))}\r\n          <Table size='sm' striped={true} style={{marginTop: 3}} {...getTableProps()}>\r\n              <thead style={{background:'#254a9e', color:'white'}}>\r\n                  {headerGroups.map((headerGroup) =>\r\n                  <tr {...headerGroup.getHeaderGroupProps()}>\r\n                      {headerGroup.headers.map((column) => (\r\n                      <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                      \r\n                      ))}\r\n                      </tr>\r\n                  )}               \r\n              \r\n              </thead>\r\n              <tbody {...getTableBodyProps()}>\r\n                  \r\n                  {page.map((row)=> {\r\n                      prepareRow(row)\r\n                      return (\r\n                      <tr {...row.getRowProps()}>\r\n                          {row.cells.map((cell) => {\r\n                              return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                  </tr>\r\n                  )\r\n              })}\r\n              </tbody>\r\n      \r\n          </Table>\r\n          <div className=\"text-center\">\r\n          <span>\r\n              page{' '}\r\n              <strong>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n              </strong>{' '}\r\n              </span>\r\n              <span>\r\n                   Go to page:{' '}\r\n                  <input\r\n                  type='number'\r\n                  defaultValue={pageIndex + 1}\r\n                  onChange={(e) => {\r\n                      const pageNumber = e.target.value ? Number(e.target.value)-1 : 0\r\n                      gotoPage(pageNumber)\r\n                  }}\r\n                  style={{width: '50px'}}\r\n                  />\r\n              </span>\r\n              <select\r\n              value={pageSize}\r\n              onChange={(e) => setPageSize(Number(e.target.value))}>\r\n                  {[10,25,50].map((pageSize)=> (\r\n                      <option key={pageSize} value={pageSize}>Show {pageSize}</option>\r\n                  ))}\r\n              </select>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> previousPage()} disabled={!canPreviousPage}>Previous</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> nextPage()} disabled={!canNextPage}>Next</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(pageCount-1)} disabled={!canNextPage}>{'>>'}</Button>\r\n          </div>\r\n          \r\n          </>\r\n      )\r\n  }\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Col } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { TransactionalReportTable } from \"./TransactionalReportTable\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nfunction TransactionalReport() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [reportData, setReportData] = useState([]);\r\n\r\n  const report = {\r\n    transactionFrom: data.transactionFrom,\r\n    transactionTo: data.transactionTo,\r\n  };\r\n\r\n  const loadReportData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.generateTransactionalReports, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          if (data.length) {\r\n            setReportData(data);\r\n            console.info(\"report response << : \" + JSON.stringify(data));\r\n          } else {\r\n            alert(\"No Record Found\");\r\n            setReportData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!data.transactionFrom || !data.transactionTo) {\r\n      alert(\"Please select mandatory filed\");\r\n      return false;\r\n    } else {\r\n      loadReportData(report);\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const downloadPDFData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.transactionalPdf, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.info(\"report response << : \" + data);\r\n\r\n          const downloadLink = document.createElement(\"a\");\r\n          const fileName = \"TransactionalReport.pdf\";\r\n          const linkSource = `data:application/pdf;base64,${data}`;\r\n          downloadLink.href = linkSource;\r\n          downloadLink.download = fileName;\r\n          downloadLink.click();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const downloadPDF = (event) => {\r\n    downloadPDFData(report);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const ExcelData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.transactionalExcel, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        console.log(\"report data response\" + data);\r\n        console.table(\"responseData>>>+++\" + JSON.stringify(data));\r\n\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = \"TransactionalExcel.xlsx\";\r\n        const linkSource = `data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,${data}`;\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n      });\r\n  };\r\n\r\n  const ExcelSubmit = (event) => {\r\n    ExcelData(report);\r\n    event.preventDefault();\r\n  };\r\n\r\n  function handle(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  return (\r\n    <div className='App' style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n        <FormGroup row>\r\n          <Label sm={2} style={{ marginRight: -60 }} className='required'>\r\n            Transaction From\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='date'\r\n              size='sm'\r\n              id='transactionFrom'\r\n              value={data.transactionFrom}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginRight: -70 }} className='required'>\r\n            Transaction To\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='date'\r\n              size='sm'\r\n              id='transactionTo'\r\n              value={data.transactionTo}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Col sm={2}>\r\n            <button\r\n              size='sm'\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                borderColor: \"#254a9e\",\r\n                fontSize: \"11px\",\r\n                marginLeft: \"10%\",\r\n              }}\r\n              type='submit'\r\n              class='btn btn-primary'>\r\n              Generate Report\r\n            </button>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <div style={{ marginTop: \"-3.4rem\" }}>\r\n          <button\r\n            style={{\r\n              backgroundColor: \"#254a9e\",\r\n              borderColor: \"#254a9e\",\r\n              marginLeft: \"75%\",\r\n            }}\r\n            type='button'\r\n            class='btn btn-primary btn-sm'\r\n            onClick={downloadPDF}>\r\n            <i class='fa fa-download' aria-hidden='true'></i> PDF\r\n          </button>{\" \"}\r\n          <button\r\n            style={{\r\n              backgroundColor: \"#254a9e\",\r\n              marginLeft: \"10px\",\r\n              borderColor: \"#254a9e\",\r\n            }}\r\n            type='button'\r\n            class='btn btn-primary btn-sm'\r\n            onClick={ExcelSubmit}>\r\n            <i class='fa fa-download' aria-hidden='true'></i> EXCEL\r\n          </button>{\" \"}\r\n        </div>\r\n      </Form>\r\n\r\n      <TransactionalReportTable dataArray={reportData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionalReport;\r\n","import React from 'react';\r\n\r\nimport {\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n} from '@material-ui/core';\r\nimport ReportsForm from './ReportsForm';\r\nimport TransactionalReport from './TransactionalReport';\r\n\r\n\r\nconst ReportsTab = () => {\r\n    const [tbVal, setVal] = React.useState(0);\r\n\r\n    const moveTab = (e, val) => {\r\n        setVal(val)\r\n    }\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\" style={{marginTop:3 , backgroundColor:'#254a9e',maxHeight:'35px'}}>\r\n                <Tabs TabIndicatorProps={{style: {background:'white',marginBottom:'11px',}}} style={{height:'5px'}} value={tbVal} onChange={moveTab}>\r\n                    <Tab label=\"Budget Report\" style={{fontWeight:'bold',minWidth:\"2%\",fontSize:'13px',paddingTop:'0px' ,paddingBottom:'-40px',paddingLeft:'10px',paddingRight:'0px'}}/>\r\n                    <Tab label=\"Transactional Report\" style={{fontWeight:'bold',minWidth:\"2%\",fontSize:'13px' ,paddingTop:'0px' ,paddingBottom:'-40px',paddingLeft:'10px',paddingRight:'0px'}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {tbVal=== 0 && <ReportsForm/>}\r\n            {tbVal=== 1 && <TransactionalReport/>}\r\n            \r\n        </>\r\n    );\r\n}\r\nexport default ReportsTab\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport MuiTableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// Icons\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  selectTableCell: {\r\n    width: 60,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40,\r\n  },\r\n  input: {\r\n    width: 140,\r\n    height: 40,\r\n  },\r\n  saveButton: {\r\n    \"&:hover\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n  cancleButton: {\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  editButton: {\r\n    \"&:hover\": {\r\n      color: \"#1888DD\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomTableCell = ({\r\n  row,\r\n  name,\r\n  disabled,\r\n  onChange,\r\n  calculateTotalAmount,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { isEditMode } = row;\r\n  return (\r\n    <TableCell align='left' className={classes.tableCell}>\r\n      {isEditMode ? (\r\n        <Input\r\n          value={row[name]}\r\n          name={name}\r\n          disabled={disabled}\r\n          onChange={(e) => onChange(e, row)}\r\n          onBlur={(e) => calculateTotalAmount(e, row)}\r\n          className={classes.input}\r\n        />\r\n      ) : (\r\n        row[name]\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nfunction BudgetDetailsTable() {\r\n  const [data, setData] = useState({\r\n    mgmtCompId: \"\",\r\n    buildingId: \"\",\r\n    budgetYear: \"\",\r\n  });\r\n  const [building, setBuilding] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n  let [tableData, setTableData] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n\r\n  const [previous, setPrevious] = React.useState({});\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    setBuilding(building.data);\r\n    // setBuilding([]);\r\n  };\r\n  const fetchCompany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    setCompany(company.data);\r\n  };\r\n  //get building name based on management comp\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    // console.log(data);\r\n    // console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n  const getYears = async () => {\r\n    var date = new Date();\r\n    let year = [];\r\n    for (var i = 2018; i <= date.getFullYear(); i++) {\r\n      year.push(i);\r\n    }\r\n    setYears(year.reverse());\r\n  };\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n    fetchCompany();\r\n    getYears();\r\n  }, []);\r\n\r\n  //handle input\r\n  let handleInput = (e) => {\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n  let getDetails = async (e) => {\r\n    e.preventDefault();\r\n    if (!data.mgmtCompId || !data.buildingId || !data.budgetYear) {\r\n      alert(\"Please select mandatory fields\");\r\n      return false;\r\n    }\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    tableData = await axios.post(properties.budgetDetails, data, {\r\n      headers: head,\r\n    });\r\n    if (tableData.data) {\r\n      setRows(tableData.data);\r\n      console.log(tableData.data);\r\n    }\r\n    if (tableData.data.length <= 0) {\r\n      alert(\"No Record found\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //table operations\r\n  const classes = useStyles();\r\n  const onToggleEditMode = (budgetItemId, mode) => {\r\n    setRows((state) => {\r\n      return rows.map((row) => {\r\n        if (row.budgetItemId === budgetItemId) {\r\n          if (mode == \"save\") {\r\n            // delete row[\"isEditMode\"];\r\n            console.log(\"updating budget details...\");\r\n            let head = {\r\n              token: ReactSession.get(\"token\"),\r\n              username: ReactSession.get(\"username\"),\r\n            };\r\n            axios\r\n              .put(properties.updateBudget, row, { headers: head })\r\n              .then((res) => alert(\"Budget Details data updated Successfully\"))\r\n              .catch((err) =>\r\n                alert(\r\n                  \"Failed to update Budget Details Please try after sometime\"\r\n                )\r\n              );\r\n          }\r\n          return { ...row, isEditMode: !row.isEditMode };\r\n        }\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.budgetItemId]) {\r\n      setPrevious((state) => ({ ...state, [row.budgetItemId]: row }));\r\n    }\r\n\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    const { budgetItemId } = row;\r\n    const newRows = rows.map((row) => {\r\n      if (row.budgetItemId === budgetItemId) {\r\n        return { ...row, [name]: value };\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n  };\r\n\r\n  const calculateTotalAmount = (e, row) => {\r\n    console.log(\"calculating total Amount....\");\r\n    const { budgetItemId } = row;\r\n\r\n    const newRows = rows.map((row) => {\r\n      if (row.budgetItemId === budgetItemId) {\r\n        row.balanceAmount = row.totalBudget - row.consumedAmount;\r\n        return row;\r\n      }\r\n      return row;\r\n    });\r\n\r\n    setRows(newRows);\r\n  };\r\n  const onRevert = (budgetItemId) => {\r\n    const newRows = rows.map((row) => {\r\n      if (row.budgetItemId === budgetItemId) {\r\n        return previous[budgetItemId] ? previous[budgetItemId] : row;\r\n      }\r\n      return row;\r\n    });\r\n    console.log(newRows);\r\n    setRows(newRows);\r\n    setPrevious((state) => {\r\n      delete state[budgetItemId];\r\n      return state;\r\n    });\r\n    onToggleEditMode(budgetItemId, \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form className='my-3 mt-5 ml-2' inline>\r\n        <FormGroup className='mb-2  mb-sm-0'>\r\n          <Label for='managementCompany' className='required'>\r\n            Management Company Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='mgmtCompId'\r\n              name='mgmtCompId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              //onChange={handleInput}\r\n              onChange={(e) => getBuildingNames(e)}>\r\n              <option selected disabled>\r\n                Select a Management company\r\n              </option>\r\n              {company.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup className='mb-2 mb-sm-0'>\r\n          <Label for='buildingName' className='required'>\r\n            Building Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='buildingId'\r\n              name='buildingId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              onChange={handleInput}>\r\n              <option selected disabled>\r\n                Select a building name\r\n              </option>\r\n              {building.map((opt2) => (\r\n                <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup className='mb-5 mb-sm-0'>\r\n          <Label for='budgetYear' className='required'>\r\n            Budget Year\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='budgetYear'\r\n              name='budgetYear'\r\n              onChange={handleInput}\r\n              style={{ width: \"11.5rem\" }}>\r\n              <option selected disabled>\r\n                Select Budget year\r\n              </option>\r\n              {years.map((year) => (\r\n                <option value={year}>{year}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <Button\r\n          style={{\r\n            background: \"#254a9e\",\r\n            color: \"white\",\r\n            // position: \"relative\",\r\n            // marginTop: \"1rem\",\r\n            marginLeft: \"0.2rem\",\r\n          }}\r\n          onClick={getDetails}>\r\n          Get Details\r\n        </Button>\r\n      </Form>\r\n      <p className='mb-lg-5' />\r\n\r\n      {/* Table */}\r\n      <Paper className={classes.root} style={{ marginTop: \"-13px\" }}>\r\n        <Table className={classes.table}>\r\n          <TableHead\r\n            style={{\r\n              backgroundColor: \"#254A9E\",\r\n            }}>\r\n            <TableRow>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Action\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Service Code\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Service Name\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Usage\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Period Code\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Amount\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                VAT\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Total Amount\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Consumed Amount\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Balance Amount\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.budgetItemId}>\r\n                <TableCell className={classes.selectTableCell}>\r\n                  {row.isEditMode ? (\r\n                    <>\r\n                      <Tooltip title='Save'>\r\n                        <IconButton\r\n                          aria-label='done'\r\n                          className={classes.saveButton}\r\n                          onClick={() =>\r\n                            onToggleEditMode(row.budgetItemId, \"save\")\r\n                          }>\r\n                          <DoneIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      {/* <Tooltip title='Cancel'>\r\n                        <IconButton\r\n                          aria-label='revert'\r\n                          className={classes.cancleButton}\r\n                          onClick={() => onRevert(row.budgetItemId)}>\r\n                          <RevertIcon />\r\n                        </IconButton>\r\n                      </Tooltip> */}\r\n                    </>\r\n                    ) : (\r\n                    <Tooltip title='Edit'>\r\n                      <IconButton\r\n                        aria-label='delete'\r\n                        className={classes.editButton}\r\n                        onClick={() =>\r\n                          onToggleEditMode(row.budgetItemId, \"edit\")\r\n                        }>\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  )}\r\n                </TableCell>\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"serviceCode\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"serviceNameEn\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"usageEn\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"budgetPeriodCode\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"totalCost\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"vatAmount\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"totalBudget\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"consumedAmount\",\r\n                    disabled: \"\",\r\n                    onChange,\r\n                    calculateTotalAmount,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"balanceAmount\",\r\n                    disabled: \"\",\r\n                    onChange,\r\n                    calculateTotalAmount,\r\n                  }}\r\n                />\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BudgetDetailsTable;\r\n","import React from \"react\";\r\nconst Popup =  props => {\r\n    return (\r\n        <div className=\"popup-box\" >\r\n            <div className=\"box\">\r\n                <button className=\"btn-close\" onClick={props.handleClose}>X</button>\r\n                {props.content}\r\n              \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Popup;\r\n\r\n","\r\n// import React, { useState } from \"react\";\r\nimport Popup from \"./Popup\";\r\nimport { Alert, Button, Col, Dropdown, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { properties } from \"./properties\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nexport const ReserveFundButtonAdvance = (props) => {\r\n    const [building, setBuilding] = useState([]);\r\n    const [company, setCompany] = useState([]);\r\n    const [responseData, setResponseData] = useState([]);\r\n    const [dropDownData, setDropDownData] = useState({\r\n        mgmtCompId: \"\",\r\n        buildingId: \"\",\r\n    });\r\n    const fetchBuilding = async (e) => {\r\n    //     e.preventDefault();\r\n    //     var name = e.target.name;\r\n    // var value = e.target.value;\r\n        //const building = await axios.get(properties.buildingNames);\r\n        const building = await axios.get(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n         setBuilding(building.data);\r\n        // setBuilding([]);\r\n      };\r\n      const fetchCompany = async () => {\r\n        const company = await axios.get(properties.managementCompanyList);\r\n        setCompany(company.data);\r\n        console.log(company.data);\r\n      };    \r\n      useEffect(() => {\r\n        fetchBuilding();\r\n        fetchCompany();\r\n      }, []);\r\n\r\n    let handleInput = (e) => {\r\n        var name = e.target.name;\r\n        var value = e.target.value;\r\n        // if(value != null ){\r\n        // }\r\n        console.log(\"name and value\",name,value);\r\n        setDropDownData({ ...dropDownData, [name]: value });\r\n        console.log(dropDownData);\r\n    };\r\n    let save = async (e) => {\r\n        e.preventDefault();\r\n        console.log(dropDownData);\r\n        \r\n        if(!dropDownData.buildingId && !dropDownData.mgmtCompId && !dropDownData.accountNumber && !dropDownData.branchCode\r\n            && !dropDownData.cifNumber && !dropDownData.reserveAccountNumber)\r\n            {\r\n                alert(\"Please fill all the mandatory fields\");\r\n                return false;\r\n            }\r\n        if(!dropDownData.accountNumber)\r\n        {\r\n            alert(\"Please enter account number\");\r\n            return false;\r\n        }\r\n         if(!dropDownData.cifNumber)\r\n        {\r\n            alert(\"Please enter cif  number\");\r\n            return false;\r\n        }\r\n        \r\n         if(!dropDownData.mgmtCompId)\r\n        {\r\n            alert(\"Please select managemnet company\");\r\n            return false;\r\n        }\r\n        if(!dropDownData.buildingId)\r\n        {\r\n            alert(\"Please select building name\");\r\n            return false;\r\n        }\r\n         if(!dropDownData.reserveAccountNumber)\r\n        {\r\n            alert(\"Please enter reserve account number\");\r\n            return false;\r\n        }\r\n         if(!dropDownData.branchCode)\r\n        {\r\n            alert(\"Please enter branch code\");\r\n            return false;\r\n        }\r\n        if(dropDownData.cifNumber.length!=9)\r\n        {\r\n            alert(\" CIF number must be 9 digit\");\r\n            return false;\r\n        }\r\n        if((!/^[0-9]+$/.test(dropDownData.cifNumber))){\r\n            alert(\"CIF number does not accept any characters, Kindly enter only numbers \")\r\n            return false;\r\n        }\r\n        if((!/^0\\d{8}$/.test(dropDownData.cifNumber)))\r\n        {\r\n            alert(\"CIF number must be starts with 0\");\r\n            return false;\r\n        }\r\n        if(dropDownData.accountNumber.length!=12  )\r\n        {\r\n            alert(\" Account number must be 12 digit\");\r\n            return false;\r\n        }\r\n        if((!/^[0-9]+$/.test(dropDownData.accountNumber))){\r\n            alert(\"Account number does not accept any characters, Kindly enter only numbers \")\r\n            return false;\r\n        }\r\n        if((!/^0\\d{11}$/.test(dropDownData.accountNumber)))\r\n        {\r\n            alert(\"Account number must be starts with 0\");\r\n            return false;\r\n        }\r\n        if(dropDownData.reserveAccountNumber.length!=12)\r\n        {\r\n            alert(\" Reserve account number must be 12 digit\");\r\n            return false;\r\n        }\r\n        if((!/^[0-9]+$/.test(dropDownData.reserveAccountNumber))){\r\n            alert(\"Reserve account number does not accept any characters, Kindly enter only numbers \")\r\n            return false;\r\n        }\r\n        if((!/^0\\d{11}$/.test(dropDownData.reserveAccountNumber)))\r\n        {\r\n            alert(\"Reserve account number must be starts with 0\");\r\n            return false;\r\n        }\r\n        if((!/^[0-9]+$/.test(dropDownData.branchCode))){\r\n            alert(\"Branch Code does not accept any characters, Kindly enter only numbers \")\r\n            return false;\r\n        }\r\n        if((!/^0\\d{2}$/.test(dropDownData.branchCode)))\r\n        {\r\n            alert(\"Branch code must be starts with 0\");\r\n            return false;\r\n        }\r\n         if(dropDownData.buildingId != null && dropDownData.mgmtCompId != null && dropDownData.accountNumber!=null && dropDownData.branchCode != null\r\n            && dropDownData.cifNumber !=null && dropDownData.reserveAccountNumber !=null)\r\n        {   \r\n            alert(\"Your data had saved successfully\");\r\n            setIsOpen(false);\r\n        }\r\n       else{\r\n        alert(\"Data has not save\");\r\n       }\r\n        const requestData = {\r\n            // method: 'POST',\r\n            // headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n            // title: 'mgmtCompId':202  'buildingId':104 ;\r\n            // reserve_Fund_Id:12, \r\n            \r\n            cif_Number: dropDownData.cifNumber,\r\n            mgmnt_Comp_Id: dropDownData.mgmtCompId,\r\n            building_Id: dropDownData.buildingId,\r\n            account_Number: dropDownData.accountNumber,\r\n            reserve_Account_Number: dropDownData.reserveAccountNumber,\r\n            is_Active: 'Y',\r\n            branch_Code: dropDownData.branchCode\r\n        };\r\n        //if(dropDownData.accountNumber.length==12 && dropDownData.reserveAccountNumber.length==12){\r\n\r\n        await axios.post(\r\n            // `${properties.dataURl}/dataSave`,\r\n            properties.saveReserveFundData,\r\n            requestData).then(response => setResponseData(response.data));\r\n        console.log(\">>>>>>>>>>.\", responseData);\r\n        // }\r\n        // else{\r\n        //     alert(\"Account Number and Reserve Account number must be 12 Digit\");\r\n        //     return false;\r\n        // }\r\n        //get API data\r\n        getFundDetails();\r\n        setIsOpen(false);\r\n    }   \r\n    let cancel = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    let getFundDetails = async () => {\r\n        const requestOptions = {\r\n            // method: 'POST',\r\n            // headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n            // title: 'mgmtCompId':202  'buildingId':104 ;\r\n           \r\n            mgmtCompId: dropDownData.mgmtCompId,\r\n            buildingId: dropDownData.buildingId\r\n        };\r\n        await axios.post(\r\n            `${properties.dataURl}/data`,\r\n            requestOptions).then(response => setResponseData(response.data));\r\n        console.log(\">>>>>>>>>>.\", responseData);\r\n    }\r\n    let getBuildingNames = async (e) => {\r\n        e.preventDefault();\r\n        var name = e.target.name;\r\n        var value = e.target.value;\r\n        setDropDownData({ ...dropDownData, [name]: value });\r\n        console.log(dropDownData);\r\n        console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n        const building = await axios.get(\r\n            `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n        );\r\n        console.log(\"Mapped building names :\" + building.data);\r\n        if (building.data) \r\n        setBuilding(building.data);\r\n        else setBuilding([]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        //getListDocumnetsFromServer();\r\n        fetchBuilding();\r\n        fetchCompany();\r\n      }, []);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const togglePopup = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    return (\r\n        <>\r\n            <Button style={{ background: \"#254a9e\", color: \"white\", float: \"right\" }} onClick={togglePopup}>ADD</Button>\r\n            {isOpen &&\r\n                <Popup\r\n                    handleClose={togglePopup}\r\n                    content={\r\n                        <Form className='my-1 ml-1'  >\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' for=\"accountNumber\" style={{marginLeft:\"15px\"} } >Account Number</Label>\r\n                                <Col>                               \r\n                                    <Input className='formInputs' type='text' id='accountNumber' name='accountNumber'  onChange={(e) => handleInput(e)}\r\n                                   style={{marginLeft:\"20%\"}} required > \r\n                                    {company.map((opt) => (\r\n                                        <option value={opt.reserveFundId}></option>\r\n                                    ))}\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' for=\"cifNumber\" style={{marginLeft:\"15px\"}}>CIF Number</Label>\r\n                                <Col>\r\n                                    <Input className='formInputs' type='text' id='cifNumber' name='cifNumber' style={{marginLeft:\"25%\"}} onChange={(e) => handleInput(e)}  />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' style={{marginLeft:\"17px\"}}>Management Company Name</Label>\r\n                                <Col>\r\n                                    <Input className='formInput' type='select'\r\n                                        id='mgmtCompId'\r\n                                        name='mgmtCompId'\r\n                                        // value={company.mgmtCompId}\r\n                                       // onChange={(e) => handleInput(e)}\r\n                                      \r\n                                        onChange={(e) => {\r\n                                            getBuildingNames(e);\r\n                                        }}\r\n                                        style={{ width: \"20rem\",marginLeft:\"1%\" }} >\r\n\r\n                                        <option selected disabled >\r\n                                            Please select a company\r\n                                        </option>\r\n                                        {/* <option value='201'>RDK OWNERS ASSOCIATION MANAGEMENT LLC</option>\r\n                                        <option value='202'>KAIZEN OWNER ASSOCIATION MANAGEMENT</option>\r\n                                        <option value='203'>Better Communities Owner Association</option>\r\n                                        <option value='204'>STRATUM OWNERS ASSOCIATION MANAGEMENT SERVICES LLC</option>\r\n                                         <option value='205'>SG Community Management Services LLC</option> */}\r\n                                        {company.map((opt) => (\r\n                                            <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' style={{marginLeft:\"15px\"}}>Building Name</Label>\r\n                                <Col >\r\n                                    <Input className='formInput'\r\n                                        type='select'\r\n                                        id='buildingId'\r\n                                        name='buildingId'\r\n                                        // value={dropDownData.mgmtCompId}\r\n                                        onChange={(e) => handleInput(e)}\r\n                                        style={{ width: \"20rem\",marginLeft:\"22.5%\" }}>\r\n\r\n                                        <option selected disabled>\r\n                                            Please select a building\r\n                                        </option>\r\n                                        {/* <option value='101'>TWO TOWERS</option>\r\n                                        <option value='102'>BINGHATTI GATEWAY</option>\r\n                                        <option value='103'>MILLENNIUM BINGHATTI RESIDENCES BUSINESS BAY</option>\r\n                                        <option value='104'>MILANO GIOVANNI BOUTIQUE SUITES</option>\r\n                                        <option value='105'>GIOVANNI BOUTIQUE SUITES</option>\r\n                                        <option value='106'>PALM VIEW</option>\r\n                                        <option value='107'>W Residences - The Palm</option> */}\r\n                                        {building.map((opt2) => (\r\n                                            <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' for=\"reserveAccountNumber\" style={{marginLeft:\"15px\"}}>Reserve Account Number</Label>\r\n                                <Col>\r\n                                    <Input className='formInputs' type='text' id='reserveAccountNumber' name='reserveAccountNumber' style={{marginLeft:\"10%\"}}onChange={(e) => handleInput(e)} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' for=\"branchCode\" style={{marginLeft:\"15px\"}}>Branch Code</Label>\r\n                                <Col>\r\n                                    <Input className='formInputs' type='text' id='branchCode' name='branchCode' style={{marginLeft:\"25%\"}} onChange={(e) => handleInput(e)} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Col>\r\n                                    <Button\r\n                                        type=\"submit\" onClick={save} style={{ background: \"#254a9e\", color: \"white\", marginLeft: \"420px\" }} >\r\n                                        SAVE{\" \"}\r\n                                    </Button>\r\n                                    \r\n                                    <Button\r\n                                        onClick={cancel} style={{ background: \"#254a9e\", color: \"white\", marginLeft: \"10px\" }}>\r\n                                        CANCEL{\" \"}\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    }\r\n                />}\r\n        </>\r\n    )\r\n}\r\nexport default ReserveFundButtonAdvance;","\r\nimport {\r\n    Button\r\n  } from \"reactstrap\";\r\n  import {\r\n    usePagination,\r\n    useTable,\r\n  } from 'react-table';\r\n  import React, {\r\n    useEffect,\r\n    useMemo,\r\n    useState,\r\n  } from 'react';\r\n  import ReportsColumn  from './ReportsColumn';\r\nexport default function ReserveFundDetailsTableFooters()  {\r\n    const columns = useMemo(()=> ReportsColumn,[])\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n    const {\r\n       \r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        state,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize\r\n      \r\n    } = useTable({\r\n        columns,\r\n        data\r\n    },\r\n    usePagination)\r\n    \r\n    const {pageIndex, pageSize} = state\r\n\r\n\r\n  return (\r\n    <div className=\"text-center\" style={ { height: 50 } }  >\r\n          <span>\r\n              page{' '}\r\n              <strong>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n              </strong>{' '}\r\n              </span>\r\n              <span>\r\n                   Go to page:{' '}\r\n                  <input\r\n                  type='number'\r\n                  defaultValue={pageIndex + 1}\r\n                  onChange={(e) => {\r\n                      const pageNumber = e.target.value ? Number(e.target.value)-1 : 0\r\n                      gotoPage(pageNumber)\r\n                  }}\r\n                  style={{width: '50px' ,height:'100%'}}\r\n                  />\r\n              </span>\r\n              <select\r\n              value={pageSize}\r\n              onChange={(e) => setPageSize(Number(e.target.value))}>\r\n                  {[10,25,50].map((pageSize)=> (\r\n                      <option key={pageSize} value={pageSize}>Show {pageSize}</option>\r\n                  ))}\r\n              </select>\r\n              <Button style={{background:'#254a9e', color:'white'}} position='absolute' size=\"sm\" onClick={()=> gotoPage(0)} enabled={!canPreviousPage}>{'<<'}</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> previousPage()} enabled={!canPreviousPage}>Previous</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> nextPage()} enabled={!canNextPage}>Next</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(pageCount-1)} enabled={!canNextPage}>{'>>'}</Button>\r\n              {/* <button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(0)} enabled={!canPreviousPage}>{'<<'}</button>\r\n              <button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> previousPage()} enabled={!canPreviousPage}>Previous</button>\r\n              <button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> nextPage()} enabled={!canNextPage}>Next</button>\r\n              <button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(pageCount-1)} enabled={!canNextPage}>{'>>'}</button> */}\r\n          </div>\r\n  )\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport MuiTableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\n// Icons\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nimport ReserveFundButtonAdvance from \"./ReserveFundButtonAdvance\";\r\nimport ReserveFundDetailsTableFooters from \"./ReserveFundDetailsTableFooters\";\r\nimport { TrainRounded } from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  selectTableCell: {\r\n    width: 60,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40,\r\n  },\r\n  input: {\r\n    width: 140,\r\n    height: 40,\r\n  },\r\n  saveButton: {\r\n    \"&:hover\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n  cancleButton: {\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  editButton: {\r\n    \"&:hover\": {\r\n      color: \"#1888DD\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomTableCell = ({\r\n  row,\r\n  name,\r\n  disabled = false,\r\n  enabled = false,\r\n  checkbox = false,\r\n\r\n  Checkbox = false,\r\n\r\n  onChange = false,\r\n\r\n  calculateTotalAmount = false,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  // const { isEditMode } = row;\r\n  const { isEditMode } = false;\r\n\r\n  return (\r\n    <TableCell align='left' className={classes.tableCell}>\r\n      {row[name]\r\n      }    </TableCell>\r\n  );\r\n};\r\n\r\n\r\nfunction ReserveFundDetails() {\r\n  // const ReserveFundDetailsTable = () =>\r\n\r\n  const [data, setData] = useState({\r\n    mgmtCompId: \"\",\r\n    buildingId: \"\",\r\n    // budgetYear: \"\",\r\n  });\r\n  const [building, setBuilding] = useState([]);\r\n  const [IsCustomTableCell, isActive] = useState(false);\r\n  const [responseData, setResponseData] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n  let [tableData, setTableData] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [showtable, setShowtable] = useState(false)\r\n\r\n  const [previous, setPrevious] = React.useState({});\r\n\r\n\r\n  const newRowData = [\r\n    { actions: \"\", cifNumber: \"19000055753\", mcNameEn: 'ACE OWNERS ASSOCIATION MANAGEMENT', buildingName: 'VICTORIA RESIDENCY', accountNumber: \"19000055753\", reserveAccountNumber: \"29000075366\", branchCode: '07', }\r\n  ];\r\n\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    setBuilding([]);\r\n\r\n    // const building = await axios.post(`${properties.dataURl}/dataUpdate`);\r\n    setBuilding(building.data);\r\n\r\n  };\r\n  // const [dropDownData, setDropDownData] = useState({\r\n  //   mgmtCompId: \"\",\r\n  //   buildingId: \"\",\r\n  // });\r\n  const fetchCompany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    //const company = await axios.post(`${properties.dataURl}/dataUpdate`);\r\n    setCompany(company.data);\r\n    console.log(company.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n    fetchCompany();\r\n    // getYears();\r\n  }, []);\r\n\r\n  //handle input\r\n  let handleInput = (e) => {\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n  };\r\n\r\n  // let search = async (e) => {\r\n  //   e.preventDefault();\r\n  //   if (!data.mgmtCompId) {\r\n  //     alert(\"Please select management company\");\r\n  //     return false;\r\n  //   }\r\n\r\n  //   //get API data\r\n  //   getFundDetails();\r\n  // }\r\n\r\n  let search = async (e) => {\r\n    e.preventDefault();\r\n    console.log(data);\r\n    if (!data.mgmtCompId) {\r\n      alert(\"Please select management company\");\r\n      return false;\r\n    }\r\n    //call api to get search result\r\n    console.log(data);\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.fetchReserveFundData, data, { headers: head })\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          if (response.data) setTableData(response.data);\r\n          else {\r\n            setTableData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  // let getFundDetails = async () => {\r\n  //   const requestOptions = {\r\n  //     // method: 'POST',\r\n  //     // headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n  //     // title: 'mgmtCompId':202  'buildingId':104 ;\r\n  //     mgmtCompId: data.mgmtCompId,\r\n  //     buildingId: data.buildingId\r\n  //   };\r\n\r\n  //   let head = {\r\n  //     token: ReactSession.get(\"token\"),\r\n  //     username: ReactSession.get(\"username\"),\r\n  //   };\r\n  //   tableData = await axios.post(\r\n  //     // `${properties.dataURl}/data`,\r\n  //     properties.fetchReserveFundData,\r\n  //     requestOptions, {\r\n  //     headers: head,\r\n  //   });\r\n  //   if (tableData.data) {\r\n  //     setRows(tableData.data);\r\n  //     console.log(tableData.data);\r\n  //   }\r\n  //   if (tableData.data.length <= 0) {\r\n  //     alert(\"No Record found\");\r\n  //     return false;\r\n  //   }\r\n  // };\r\n\r\n  //get building name based on management comp\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n\r\n  //table operations\r\n  const classes = useStyles();\r\n  const onToggleEditMode = (reserveFundId, mode, cifNumber, accountNumber, reserveAccountNumber) => {\r\n    setRows((state) => {\r\n      return rows.map((row) => {\r\n        if (row.reserveFundId === reserveFundId) {\r\n         \r\n          if (mode == \"save\") {\r\n            // delete row[\"isEditMode\"];\r\n            console.log(\"updating reserve fund details details...\");\r\n\r\n            let head = {\r\n              token: ReactSession.get(\"token\"),\r\n              username: ReactSession.get(\"username\"),\r\n\r\n            };\r\n            if (row.accountNumber.length == 11 && row.reserveAccountNumber.length == 11) {\r\n              console.log(row);\r\n              axios\r\n                // .post(`${properties.dataURl}/dataUpdate`, row, { headers: head })\r\n                .post(properties.reserveFundUpdateDetail, row, { headers: head })\r\n                .then((res) => alert(\"Reserve Fund Details Data Updated Successfully\"))\r\n                .catch((err) =>\r\n                  alert(\r\n                    \"Failed to update Reserve Fund Details Table, Please try after sometime\"\r\n                  )\r\n                );\r\n             }\r\n            else {\r\n              alert(\"Failed: For update, Account Number and Reserve Account Number must be 11 digit\");\r\n            }\r\n            return { ...row, isEditMode: !row.isEditMode };\r\n          }\r\n        }\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.reserveFundId]) {\r\n      setPrevious((state) => ({ ...state, [row.reserveFundId]: row }));\r\n    }\r\n\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    const { reserveFundId } = row;\r\n    const newRows = rows.map((row) => {\r\n      if (row.reserveFundId === reserveFundId) {\r\n        return { ...row, [name]: value };\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n  };\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const onRevert = (reserveFundId) => {\r\n    const newRows = rows.map((row) => {\r\n      if (row.reserveFundId === reserveFundId) {\r\n        return previous[reserveFundId] ? previous[reserveFundId] : row;\r\n      }\r\n      return row;\r\n    });\r\n    console.log(newRows);\r\n    setRows(newRows);\r\n    setPrevious((state) => {\r\n      delete state[reserveFundId];\r\n      return state;\r\n    });\r\n    onToggleEditMode(reserveFundId, \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form className='my-3 ml-5' inline>\r\n        <FormGroup row>\r\n          <Label for='managementCompany' className='required'>\r\n            Management Company Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='mgmtCompId'\r\n              name='mgmtCompId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              // onChange={(e) => handleInput(e)}\r\n              // onChange={handleInput}\r\n              onChange={(e) => getBuildingNames(e)}\r\n              \r\n              >\r\n              <option selected disabled>\r\n                Select a Management company\r\n              </option>\r\n              {/* <option value='201'>RDK OWNERS ASSOCIATION MANAGEMENT LLC</option>\r\n              <option value='202'>KAIZEN OWNER ASSOCIATION MANAGEMENT</option>\r\n              <option value='203'>Better Communities Owner Association</option>\r\n              <option value='204'>STRATUM OWNERS ASSOCIATION MANAGEMENT SERVICES LLC</option>\r\n              <option value='205'>SG Community Management Services LLC</option> */}\r\n              {company.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row className='my-3 ml-5' inline>\r\n          <Label for='buildingName'>\r\n            Building Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='buildingId'\r\n              name='buildingId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              onChange={handleInput}\r\n              \r\n              >\r\n              <option selected disabled>\r\n                Select a building name\r\n              </option>\r\n              {/* <option value='101'>TWO TOWERS</option>\r\n              <option value='102'>BINGHATTI GATEWAY</option>\r\n              <option value='103'>MILLENNIUM BINGHATTI RESIDENCES BUSINESS BAY</option>\r\n              <option value='104'>MILANO GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='105'>GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='106'>PALM VIEW</option>\r\n              <option value='107'>W Residences - The Palm</option> */}\r\n              {building.map((opt2) => (\r\n                <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n        <Button\r\n          style={{\r\n            background: \"#254a9e\",\r\n            color: \"white\",\r\n            // position: \"relative\",\r\n            // marginTop: \"1rem\",\r\n            marginLeft: \"0.6rem\",\r\n            marginRight: \"1rem\",\r\n          }}\r\n          // onClick={search}\r\n          onClick={()=>{setShowtable(true)}}\r\n          >\r\n          Search\r\n        </Button>\r\n        <ReserveFundButtonAdvance />\r\n      </Form>\r\n\r\n      <p className='mb-lg-5' />\r\n\r\n      {/* Table */}\r\n      <Form>\r\n        <Paper className={classes.root} style={{ marginTop: \"-13px\" }}>\r\n          <Table className={classes.table}>\r\n            <TableHead style={{ backgroundColor: \"#254A9E\", minWidth: \"20%\" }}>\r\n              <TableRow>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    fontWeight: \"500\",\r\n\r\n                  }}>\r\n                  Action\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n\r\n                  }}>\r\n                  CIF Number\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n\r\n                  }}>\r\n                  Management Company Name\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Building Name\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Account Number\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Reserved Account Number\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Branch Code\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Reserve Fund %\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Last calculated on\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {console.log(\"Row__\", rows)}\r\n              {showtable && newRowData.map((row, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell className={classes.selectTableCell}><Tooltip title='Edit'>\r\n                    <IconButton\r\n                      aria-label='delete'\r\n                      className={classes.editButton}\r\n                    >\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </Tooltip></TableCell>\r\n                  <TableCell >{row.cifNumber}</TableCell>\r\n                  <TableCell >{row.mcNameEn}</TableCell>\r\n                  <TableCell >{row.buildingName}</TableCell>\r\n                  <TableCell >{row.accountNumber}</TableCell>\r\n                  <TableCell >{row.reserveAccountNumber}</TableCell>\r\n                  <TableCell >{row.branchCode}</TableCell>\r\n                \r\n\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </Form>\r\n      <ReserveFundDetailsTableFooters />\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default ReserveFundDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport MuiTableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// Icons\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nimport ReserveFundButtonAdvance from \"./ReserveFundButtonAdvance\";\r\nimport ReserveFundDetailsTableFooters from \"./ReserveFundDetailsTableFooters\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  selectTableCell: {\r\n    width: 60,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40,\r\n  },\r\n  input: {\r\n    width: 140,\r\n    height: 40,\r\n  },\r\n  saveButton: {\r\n    \"&:hover\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n  cancleButton: {\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  editButton: {\r\n    \"&:hover\": {\r\n      color: \"#1888DD\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomTableCell = ({\r\n  row,\r\n  name,\r\n  disabled,\r\n  enabled,\r\n  onChange,\r\n  calculateTotalAmount,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const { isEditMode } = row;\r\n\r\n  return (\r\n    <TableCell align='left' className={classes.tableCell}>\r\n      {isEditMode ? (\r\n        <Input\r\n          value={row[name]}\r\n          name={name}\r\n          disabled={disabled}\r\n          enabled={enabled}\r\n\r\n          // type={Checkbox}\r\n          onChange={(e) => onChange(e, row)}\r\n          //  onBlur={(e) => calculateTotalAmount(e, row)}\r\n          className={classes.input}\r\n        />\r\n      ) : (\r\n        row[name]\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\n\r\nfunction ReserveFundDetailsCopy() {\r\n  const [data, setData] = useState({\r\n    mgmtCompId: \"\",\r\n    buildingId: \"\",\r\n    // budgetYear: \"\",\r\n  });\r\n  const [building, setBuilding] = useState([]);\r\n  const [IsCustomTableCell, isActive] = useState(false);\r\n  const [responseData, setResponseData] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n  let [tableData, setTableData] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n\r\n  const [previous, setPrevious] = React.useState({});\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    setBuilding(building.data);\r\n\r\n  };\r\n\r\n  const fetchCompany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    setCompany(company.data);\r\n    console.log(company.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n    fetchCompany();\r\n    // getYears();\r\n  }, []);\r\n\r\n  //handle input\r\n  let handleInput = (e) => {\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n  };\r\n\r\n\r\n  let search = async (e) => {\r\n    e.preventDefault();\r\n    if (!data.mgmtCompId || !data.buildingId) {\r\n      alert(\"Please select mandatory fields\");\r\n      return false;\r\n    }\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    tableData = await axios.post(\r\n      `${properties.dataURl}/data`, data,\r\n      {\r\n        headers: head,\r\n      });\r\n    if (tableData.data) {\r\n      setRows(tableData.data);\r\n      console.log(tableData.data);\r\n    }\r\n    if (tableData.data.length <= 0) {\r\n      alert(\"No Record found\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //get building name based on management comp\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data)\r\n      setBuilding(building.data)\r\n    else setBuilding([])\r\n  };\r\n  \r\n  //table operations\r\n  const classes = useStyles();\r\n  const onToggleEditMode = (reserveFundId, mode, cifNumber, accountNumber, reserveAccountNumber, branchCode) => {\r\n    setRows((state) => {\r\n      return rows.map((row) => {\r\n        \r\n        if (row.reserveFundId === reserveFundId) {\r\n          if (mode == \"save\") {\r\n            // delete row[\"isEditMode\"];\r\n            console.log(\"updating reserve fund details details...\");\r\n        //     if(row.accountNumber.length!=12  )\r\n        //   {\r\n        //       alert(\" Account number must be 12 digit\");\r\n            \r\n        //   }\r\n        //   if((!/^[0-9]+$/.test(row.accountNumber))){\r\n        //     alert(\"Account number does not accept any characters, Kindly enter only numbers \")\r\n            \r\n        // }\r\n        //     if(row.reserveAccountNumber.length!=12)\r\n        //   {\r\n        //       alert(\" Reserve account number must be 12 digit\");\r\n             \r\n        //   }\r\n        //   if((!/^[0-9]+$/.test(row.reserveAccountNumber))){\r\n        //     alert(\"Reserve account number does not accept any characters, Kindly enter only numbers \")\r\n          \r\n        // }\r\n            let head = {\r\n              token: ReactSession.get(\"token\"),\r\n              username: ReactSession.get(\"username\"),\r\n            };\r\n        \r\n           if(row.accountNumber.length===12 && row.reserveAccountNumber.length ===12 )\r\n            {\r\n            axios\r\n            .post(`${properties.dataURl}/dataUpdate`, row, { headers: head })\r\n            //.post(properties.reserveFundUpdateDetail, row, { headers: head })\r\n            .then((res) => alert(\"Reserve Fund Details Data Updated Successfully\"))\r\n            .catch((err) =>\r\n              alert(\r\n                \"Failed to update Reserve Fund Details Table, Please try after sometime\"\r\n              )\r\n            );\r\n           }\r\n           else{\r\n             alert(\"Account Number / Reserve Account Number should be 12 digit\");\r\n             return row;\r\n           }\r\n           \r\n            // return { ...row, isEditMode: !row.isEditMode };\r\n          }\r\n          return { ...row, isEditMode: !row.isEditMode };\r\n        }\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.reserveFundId]) {\r\n      setPrevious((state) => ({ ...state, [row.reserveFundId]: row }));\r\n    }\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    const { reserveFundId } = row;\r\n    const newRows = rows.map((row) => {\r\n      if (row.reserveFundId === reserveFundId) {\r\n        return { ...row, [name]: value };\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n  };\r\n  // const [checked, setChecked] = React.useState(false);\r\n\r\n  const onRevert = (reserveFundId) => {\r\n    const newRows = rows.map((row) => {\r\n      if (row.reserveFundId === reserveFundId) {\r\n          return previous[reserveFundId] ? previous[reserveFundId] : row;\r\n      }\r\n     return row;\r\n    });\r\n    console.log(newRows);\r\n    setRows(newRows);\r\n    setPrevious((state) => {\r\n      delete state[reserveFundId];\r\n      return state;\r\n    });\r\n    onToggleEditMode(reserveFundId, \"\");\r\n    \r\n  };\r\n \r\n  return (\r\n    <>\r\n      <Form className='my-3 ml-5' inline>\r\n        <FormGroup row>\r\n          <Label for='managementCompany' className='required'>\r\n            Management Company Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='mgmtCompId'\r\n              name='mgmtCompId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              //  onChange={(e) => handleInput(e)}\r\n              // onChange={handleInput}\r\n              onChange={(e) => { getBuildingNames(e) }}>\r\n              <option selected disabled>\r\n                Select a Management company\r\n              </option>\r\n              {/* <option value='201'>RDK OWNERS ASSOCIATION MANAGEMENT LLC</option>\r\n               <option value='202'>KAIZEN OWNER ASSOCIATION MANAGEMENT</option>\r\n                <option value='203'>Better Communities Owner Association</option>\r\n                <option value='204'>STRATUM OWNERS ASSOCIATION MANAGEMENT SERVICES LLC</option> \r\n                <option value='205'>SG Community Management Services LLC</option> */}\r\n              {company.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row className='my-3 ml-5' inline>\r\n          <Label for='buildingName'>\r\n            Building Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='buildingId'\r\n              name='buildingId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              onChange={handleInput}>\r\n              <option selected disabled>\r\n                Select a building name\r\n              </option>\r\n              {/* <option value='101'>TWO TOWERS</option>\r\n              <option value='102'>BINGHATTI GATEWAY</option>\r\n              <option value='103'>MILLENNIUM BINGHATTI RESIDENCES BUSINESS BAY</option>\r\n              <option value='104'>MILANO GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='105'>GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='106'>PALM VIEW</option>\r\n              <option value='107'>W Residences - The Palm</option> */}\r\n              {building.map((opt2) => (\r\n                <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n        <Button\r\n          style={{\r\n            background: \"#254a9e\",\r\n            color: \"white\",\r\n            // position: \"relative\",\r\n            // marginTop: \"1rem\",\r\n            marginLeft: \"0.6rem\",\r\n            marginRight: \"1rem\",\r\n          }}\r\n          onClick={search}>\r\n          Search\r\n        </Button>\r\n        <ReserveFundButtonAdvance />\r\n      </Form>\r\n\r\n      <p className='mb-lg-5' />\r\n\r\n      {/* Table */}\r\n      <Form>\r\n        <Paper className={classes.root} style={{ marginTop: \"-13px\" }}>\r\n          <Table className={classes.table}>\r\n            <TableHead style={{ backgroundColor: \"#254A9E\", minWidth: \"20%\" }}>\r\n              <TableRow>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    fontWeight: \"500\",\r\n                  }}>\r\n                  Action\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n\r\n                  }}>\r\n                  CIF Number\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n\r\n                  }}>\r\n                  Management Company Name\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Building Name\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Account Number\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Reserved Account Number\r\n                </TableCell>\r\n                {/* <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Is Active\r\n                </TableCell> */}\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Branch Code\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Reserve Fund %\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Last Calculated On\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.reserveFundId}>\r\n                  <TableCell className={classes.selectTableCell}>\r\n                    {row.isEditMode ? (\r\n                      <>\r\n                        <Tooltip title='Save'>\r\n                          <IconButton\r\n                            aria-label='done'\r\n                            className={classes.saveButton}\r\n                            onClick={() =>\r\n                              onToggleEditMode(row.reserveFundId, \"save\")\r\n                              \r\n                            }>\r\n                            <DoneIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title='Cancel'>\r\n                          <IconButton\r\n                            aria-label='revert'\r\n                            className={classes.cancleButton}\r\n                            onClick={ (()=> onRevert(row.reserveFundId),search) }//passing two argument inside one onClick\r\n                            // onClick={search} \r\n                           \r\n                          >\r\n                            <RevertIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </>\r\n                    ) : (\r\n                      <Tooltip title='Edit'>\r\n                        <IconButton\r\n                          aria-label='delete'\r\n                          className={classes.editButton}\r\n                          onClick={() =>\r\n                            onToggleEditMode(row.reserveFundId, \"edit\")\r\n                          }>\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    )}\r\n                  </TableCell>\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"cifNumber\",\r\n                      disabled: \"disabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"mcNameEn\",\r\n                      disabled: \"disabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"buildingName\",\r\n                      disabled: \"disabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"accountNumber\",\r\n                      enabled: \"enabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"reserveAccountNumber\",\r\n                      enabled: \"enabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  {/* <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: 'isActive',\r\n                      disabled: \"disabled\",\r\n                      onChange,\r\n                    }}\r\n                  /> */}\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"branchCode\",\r\n                      enabled: \"enabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: 'reserveFundPercentage',\r\n                      disabled: \"disabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                    <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: 'lastCalculatedOn',\r\n                      disabled: \"disabled\",\r\n                      // enabled: \"enabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </Form>\r\n      <ReserveFundDetailsTableFooters />\r\n    </>\r\n  );\r\n}\r\nexport default ReserveFundDetailsCopy;\r\n","import { useState } from \"react\";\r\n\r\nimport { AppBar, Tab, Tabs } from \"@material-ui/core\";\r\n\r\nimport PaymentTabs from \"./PaymentTabs\";\r\nimport Search from \"./TransactionSearchCriteria\";\r\nimport PaymentRequestFields from \"./PaymentRequestFields\";\r\nimport CompletedRequest from \"./CompletedRequest\";\r\nimport ReportsTab from \"./ReportsTab\";\r\nimport BudgetDetailsTable from \"./BudgetDetailsTable\";\r\nimport ReserveFundDetails from \"./ReserveFundDetails\";\r\nimport ReserveFundDetailsCopy from \"./ReserveFundDetailsCopy\";\r\n\r\n\r\n\r\nconst AppTabs = () => {\r\n  console.log(\"loading AppTabs\");\r\n  const [tbVal, setVal] = useState(0);\r\n\r\n  const moveTab = (e, val) => {\r\n    setVal(val);\r\n  };\r\n  return (\r\n    <div>\r\n      <AppBar\r\n        // /* color=\"default\" */ \r\n        variant='elevation'\r\n        //  position='sticky'\r\n         position='static'\r\n        style={{\r\n          marginTop: -10,\r\n            backgroundColor: \"#254a9e\" /* backgroundImage:'blue' */,\r\n          maxHeight: \"35px\",\r\n        }}>\r\n        <Tabs\r\n          TabIndicatorProps={{\r\n            style: { background: \"#25befa\", marginBottom: \"12px\" },\r\n          }}\r\n          value={tbVal}\r\n          onChange={moveTab}>\r\n          <Tab\r\n            label='Payment Request'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label='Exception Queue'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label='Completed Request'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label='Search'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label='Budget Details'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label='Reports'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          \r\n         <Tab\r\n          label='RESERVE FUND DETAILS'\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            minWidth: \"2%\",\r\n            fontSize: \"13px\",\r\n            paddingTop: \"0px\",\r\n            paddingBottom: \"2px\",\r\n            paddingLeft: \"10px\",\r\n            paddingRight: \"0px\",\r\n            marginTop: \"-3px\",\r\n          }}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tbVal === 0 && <PaymentRequestFields />}\r\n      {tbVal === 1 && <PaymentTabs />}\r\n      {tbVal === 2 && <CompletedRequest />}\r\n      {tbVal === 3 && <Search />}\r\n      {tbVal === 4 && <BudgetDetailsTable />}\r\n      {tbVal === 5 && <ReportsTab />}\r\n      {tbVal === 6 && <ReserveFundDetailsCopy/>}\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppTabs;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { Route, useParams } from \"react-router\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nconst DocumentPath = () => {\r\n  const [formData, setState] = useState({\r\n    documentPath: \"\",\r\n  });\r\n\r\n  console.log(useParams());\r\n  let { id } = useParams();\r\n\r\n  const getPath = () => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios.get(`${properties.getPath}/${id}`, { headers: head }).then(\r\n      (response) => {\r\n        console.log(\"loading....\");\r\n        setState({\r\n          ...formData,\r\n          documentPath: response.data.documentPath,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    getPath();\r\n  }, []);\r\n  var started = false;\r\n\r\n  window.open(formData.documentPath, \"_self\");\r\n\r\n  return (\r\n    <div>\r\n      <switch>\r\n        <Route path='/documentpath/:id' children={<Child />} />\r\n      </switch>\r\n    </div>\r\n  );\r\n};\r\nfunction Child() {\r\n  let { id } = useParams();\r\n  return <div></div>;\r\n}\r\n\r\nexport default DocumentPath;\r\n","import './mydiv.css';\r\n\r\nimport React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n<div id=\"footeroly\" style={{\r\n    \r\n    height: \"30px\",\r\n    position:\"fixed\",\r\n    \r\n    bottom: \"0px\",\r\n    width: \"100%\"\r\n    }}>\r\n            <p>&#169;2021 company</p>\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/logo.9b13259e.png\";","import \"./mydiv.css\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport logo from \"./logo.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Button, CardBody } from \"reactstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nimport { ContactlessTwoTone } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  const [isLogged, setLogged] = useState(false);\r\n  const userName = useSelector((state) => state.userStore.username);\r\n  let user = ReactSession.get(\"username\");\r\n  const PROTOCOL = window.location.protocol;\r\n  const DOMAIN = window.location.host;\r\n  const PATH = window.location.pathname;\r\n  if (!isLogged)\r\n    if (ReactSession.get(\"token\")) {\r\n      setLogged(true);\r\n    } else {\r\n      console.log(\"please login first to access this application\");\r\n    }\r\n\r\n  let logout = (e) => {\r\n    e.preventDefault();\r\n    ReactSession.remove(\"token\", \"\");\r\n    ReactSession.remove(\"username\", \"\");\r\n    var url = `${PROTOCOL}//${DOMAIN}${PATH}`;\r\n    console.log(url);\r\n    window.location = url;\r\n    // history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <CardBody style={{ minHeight: \"1vh\", display: \"flex\", padding: \"0px\" }}>\r\n        {isLogged && (\r\n          <text\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: \"3.5rem\",\r\n              fontSize: \"20px\",\r\n              marginLeft: \"75%\",\r\n              color: \"#0000EE\",\r\n            }}>\r\n            {user}\r\n          </text>\r\n        )}\r\n        <img\r\n          style={{\r\n            position: \"relative\",\r\n            marginLeft: \"2%\",\r\n            height: \"10vh\",\r\n            top: \"1vh\",\r\n            padding: \"none\",\r\n          }}\r\n          src={logo}\r\n          alt='img'\r\n        />\r\n        <h3\r\n          style={{\r\n            color: \"red\",\r\n            marginLeft: \"35vh\",\r\n            position: \"relative\",\r\n            top: \"5vh\",\r\n          }}>\r\n          Owner's Association\r\n        </h3>\r\n        {isLogged && (\r\n          <Button\r\n            size='sm'\r\n            style={{\r\n              background: \"#254a9e\",\r\n              width: \"100px\",\r\n              height: \"40px\",\r\n              fontSize: \"20px\",\r\n              marginLeft: \"27rem\",\r\n              marginTop: \"3rem\",\r\n            }}\r\n            onClick={logout}>\r\n            Logout\r\n          </Button>\r\n        )}\r\n        {/* {login ? (\r\n          \"\"\r\n        ) : (\r\n          <div\r\n            className=''\r\n            style={{\r\n              paddingLeft: \"500px\",\r\n              paddingTop: \"25px\",\r\n            }}>\r\n            <Tooltip title='Logout'>\r\n              <IconButton color='secondary' aria-label='add an alarm'>\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        )} */}\r\n      </CardBody>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useMemo, useState, useEffect } from \"react\";\r\n \r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport PaymentRequestFields from \"./PaymentRequestFields\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUser } from \"../action\";\r\n \r\n\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nimport { properties } from \"./properties\";\r\n// import { addUser } from \"../store/userStore\";\r\n \r\n\r\nfunction Login(props) {\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const PROTOCOL = window.location.protocol;\r\n  const DOMAIN = window.location.host;\r\n  const PATH = window.location.pathname;\r\n  const history = useHistory();\r\n  ReactSession.remove(\"username\", \"\");\r\n  ReactSession.remove(\"token\", \"\");\r\n  const dispatch = useDispatch();\r\n  let handleUsername = (event) => {\r\n    setUsername(event.target.value.replace(/[^\\w\\s]/gi, \"\"));\r\n  };\r\n  let handlePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n \r\n\r\n  let handleSubmit = async (event) => {\r\n    // event.preventDefault();\r\n \r\n\r\n    // if (\r\n    //   (userName == process.env.REACT_APP_USERNAME1 &&\r\n    //     password == process.env.REACT_APP_PASSWORD) ||\r\n    //   (userName == process.env.REACT_APP_USERNAME2 &&\r\n    //     password == process.env.REACT_APP_PASSWORD)\r\n    // ) {\r\n    //   dispatch(addUser(userName));\r\n    //   ReactSession.set(\"username\", userName);\r\n    //   history.push(\"/tabs/\");\r\n    // } else {\r\n    //   alert(\"Bad Credentials!\");\r\n    // }\r\n    // event.preventDefault();\r\n \r\n\r\n    event.preventDefault();\r\n    if (userName && password) {\r\n      let user = {\r\n        username: userName,\r\n        password: password,\r\n      };\r\n      ReactSession.set(\"username\", userName);\r\n      try {\r\n        let response = await axios.post(properties.loginURL, user);\r\n        console.log(response);\r\n        if (response) {\r\n          if (!\"200\".localeCompare(response.data.status)) {\r\n            console.log(\"valid user\");\r\n            ReactSession.set(\"token\", response.data.message);\r\n            ReactSession.set(\"username\", userName);\r\n            console.log(\"redirecting to tabs\");\r\n            // history.push(\"/tabs\");\r\n            var url = `${PROTOCOL}//${DOMAIN}${PATH}tabs`;\r\n            console.log(\"redirecting to \" + url);\r\n            window.location = url;\r\n            return false;\r\n          } else if (!\"403\".localeCompare(response.data.status)) {\r\n            console.log(\"Invalid user\");\r\n            alert(response.data.message);\r\n          } else if (!\"401\".localeCompare(response.data.status)) {\r\n            console.log(\"unauthorized user\");\r\n            alert(response.data.message);\r\n          } else {\r\n            alert(\"Server is not responding, please try after sometime.\");\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log(\"Error :: \" + e);\r\n        alert(\"Server is not responding, please try after sometime.\");\r\n        return false;\r\n      }\r\n    } else {\r\n      alert(\"Please enter all mandatory data\");\r\n    }\r\n  };\r\n \r\n\r\n  let handleRest = (e) => {\r\n    e.preventDefault();\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n \r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n        marginTop: \"4em\",\r\n        marginLeft: \"-15em\",\r\n        marginBottom: \"4.3em\",\r\n        marginRight: \"98.2em\",\r\n      }}>\r\n      <Card>\r\n        <CardBody\r\n          style={{\r\n            background: \"#254a9e\",\r\n            width: 800,\r\n            height: 50,\r\n            overflow: \"hidden\",\r\n          }}>\r\n          <h4 style={{ color: \"white\" }}>Login</h4>\r\n        </CardBody>\r\n \r\n\r\n        <Card className='my-3 ml-4' style={{ width: 750 }}>\r\n          <Form\r\n            className='text-center my-3'\r\n            // method='POST'\r\n            // action='j_security_check'\r\n            onSubmit={handleSubmit}\r\n            autoComplete='off'>\r\n            <FormGroup>\r\n              <Label\r\n                style={{ color: \"#254a9e\" }}\r\n                for='MashreqUser'\r\n                className='required'>\r\n                User ID\r\n              </Label>\r\n              <input\r\n                className='ml-4'\r\n                type='userid'\r\n                name='j_username'\r\n                autoComplete='off'\r\n                value={userName}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n            </FormGroup>\r\n \r\n\r\n            <FormGroup>\r\n              <Label\r\n                style={{ color: \"#254a9e\" }}\r\n                for='MashreqPassword'\r\n                className='required'>\r\n                Password\r\n              </Label>\r\n              <input\r\n                className='ml-2'\r\n                type='password'\r\n                name='j_password'\r\n                autoComplete='off'\r\n                value={password}\r\n                onChange={handlePassword}\r\n                required\r\n              />\r\n            </FormGroup>\r\n \r\n\r\n            <Container className='ml-4' style={{ height: 50 }}>\r\n              <Button\r\n                size='sm'\r\n                style={{ background: \"#254a9e\" }}\r\n                onClick={handleSubmit}>\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                size='sm'\r\n                style={{ background: \"#254a9e\" }}\r\n                className='ml-4'\r\n                onClick={handleRest}>\r\n                Reset\r\n              </Button>\r\n            </Container>\r\n          </Form>\r\n        </Card>\r\n        <CardBody\r\n          style={{\r\n            background: \"#254a9e\",\r\n            width: 800,\r\n            height: 50,\r\n          }}></CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import { properties } from \"./properties\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./documentColumn.css\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nimport axios from \"axios\";\r\nexport const DocumentColumns = [\r\n  {\r\n    Header: \"Document Id\",\r\n    accessor: \"documentId\",\r\n    Cell: (e) => (\r\n      <a className='link' onClick={(event) => downloadDocument(event, e)}>\r\n        {e.value}\r\n      </a>\r\n    ),\r\n  },\r\n  {\r\n    Header: \"Document Name\",\r\n    accessor: \"documentName\",\r\n  },\r\n  {\r\n    Header: \"Document Type\",\r\n    accessor: \"documentType\",\r\n  },\r\n\r\n  {\r\n    Header: \"Expires On\",\r\n    accessor: \"expiresOn\",\r\n  },\r\n];\r\n\r\nlet downloadDocument = async (event, e) => {\r\n  event.preventDefault();\r\n  let id = e.value;\r\n  console.log(\"downloading pdf for \" + id);\r\n  let head = {\r\n    token: ReactSession.get(\"token\"),\r\n    username: ReactSession.get(\"username\"),\r\n  };\r\n\r\n  let response = await axios.get(`${properties.downloadPDF}?documentId=${id}`, {\r\n    headers: head,\r\n  });\r\n  console.log(response);\r\n  if (response) {\r\n    if (response.data) {\r\n      const downloadLink = document.createElement(\"a\");\r\n      const fileName = `${id}.pdf`;\r\n      const linkSource = `data:application/pdf;base64,${response.data}`;\r\n      downloadLink.href = linkSource;\r\n      downloadLink.download = fileName;\r\n      downloadLink.click();\r\n    }\r\n  } else {\r\n    console.log(\"not response found\");\r\n    alert(\"Server is not responding, please try after some time\");\r\n  }\r\n};\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { usePagination, useTable } from \"react-table\";\r\nimport { Button, Table } from \"reactstrap\";\r\n\r\nimport { DocumentColumns } from \"./DocumentColumns\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nexport const DocumentTable = (props) => {\r\n  const columns = useMemo(() => DocumentColumns, []);\r\n  // const data= useMemo(()=> MOCK_DATA, [])\r\n  const [data, setData] = useState([]);\r\n  let pymtReqId = props.pymtReqId;\r\n  console.log(\"Document Table pymtReqId:\" + pymtReqId);\r\n  let head = {\r\n    token: ReactSession.get(\"token\"),\r\n    username: ReactSession.get(\"username\"),\r\n  };\r\n  const getListDocumnetsFromServer = () => {\r\n    axios\r\n      .get(`${properties.getListDocuments}/${pymtReqId}`, { headers: head })\r\n      .then(\r\n        (response) => {\r\n          console.log(\"loading....\");\r\n          setData(response.data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListDocumnetsFromServer();\r\n    console.log(\"doc:: \" + data);\r\n  }, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    usePagination\r\n  );\r\n\r\n  const { pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        size='sm'\r\n        striped={true}\r\n        style={{ marginTop: 3 }}\r\n        {...getTableProps()}>\r\n        <thead style={{ background: \"#254a9e\", color: \"white\" }}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <span>\r\n          page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          Go to page:{\" \"}\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\" }}\r\n          />\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}>\r\n          {[10, 25, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Col, CustomInput } from \"reactstrap\";\r\n//import { PaymentRequestTable } from './PaymentRequestTable';\r\nimport axios, { post } from \"axios\";\r\nimport { Button } from \"reactstrap\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nfunction DocumentUpload(props) {\r\n  const [clearFile, setClearFile] = useState();\r\n  // Allowing file type\r\n  let allowedExtensions = process.env.REACT_APP_VALID_FILE_EXTENSION_DOCUMENT;\r\n  let pymtId = props.pymtReqId;\r\n  console.log(\"document class pymt id::\" + pymtId);\r\n\r\n  const [files, setFile] = useState();\r\n  const [data, setData] = useState([]);\r\n  //validate file extension\r\n  // function ValidateFile() {\r\n  //   var arrInputs = document.getElementsByName(\"file\");\r\n\r\n  //   for (var i = 0; i < arrInputs.length; i++) {\r\n  //     var oInput = arrInputs[i];\r\n  //     if (oInput.type == \"file\") {\r\n  //       var sFileName = oInput.value;\r\n\r\n  //       if (sFileName.length > 0) {\r\n  //         var blnValid = false;\r\n  //         for (var j = 0; j < validFileExtensions.length; j++) {\r\n  //           var sCurExtension = validFileExtensions[j];\r\n  //           if (\r\n  //             sFileName\r\n  //               .substr(\r\n  //                 sFileName.length - sCurExtension.length,\r\n  //                 sCurExtension.length\r\n  //               )\r\n  //               .toLowerCase() == sCurExtension.toLowerCase()\r\n  //           ) {\r\n  //             blnValid = true;\r\n  //             break;\r\n  //           }\r\n  //         }\r\n\r\n  //         if (!blnValid) {\r\n  //           console.log(\"Invalid file\");\r\n  //           alert(\r\n  //             \"Sorry, \" +\r\n  //               files[0].name +\r\n  //               ` is invalid, allowed extensions are: ` +\r\n  //               validFileExtensions\r\n  //           );\r\n  //           return false;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   console.log(\"valid file\");\r\n  //   fileUpload(files[0]);\r\n  //   return true;\r\n  // }\r\n\r\n  function fileUpload() {\r\n    console.log(\"FILE: \" + files);\r\n    console.log(\"checkering file extension on submit\");\r\n    if (fileValidation()) {\r\n      const url = properties.fileUpload + `${pymtId}`;\r\n      const formData = new FormData();\r\n      formData.append(\"file\", files);\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          token: ReactSession.get(\"token\"),\r\n          username: ReactSession.get(\"username\"),\r\n        },\r\n      };\r\n      console.log(formData);\r\n      axios\r\n        .post(url, formData, config)\r\n        .then((response) => response.data)\r\n        .then(\r\n          (data) => {\r\n            setData(data);\r\n            console.info(\"report response << : \" + JSON.stringify(data));\r\n            alert(\"Document uploaded successfully\");\r\n            setClearFile(\"\");\r\n          },\r\n          (error) => {\r\n            console.log(\"File upload fail \" + error);\r\n            alert(\r\n              \"Error: Document upload failed please try again after some time.\"\r\n            );\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  function fileValidation(e) {\r\n    let extensions = /(\\.xls|\\.xlsx|\\.pdf)$/i;\r\n    var fileInput = document.getElementById(\"file\");\r\n    var filePath = fileInput.value;\r\n    if (!extensions.exec(filePath)) {\r\n      console.log(\"Invalid file extension\");\r\n      alert(`Invalid file, system will accept only [.xls, .xlsx, .pdf, .PDF] `);\r\n      fileInput.value = null;\r\n      return false;\r\n    }\r\n    console.log(\"Valid file extension found\");\r\n    return true;\r\n  }\r\n\r\n  const getFile = (e) => {\r\n    // const fileRef=(e.target.files[0]);\r\n    const fileRef = e.target.files[0];\r\n    console.log(fileRef);\r\n    setFile(fileRef);\r\n    fileValidation();\r\n  };\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5'>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Upload Document\r\n          </Label>\r\n          <Col sm={3}>\r\n            <div class='custom-file mb-3'>\r\n              {/* <input type=\"file\" onChange={onChange} className=\"custom-file-input\" name={fileName} id=\"input\" /> */}\r\n\r\n              <CustomInput\r\n                type='file'\r\n                accept='.xls, .xlsx, .pdf'\r\n                onChange={getFile}\r\n                id='file'\r\n                name='file'\r\n                key={clearFile}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <Button\r\n              onClick={fileUpload}\r\n              style={{ background: \"#254a9e\", color: \"white\" }}>\r\n              Upload\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n      <div className='App'></div>\r\n    </div>\r\n  );\r\n}\r\nexport default DocumentUpload;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { DocumentTable } from \"./DocumentTable\";\r\nimport { Route, useParams } from \"react-router\";\r\n\r\nimport axios from \"axios\";\r\nimport DocumentUpload from \"./DocumentUpload\";\r\nimport { properties } from \"./properties\";\r\nimport \"./Attachment.css\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\n{\r\n  /* <switch>\r\n  <Route path='/attachmentField/:id' children={<Child />} />\r\n</switch>; */\r\n}\r\n\r\nexport default function AttachmentFields() {\r\n  const [autoRenewal, setAutoRenewal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [attachmentFlag, setAttachmentFlag] = useState(\"false\");\r\n  const [governmentCheckBox, setGovernmentCheckBox] = useState(false);\r\n  const [isExcpApproval, setIsExcpApproval] = useState(false);\r\n  const [insuranceCheckBox, setInsuranceCheckBox] = useState(false);\r\n  const [noProperDocumentCheckBox, setNoProperDocumentCheckBox] =\r\n    useState(false);\r\n  const [disableSaveButton, setDisableSaveButton] = useState(false);\r\n  console.log(\"AttachmentFields started...\");\r\n  let { id } = useParams();\r\n  console.log(\"id >>>>>>>>\" + id);\r\n\r\n  const [formData, setState] = useState({});\r\n\r\n  const [loaddates, setDates] = useState({});\r\n\r\n  const [data1, setData1] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data3, setData3] = useState([]);\r\n\r\n  let handleYes = () => {\r\n    setAttachmentFlag(\"true\");\r\n    setOpen(false);\r\n    var autoRenewalData = \"\";\r\n    var isGovernmentEntity = \"\";\r\n    var isInsuranceCompany = \"\";\r\n    var noDocumentData = \"\";\r\n    var isExceptionalApproval = \"\";\r\n    if (autoRenewal) autoRenewalData = \"Y\";\r\n    else autoRenewalData = \"N\";\r\n\r\n    if (governmentCheckBox) {\r\n      console.log(\"Government\");\r\n      isGovernmentEntity = \"Y\";\r\n    } else {\r\n      isGovernmentEntity = \"N\";\r\n    }\r\n\r\n    if (insuranceCheckBox) {\r\n      console.log(\"insurance company\");\r\n      isInsuranceCompany = \"Y\";\r\n    } else {\r\n      isInsuranceCompany = \"N\";\r\n    }\r\n\r\n    if (noProperDocumentCheckBox) {\r\n      noDocumentData = \"Y\";\r\n    } else {\r\n      noDocumentData = \"N\";\r\n    }\r\n    if (isExcpApproval) {\r\n      isExceptionalApproval = \"Y\";\r\n    } else {\r\n      isExceptionalApproval = \"N\";\r\n    }\r\n    const postData = {\r\n      pymtReqId: id,\r\n      //matrixRefNo:data.matrixRefNo,\r\n      matrixFileRefNo: data.matrixFileRefNo,\r\n      mgmtCompId: data.mgmtCompId,\r\n      issuanceAuthority: \"Dubai Govt\",\r\n      tradeLicenseExpDate: data.tradeLicenseExpDate,\r\n      agreementExpDate: data.agreementExpDate,\r\n      budgetYear: data.budgetYear,\r\n      invoiceDateYear: data.invoiceDateYear,\r\n      invoiceAmount: data.invoiceAmount,\r\n      supplierId: data.supplierId,\r\n      serviceCode: data.serviceCode,\r\n      buildingId: data.buildingId,\r\n      hiddenTrade: data.hiddenTrade,\r\n      hiddenAgree: data.hiddenAgree,\r\n      attachmentFlag: \"true\",\r\n      noProperDocuments: noDocumentData,\r\n      autoRenewal: autoRenewalData,\r\n      isGovernmentEntity: isGovernmentEntity,\r\n      isInsuranceCompany: isInsuranceCompany,\r\n      isExceptionalApproval: isExceptionalApproval,\r\n      remarks: data.remarks,\r\n      bifurcation: data.bifurcation,\r\n    };\r\n    saveData(postData);\r\n  };\r\n  let handleNo = () => {\r\n    setOpen(false);\r\n    var autoRenewalData = \"\";\r\n    var isGovernmentEntity = \"\";\r\n    var isInsuranceCompany = \"\";\r\n    var noDocumentData = \"\";\r\n    var isExceptionalApproval = \"\";\r\n\r\n    if (autoRenewal) autoRenewalData = \"Y\";\r\n    else autoRenewalData = \"N\";\r\n\r\n    if (governmentCheckBox) {\r\n      console.log(\"Government\");\r\n      isGovernmentEntity = \"Y\";\r\n    } else {\r\n      isGovernmentEntity = \"N\";\r\n    }\r\n\r\n    if (insuranceCheckBox) {\r\n      console.log(\"insurance company\");\r\n      isInsuranceCompany = \"Y\";\r\n    } else {\r\n      isInsuranceCompany = \"N\";\r\n    }\r\n\r\n    if (noProperDocumentCheckBox) {\r\n      noDocumentData = \"Y\";\r\n    } else {\r\n      noDocumentData = \"N\";\r\n    }\r\n    if (isExcpApproval) {\r\n      isExceptionalApproval = \"Y\";\r\n    } else {\r\n      isExceptionalApproval = \"N\";\r\n    }\r\n    const postData = {\r\n      pymtReqId: id,\r\n      //matrixRefNo:data.matrixRefNo,\r\n      matrixFileRefNo: data.matrixFileRefNo,\r\n      mgmtCompId: data.mgmtCompId,\r\n      issuanceAuthority: \"Dubai Govt\",\r\n      tradeLicenseExpDate: data.tradeLicenseExpDate,\r\n      agreementExpDate: data.agreementExpDate,\r\n      budgetYear: data.budgetYear,\r\n      invoiceDateYear: data.invoiceDateYear,\r\n      invoiceAmount: data.invoiceAmount,\r\n      supplierId: data.supplierId,\r\n      serviceCode: data.serviceCode,\r\n      buildingId: data.buildingId,\r\n      hiddenTrade: data.hiddenTrade,\r\n      hiddenAgree: data.hiddenAgree,\r\n      attachmentFlag: \"false\",\r\n      noProperDocuments: noDocumentData,\r\n      autoRenewal: autoRenewalData,\r\n      isGovernmentEntity: isGovernmentEntity,\r\n      isInsuranceCompany: isInsuranceCompany,\r\n      isExceptionalApproval: isExceptionalApproval,\r\n      remarks: data.remarks,\r\n      bifurcation: data.bifurcation,\r\n    };\r\n    saveData(postData);\r\n  };\r\n  let handleCancel = () => {\r\n    setOpen(false);\r\n    return false;\r\n  };\r\n\r\n  const loadAttachmentDetails = (ids) => {\r\n    console.log(\"calling getMatrixRefNo\");\r\n    console.log(properties.getMatrixRefNo + `${ids}`);\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios.get(properties.getMatrixRefNo + `${ids}`, { headers: head }).then(\r\n      (response) => {\r\n        console.log(\r\n          \"Attachment Response Data loaded here\" + JSON.stringify(response.data)\r\n        );\r\n\r\n        setData({\r\n          data,\r\n          matrixRefNo: response.data.strMatrixRefNo,\r\n          invoiceAmount: response.data.invoiceAmount,\r\n          matrixFileRefNo: response.data.matrixFileRefNo,\r\n          subPaymentsCount: response.data.subPaymentsCount,\r\n          tradeLicenseExpDate: response.data.tradeLicenseExpDate,\r\n          agreementExpDate: response.data.agreementExpDate,\r\n          supplierId: response.data.supplierId,\r\n          mgmtCompId: response.data.mgmtCompId,\r\n          buildingId: response.data.buildingId,\r\n          serviceCode: response.data.serviceCode,\r\n          budgetYear: response.data.budgetYear,\r\n          bifurcation: response.data.bifurcation,\r\n          autoRenewal: response.data.autoRenewal,\r\n          isGovernmentEntity: response.data.isGovernmentEntity,\r\n          isInsuranceCompany: response.data.isInsuranceCompany,\r\n          // remarks: response.data.remarks,\r\n        });\r\n\r\n        if (response.data.tradeLicenseExpDate)\r\n          if (response.data.tradeLicenseExpDate < curdate) {\r\n            datecolor = \"readcolor\";\r\n            document.getElementById(\"tradeLicenseExpDate\").className =\r\n              datecolor;\r\n          }\r\n\r\n        if (response.data.agreementExpDate)\r\n          if (response.data.agreementExpDate < curdate) {\r\n            datecolor = \"readcolor\";\r\n            document.getElementById(\"agreementExpDate\").className = datecolor;\r\n          }\r\n\r\n        if (response.data.autoRenewal)\r\n          if (!\"Y\".localeCompare(response.data.autoRenewal))\r\n            setAutoRenewal(true);\r\n\r\n        if (response.data.isGovernmentEntity)\r\n          if (!\"Y\".localeCompare(response.data.isGovernmentEntity))\r\n            setGovernmentCheckBox(true);\r\n        if (response.data.isInsuranceCompany)\r\n          if (!\"Y\".localeCompare(response.data.isInsuranceCompany))\r\n            setInsuranceCheckBox(true);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    console.log(\"matrixRefNo completed\");\r\n  };\r\n  console.log(\r\n    \"matrixfilerefno\" + data.matrixFileRefNo + \":::\" + data.subPaymentsCount\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"loading AttachmentDetails calling\");\r\n    loadAttachmentDetails(`${id}`);\r\n  }, []);\r\n\r\n  const saveData = (postData) => {\r\n    console.log(postData);\r\n\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    console.log(head);\r\n    axios.post(properties.saveAttachmentData, postData, { headers: head }).then(\r\n      (response) => {\r\n        // alert(\"Data Saved Successfully\");\r\n        alert(response.data);\r\n        if (!\"Data Saved Successfully\".localeCompare(response.data)) {\r\n          setDisableSaveButton(true);\r\n        }\r\n        console.log(\"Response Data loaded here\" + JSON.stringify(response));\r\n        // window.close();\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n        alert(\"Error: Data not saved. Please try again  after sometime.\");\r\n        return false;\r\n      }\r\n    );\r\n    return false;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"submitted\");\r\n    var autoRenewalData = \"\";\r\n    var isGovernmentEntity = \"\";\r\n    var isInsuranceCompany = \"\";\r\n    var noDocumentData = \"\";\r\n    var isExceptionalApproval = \"\";\r\n    if (autoRenewal) autoRenewalData = \"Y\";\r\n    else autoRenewalData = \"N\";\r\n\r\n    if (governmentCheckBox) {\r\n      console.log(\"Government\");\r\n      isGovernmentEntity = \"Y\";\r\n    } else {\r\n      isGovernmentEntity = \"N\";\r\n    }\r\n    if (insuranceCheckBox) {\r\n      console.log(\"insurance company\");\r\n      isInsuranceCompany = \"Y\";\r\n    } else {\r\n      isInsuranceCompany = \"N\";\r\n    }\r\n\r\n    if (noProperDocumentCheckBox) {\r\n      noDocumentData = \"Y\";\r\n    } else {\r\n      noDocumentData = \"N\";\r\n    }\r\n    if (isExcpApproval) {\r\n      isExceptionalApproval = \"Y\";\r\n    } else {\r\n      isExceptionalApproval = \"N\";\r\n    }\r\n    const postData = {\r\n      pymtReqId: id,\r\n      mgmtCompId: data.mgmtCompId,\r\n      issuanceAuthority: \"Dubai Govt\",\r\n      tradeLicenseExpDate: data.tradeLicenseExpDate,\r\n      agreementExpDate: data.agreementExpDate,\r\n      budgetYear: data.budgetYear,\r\n      invoiceDateYear: data.invoiceDateYear,\r\n      invoiceAmount: data.invoiceAmount,\r\n      supplierId: data.supplierId,\r\n      serviceCode: data.serviceCode,\r\n      buildingId: data.buildingId,\r\n      // hiddenTrade: data.hiddenTrade,\r\n      // hiddenAgree: data.hiddenAgree,\r\n      attachmentFlag: \"false\",\r\n      noProperDocuments: noDocumentData,\r\n      autoRenewal: autoRenewalData,\r\n      isGovernmentEntity: isGovernmentEntity,\r\n      isInsuranceCompany: isInsuranceCompany,\r\n      bifurcation: data.bifurcation,\r\n      isExceptionalApproval: isExceptionalApproval,\r\n      remarks: data.remarks,\r\n    };\r\n    if (isExcpApproval || noProperDocumentCheckBox) {\r\n      if (!data.remarks) {\r\n        alert(\"Reason is mandatory\");\r\n        return false;\r\n      }\r\n    }\r\n    if (!isExcpApproval)\r\n      if (\r\n        data.budgetYear == undefined ||\r\n        data.serviceCode == undefined ||\r\n        data.serviceCode == \"\" ||\r\n        data.budgetYear == \"\"\r\n      ) {\r\n        alert(\"Please select all the mandatory fields\");\r\n        if (insuranceCheckBox) {\r\n          if (\r\n            data.tradeLicenseExpDate == undefined &&\r\n            data.hiddenTrade == undefined\r\n          ) {\r\n            event.preventDefault();\r\n            alert(\r\n              \"Trade license expiry date is mandatory for Insurance company\"\r\n            );\r\n          }\r\n        }\r\n        return false;\r\n      } else {\r\n        console.log(\"count :: \" + data.subPaymentsCount);\r\n        console.log(\"conut type:: \" + typeof data.subPaymentsCount);\r\n        if (Number(data.subPaymentsCount) > 0) setOpen(true);\r\n        else saveData(postData);\r\n      }\r\n    else {\r\n      console.log(\"with count :: \" + data.subPaymentsCount);\r\n      console.log(\"conut type:: \" + typeof data.subPaymentsCount);\r\n      if (Number(data.subPaymentsCount) > 0) setOpen(true);\r\n      else saveData(postData);\r\n    }\r\n  };\r\n\r\n  let datecolor = \"blackcolor\";\r\n\r\n  var today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1; //As January is 0.\r\n  var yyyy = today.getFullYear();\r\n\r\n  if (dd < 10) dd = \"0\" + dd;\r\n  if (mm < 10) mm = \"0\" + mm;\r\n  var curdate = yyyy + \"-\" + mm + \"-\" + dd;\r\n  console.log(\"today::\" + curdate);\r\n\r\n  function handle(e) {\r\n    var regex = /[^.=,;\\w\\s]/gi;\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value.replace(regex, \"\");\r\n    console.log(e.target.id + \":\" + e.target.value);\r\n    setData(newdata);\r\n    console.log(\"MY DATA :: \" + JSON.stringify(newdata));\r\n    console.log(\r\n      \"handle newdata.tradeLicenseExpDate:\" + newdata.tradeLicenseExpDate\r\n    );\r\n\r\n    // let splyer_id = null;\r\n    // let mgmt_cpny_id = null;\r\n    // if (newdata.supplierId != undefined) {\r\n    //   splyer_id = newdata.supplierId;\r\n    //   if (newdata.mgmtCompId == undefined) {\r\n    //     mgmt_cpny_id = 0;\r\n    //   } else if (\r\n    //     newdata.mgmtCompId != undefined &&\r\n    //     newdata.supplierId != undefined\r\n    //   ) {\r\n    //     mgmt_cpny_id = newdata.mgmtCompId;\r\n    //   }\r\n\r\n    //   console.info(\"m_c:\" + mgmt_cpny_id + \"s_n::\" + splyer_id);\r\n\r\n    // loadExpiryDates(splyer_id, mgmt_cpny_id);\r\n    //  u}\r\n  }\r\n\r\n  function handleTrade(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n\r\n    var dat = newdata.tradeLicenseExpDate;\r\n    console.log(\"vardat\" + dat);\r\n\r\n    console.log(\"newdata.tradeLicenseExpDate:\" + newdata.tradeLicenseExpDate);\r\n    data.tradeLicenseExpDate = newdata.tradeLicenseExpDate;\r\n    console.log(\"dates\" + data.tradeLicenseExpDate + \"::\" + today);\r\n    console.log(\r\n      \"condition\" + (new Date(data.tradeLicenseExpDate) <= new Date())\r\n    );\r\n\r\n    if (data.tradeLicenseExpDate < curdate) {\r\n      console.log(\"tradeLicenseExpDate < current date\");\r\n      datecolor = \"readcolor\";\r\n      document.getElementById(\"tradeLicenseExpDate\").className = datecolor;\r\n    } else {\r\n      document.getElementById(\"tradeLicenseExpDate\").className = \"blackcolor\";\r\n      // newdata.hiddenTrade = dat;\r\n      // console.log(\"newdata.hidddenTrade\" + newdata.hiddenTrade);\r\n    }\r\n  }\r\n\r\n  function handleAgree(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n\r\n    var dat = newdata.agreementExpDate;\r\n    console.log(\"vardat\" + dat);\r\n\r\n    data.agreementExpDate = newdata.agreementExpDate;\r\n    if (data.agreementExpDate < curdate) {\r\n      console.log(\"agreementExpDate < current date\");\r\n      datecolor = \"readcolor\";\r\n      document.getElementById(\"agreementExpDate\").className = datecolor;\r\n    } else {\r\n      document.getElementById(\"agreementExpDate\").className = \"blackcolor\";\r\n      // newdata.hiddenAgree = dat;\r\n      // console.log(\"newdata.hiddenAgree\" + newdata.hiddenAgree);\r\n    }\r\n  }\r\n\r\n  // data.tradeLicenseExpDate = loaddates.tradeLicenseExpDate;\r\n  // data.agreementExpDate = loaddates.agreementExpDate;\r\n\r\n  const fetchData = async () => {\r\n    let headers = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    const company = await axios.get(properties.managementCompanyList, {\r\n      headers: headers,\r\n    });\r\n    console.log(\"company\", company.data);\r\n    setData1(company.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchSupplier = async () => {\r\n    const supplier = await axios.get(properties.supplierList);\r\n    console.log(\"supplier\" + supplier.data);\r\n    setData2(supplier.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchSupplier();\r\n  }, []);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    console.log(\"building\", building.data);\r\n    setData3(building.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n  }, []);\r\n\r\n  let isChecked = \"NO\";\r\n  function documents(e) {\r\n    isChecked = e.target.checked;\r\n    if (isChecked === true) {\r\n      isChecked = \"YES\";\r\n    } else {\r\n      isChecked = \"NO\";\r\n    }\r\n    // alert(isChecked);\r\n  }\r\n\r\n  let submitData = (e) => {\r\n    console.log(\"Submit:: \" + autoRenewal);\r\n  };\r\n\r\n  let auto_Renewal = \"NO\";\r\n  let handleAutoRenewal = (e) => {\r\n    setAutoRenewal(e.target.checked);\r\n  };\r\n  let handleInsCheckbox = (e) => {\r\n    setInsuranceCheckBox(e.target.checked);\r\n  };\r\n  let handleGovCheckbox = (e) => {\r\n    console.log(e.target.checked);\r\n    setGovernmentCheckBox(e.target.checked);\r\n  };\r\n  let handleIsExcpApproval = (e) => {\r\n    console.log(e.target.checked);\r\n    setIsExcpApproval(e.target.checked);\r\n  };\r\n\r\n  let handleNoProperDocumentCheckBox = (e) => {\r\n    console.log(e.target.checked);\r\n    setNoProperDocumentCheckBox(e.target.checked);\r\n  };\r\n\r\n  function renew(e) {\r\n    auto_Renewal = e.target.checked;\r\n    if (auto_Renewal === true) {\r\n      auto_Renewal = \"YES\";\r\n    } else {\r\n      auto_Renewal = \"NO\";\r\n    }\r\n    // alert(auto_Renewal);\r\n  }\r\n\r\n  let insurance = \"NO\";\r\n  function insuranceCompany(e) {\r\n    insurance = e.target.checked;\r\n    if (insurance === true) {\r\n      insurance = \"YES\";\r\n    } else {\r\n      insurance = \"NO\";\r\n    }\r\n    // alert(insurance);\r\n  }\r\n\r\n  let govt = \"NO\";\r\n  function Government(e) {\r\n    govt = e.target.checked;\r\n    if (govt === true) {\r\n      govt = \"YES\";\r\n    } else {\r\n      govt = \"NO\";\r\n    }\r\n    // alert(govt);\r\n  }\r\n\r\n  //checking spe char\r\n\r\n  let checkSpacialChar = (event) => {\r\n    var regex = /^[!@#\\$%\\^\\&*\\)\\(+/<>);[]_-]+$/g;\r\n    return event.key.match(regex);\r\n  };\r\n\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Matrix Ref No\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              value={data.matrixRefNo}\r\n              size='sm'\r\n              className='input'\r\n              autoComplete='off'\r\n            />\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Budget Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              autoComplete='off'\r\n              type='number'\r\n              maxLength={4}\r\n              onChange={(e) => handle(e)}\r\n              id='budgetYear'\r\n              value={data.budgetYear}\r\n              size='sm'\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Supplier Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              autoComplete='off'\r\n              size='sm'\r\n              type='select'\r\n              id='supplierId'\r\n              value={data.supplierId}\r\n              size='sm'\r\n              disabled='disabled'\r\n              style={{ width: \"350px\" }}\r\n              onChange={(e) => handle(e)}>\r\n              <option selected disabled>\r\n                Please select a supplier\r\n              </option>\r\n              {data2.map((opt2) => (\r\n                <option value={opt2.supplierId}>{opt2.supplierName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }}>\r\n            Invoice Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='number'\r\n              autoComplete='off'\r\n              maxLength={4}\r\n              onChange={(e) => handle(e)}\r\n              id='invoiceDateYear'\r\n              value={data.invoiceDateYear}\r\n              size='sm'\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Management Company Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              size='sm'\r\n              type='select'\r\n              autoComplete='off'\r\n              id='mgmtCompId'\r\n              value={data.mgmtCompId}\r\n              disabled='disabled'\r\n              style={{ width: \"350px\" }}\r\n              onChange={(e) => handle(e)}>\r\n              <option selected disabled>\r\n                Please select a company\r\n              </option>\r\n              {data1.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Payment Amount\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='invoiceAmount'\r\n              defaultValue={data.invoiceAmount}\r\n              size='sm'\r\n              disabled='disabled'\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Trade License Expiry Date\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='date'\r\n              autoComplete='off'\r\n              className={datecolor}\r\n              onChange={(e) => handleTrade(e)}\r\n              id='tradeLicenseExpDate'\r\n              defaultValue={data.tradeLicenseExpDate}\r\n              size='sm'\r\n            />\r\n            <Input type='text' id='hiddenTrade' hidden />\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Issuance Authority\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='issuanceAuthority'\r\n              // value={data.issuanceAuthority}\r\n              value='Dubai Govt'\r\n              size='sm'\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            {\" \"}\r\n            Agreement Expiry Date\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='date'\r\n              autoComplete='off'\r\n              className={datecolor}\r\n              onChange={(e) => handleAgree(e)}\r\n              id='agreementExpDate'\r\n              defaultValue={data.agreementExpDate}\r\n              size='sm'\r\n            />\r\n            <Input type='text' id='hiddenAgree' hidden />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"10rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={governmentCheckBox}\r\n                onChange={handleGovCheckbox}\r\n              />\r\n              Government\r\n            </Label>\r\n          </Col>\r\n\r\n          <Col md={2}>\r\n            <Label style={{ marginLeft: \"-3rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={autoRenewal}\r\n                onChange={handleAutoRenewal}\r\n              />\r\n              Auto Renewal\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            {\" \"}\r\n            Building Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              size='sm'\r\n              type='select'\r\n              autoComplete='off'\r\n              id='buildingId'\r\n              value={data.buildingId}\r\n              disabled='disabled'\r\n              onChange={(e) => handle(e)}>\r\n              <option selected hidden>\r\n                Please select building\r\n              </option>\r\n              {data3.map((opt) => (\r\n                <option value={opt.buildingId}>{opt.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"10rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={insuranceCheckBox}\r\n                onChange={handleInsCheckbox}\r\n              />\r\n              Insurance Company\r\n            </Label>\r\n          </Col>\r\n\r\n          <Col md={2.5}>\r\n            <Label style={{ marginLeft: \"-2rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                onChange={handleNoProperDocumentCheckBox}\r\n              />\r\n              No proper Data/Documents\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Service Code\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              // onKeyPress={(event) => checkSpacialChar(event)}\r\n              onChange={(e) => handle(e)}\r\n              id='serviceCode'\r\n              value={data.serviceCode}\r\n              size='sm'\r\n            />\r\n          </Col>\r\n          <Col md={4} className=''>\r\n            <Label style={{ marginLeft: \"10rem\" }} check>\r\n              <Checkbox color='primary' onChange={handleIsExcpApproval} />\r\n              Is Exceptional Approval\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginLeft: \"\" }}>\r\n            Bifurcation\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='bifurcation'\r\n              name='bifurcation'\r\n              value={data.bifurcation}\r\n              size='sm'\r\n              style={{ marginLeft: \"-5rem\" }}\r\n            />\r\n          </Col>\r\n\r\n          <Label sm={3} style={{ marginLeft: \"5rem\" }}>\r\n            Reason\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='textarea'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='remarks'\r\n              name='remarks'\r\n              value={data.remarks}\r\n              size='sm'\r\n              style={{ marginLeft: \"-15rem\", width: \"305px\", height: \"60px\" }}\r\n            />\r\n          </Col>\r\n\r\n          <Col sm={2} className='mt-3'>\r\n            <Button\r\n              disabled={disableSaveButton}\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                marginLeft: \"55rem\",\r\n              }}>\r\n              Save\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col sm={2} className='mt-3'>\r\n            <Button\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                marginLeft: \"47rem\",\r\n              }}\r\n              onClick={() => window.close()}>\r\n              Close\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <Dialog\r\n          open={open}\r\n          //onClose={handleClose}\r\n          aria-labelledby='alert-dialog-title'\r\n          aria-describedby='alert-dialog-description'>\r\n          <DialogTitle id='alert-dialog-title'>\r\n            Attachment Data Confirmation\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id='alert-dialog-description'>\r\n              This Payment Request is belongs to bulk payments, which is having{\" \"}\r\n              {data.subPaymentsCount} payment requests. Do you want to apply\r\n              same values to other Payment Requests also?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={handleYes}\r\n              color='primary'\r\n              style={{ width: \"5rem\" }}>\r\n              Yes\r\n            </Button>\r\n            <Button\r\n              onClick={handleNo}\r\n              color='primary'\r\n              style={{ width: \"5rem\" }}>\r\n              No\r\n            </Button>\r\n            <Button\r\n              onClick={handleCancel}\r\n              color='primary'\r\n              style={{ width: \"5rem\" }}>\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Form>\r\n\r\n      <br />\r\n      <hr className='hr' />\r\n\r\n      <div className='App'>\r\n        <DocumentUpload pymtReqId={id} />\r\n        <DocumentTable pymtReqId={id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Child() {\r\n  let { id } = useParams();\r\n  return <div></div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { DocumentTable } from \"./DocumentTable\";\r\nimport DocumentUpload from \"./DocumentUpload\";\r\nimport { Route, useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\n<switch>\r\n  <Route path='/ExceptionUpdate/:id/' children={<Child />} />\r\n</switch>;\r\n\r\nexport default function ExceptionUpdate() {\r\n  let { id } = useParams();\r\n\r\n  const [isExcpApproval, setIsExcpApproval] = useState(false);\r\n  const [autoRenewal, setAutoRenewal] = useState(false);\r\n  const [governmentCheckBox, setGovernmentCheckBox] = useState(false);\r\n  const [insuranceCheckBox, setInsuranceCheckBox] = useState(false);\r\n  const [noProperDocumentCheckBox, setNoProperDocumentCheckBox] =\r\n    useState(false);\r\n\r\n  console.log(\">>>>>>>><<<<<<<<<<<<<<\" + id);\r\n  const [formData, setState] = useState({});\r\n  const [data3, setData3] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data1, setData1] = useState([]);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  let handleAutoRenewal = (e) => {\r\n    setAutoRenewal(e.target.checked);\r\n  };\r\n  let handleGovernmentBox = (e) => {\r\n    setGovernmentCheckBox(e.target.checked);\r\n  };\r\n  let handleInsuranceBox = (e) => {\r\n    setInsuranceCheckBox(e.target.checked);\r\n  };\r\n  let handleNoProperDocumentBox = (e) => {\r\n    setNoProperDocumentCheckBox(e.target.checked);\r\n  };\r\n  let handleIsExcpApproval = (e) => {\r\n    console.log(e.target.checked);\r\n    setIsExcpApproval(e.target.checked);\r\n  };\r\n\r\n  function handle(e) {\r\n    var regex = /[^.=,;\\w\\s]/gi;\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value.replace(regex, \"\");\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  const loadAttachmentDetails = (ids) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .get(`${properties.loadAttachmentDetails}/${ids}`, { headers: head })\r\n      .then(\r\n        (response) => {\r\n          console.log(\r\n            \"Response Data loaded here\" + JSON.stringify(response.data)\r\n          );\r\n\r\n          setData({\r\n            data,\r\n            matrixRefNo: response.data[0].strMatrixRefNo,\r\n            mgmtCompId: response.data[0].mgmtCompId,\r\n            issuanceAuthority: response.data[0].issuanceAuthority,\r\n            tradeLicenseExpDate: response.data[0].tradeLicenseExpDate,\r\n            agreementExpDate: response.data[0].agreementExpDate,\r\n            budgetYear: response.data[0].budgetYear,\r\n            invoiceDateYear: response.data[0].invoiceDateYear,\r\n            invoiceAmount: response.data[0].invoiceAmount,\r\n            supplierId: response.data[0].supplierId,\r\n            status: response.data[0].status,\r\n            serviceCode: response.data[0].serviceCode,\r\n            buildingId: response.data[0].buildingId,\r\n            autoRenewal: response.data[0].autoRenewal,\r\n            noProperDocuments: response.data[0].noProperDocuments,\r\n            bifurcation: response.data[0].bifurcation,\r\n            isExceptionalApproval: response.data[0].isExceptionalApproval,\r\n            remarks: response.data[0].remarks,\r\n            isGovernmentEntity: response.data[0].isGovernmentEntity,\r\n            isInsuranceCompany: response.data[0].isInsuranceCompany,\r\n          });\r\n          if (!\"Y\".localeCompare(response.data[0].isExceptionalApproval)) {\r\n            setIsExcpApproval(true);\r\n          }\r\n\r\n          if (!\"Y\".localeCompare(response.data[0].noProperDocuments))\r\n            setNoProperDocumentCheckBox(true);\r\n\r\n          if (response.data[0].autoRenewal)\r\n            if (!\"Y\".localeCompare(response.data[0].autoRenewal))\r\n              setAutoRenewal(true);\r\n\r\n          if (response.data[0].isGovernmentEntity)\r\n            if (!\"Y\".localeCompare(response.data[0].isGovernmentEntity))\r\n              setGovernmentCheckBox(true);\r\n          if (response.data[0].isInsuranceCompany)\r\n            if (!\"Y\".localeCompare(response.data[0].isInsuranceCompany))\r\n              setInsuranceCheckBox(true);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  console.log(formData);\r\n\r\n  useEffect(() => {\r\n    loadAttachmentDetails(`${id}`);\r\n  }, []);\r\n\r\n  var autoRenewalData = \"\";\r\n  var isGovernmentEntity = \"\";\r\n  var isInsuranceCompany = \"\";\r\n  var noDocumentData = \"\";\r\n  var isExceptionalApproval = \"\";\r\n  if (autoRenewal) autoRenewalData = \"Y\";\r\n  else autoRenewalData = \"N\";\r\n\r\n  if (governmentCheckBox) {\r\n    console.log(\"Government\");\r\n    isGovernmentEntity = \"Y\";\r\n  } else {\r\n    isGovernmentEntity = \"N\";\r\n  }\r\n  if (insuranceCheckBox) {\r\n    console.log(\"insurance company\");\r\n    isInsuranceCompany = \"Y\";\r\n  } else {\r\n    isInsuranceCompany = \"N\";\r\n  }\r\n\r\n  if (noProperDocumentCheckBox) {\r\n    noDocumentData = \"Y\";\r\n  } else {\r\n    noDocumentData = \"N\";\r\n  }\r\n  if (isExcpApproval) {\r\n    isExceptionalApproval = \"Y\";\r\n  } else {\r\n    isExceptionalApproval = \"N\";\r\n  }\r\n  const putData = {\r\n    pymtReqId: id,\r\n    mgmtCompId: data.mgmtCompId,\r\n    issuanceAuthority: data.issuanceAuthority,\r\n    tradeLicenseExpDate: data.tradeLicenseExpDate,\r\n    agreementExpDate: data.agreementExpDate,\r\n    budgetYear: data.budgetYear,\r\n    invoiceDateYear: data.invoiceDateYear,\r\n    invoiceAmount: data.invoiceAmount,\r\n    supplierId: data.supplierId,\r\n    serviceCode: data.serviceCode,\r\n    buildingId: data.buildingId,\r\n    status: data.status,\r\n    bifurcation: data.bifurcation,\r\n    noProperDocuments: noDocumentData,\r\n    autoRenewal: autoRenewalData,\r\n    isGovernmentEntity: isGovernmentEntity,\r\n    isInsuranceCompany: isInsuranceCompany,\r\n    isExceptionalApproval: isExceptionalApproval,\r\n    bifurcation: data.bifurcation,\r\n    remarks: data.remarks,\r\n  };\r\n\r\n  const updateData = (putData) => {\r\n    console.log(putData);\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios.post(properties.exceptionUpdate, putData, { headers: head }).then(\r\n      (response) => {\r\n        alert(\"Data Updated Successfully\");\r\n        console.log(\"Response Data loaded here\" + JSON.stringify(response));\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n        alert(\"Error: Data not updated. Please try again  after sometime.\");\r\n        return false;\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(putData);\r\n    if (isExcpApproval || noProperDocumentCheckBox) {\r\n      if (!data.remarks) {\r\n        alert(\"Reason is mandatory\");\r\n        return false;\r\n      }\r\n    }\r\n    if (!isExcpApproval)\r\n      if (\r\n        data.mgmtCompId == undefined ||\r\n        data.supplierId == undefined ||\r\n        data.serviceCode == undefined ||\r\n        data.buildingId == undefined ||\r\n        data.invoiceAmount == undefined ||\r\n        data.issuanceAuthority == undefined ||\r\n        data.serviceCode == \"\" ||\r\n        data.issuanceAuthority == \"\" ||\r\n        data.mgmtCompId == \"\" ||\r\n        data.supplierId == \"\" ||\r\n        data.invoiceAmount == \"\" ||\r\n        data.budgetYear == \"\"\r\n      ) {\r\n        event.preventDefault();\r\n        alert(\"Please select all mandatory fields\");\r\n        if (insuranceCheckBox) {\r\n          if (\r\n            data.tradeLicenseExpDate == undefined &&\r\n            data.hiddenTrade == undefined\r\n          ) {\r\n            event.preventDefault();\r\n            alert(\r\n              \"Trade license expiry date is mandatory for Insurance company\"\r\n            );\r\n          }\r\n        }\r\n        return false;\r\n      } else {\r\n        updateData(putData);\r\n      }\r\n    else {\r\n      updateData(putData);\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    console.log(\"company\", company.data);\r\n    setData1(company.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchSupplier = async () => {\r\n    const supplier = await axios.get(properties.supplierList);\r\n    console.log(\"supplier\" + supplier.data);\r\n    setData3(supplier.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchSupplier();\r\n  }, []);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    console.log(\"building\", building.data);\r\n    setData2(building.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Matrix Ref No\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              size='sm'\r\n              value={data.matrixRefNo}\r\n            />\r\n          </Col>\r\n\r\n          <Label\r\n            sm={2}\r\n            style={{ marginLeft: \"10rem\" }}\r\n            autoComplete='off'\r\n            className='required'>\r\n            Budget Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              size='sm'\r\n              maxLength='4'\r\n              id='budgetYear'\r\n              defaultValue={data.budgetYear}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Supplier Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              size='sm'\r\n              type='select'\r\n              autoComplete='off'\r\n              id='supplierId'\r\n              disabled='disabled'\r\n              value={data.supplierId}\r\n              style={{ width: \"350px\" }}\r\n              onChange={(e) => handle(e)}>\r\n              <option selected hidden>\r\n                Please select a supplier\r\n              </option>\r\n              {data3.map((opt) => (\r\n                <option value={opt.supplierId}>{opt.supplierName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }}>\r\n            Invoice Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='number'\r\n              autoComplete='off'\r\n              size='sm'\r\n              maxLength={4}\r\n              id='invoiceDateYear'\r\n              defaultValue={data.invoiceDateYear}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            {\" \"}\r\n            Management Company Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              size='sm'\r\n              type='select'\r\n              autoComplete='off'\r\n              id='mgmtCompId'\r\n              disabled='disabled'\r\n              style={{ width: \"350px\" }}\r\n              value={data.mgmtCompId}\r\n              onChange={(e) => handle(e)}>\r\n              <option selected hidden>\r\n                Please select a company\r\n              </option>\r\n              {data1.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Payment Amount\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              size='sm'\r\n              disabled='disabled'\r\n              id='invoiceAmount'\r\n              defaultValue={data.invoiceAmount}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Trade License Expiry Date\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='Date'\r\n              size='sm'\r\n              id='tradeLicenseExpDate'\r\n              defaultValue={data.tradeLicenseExpDate}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Issuance Authority\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              size='sm'\r\n              id='issuanceAuthority'\r\n              defaultValue={data.issuanceAuthority}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Agreement Expiry Date\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='Date'\r\n              size='sm'\r\n              id='agreementExpDate'\r\n              defaultValue={data.agreementExpDate}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Status\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              size='sm'\r\n              id='status'\r\n              value={data.status}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Building Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              size='sm'\r\n              type='select'\r\n              autoComplete='off'\r\n              id='buildingId'\r\n              disabled='disabled'\r\n              value={data.buildingId}\r\n              onChange={(e) => handle(e)}>\r\n              <option selected hidden>\r\n                Please select building\r\n              </option>\r\n              {data2.map((opt) => (\r\n                <option value={opt.buildingId}>{opt.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"10rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={governmentCheckBox}\r\n                onChange={handleGovernmentBox}\r\n              />\r\n              Government\r\n            </Label>\r\n          </Col>\r\n\r\n          <Col md={2}>\r\n            <Label style={{ marginLeft: \"-3rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={autoRenewal}\r\n                onChange={handleAutoRenewal}\r\n              />\r\n              Auto Renewal\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Service Code\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='serviceCode'\r\n              value={data.serviceCode}\r\n              size='sm'\r\n            />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"10rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={insuranceCheckBox}\r\n                onChange={handleInsuranceBox}\r\n              />\r\n              Insurance Company\r\n            </Label>\r\n          </Col>\r\n\r\n          <Col md={2.5}>\r\n            <Label style={{ marginLeft: \"-2rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={noProperDocumentCheckBox}\r\n                onChange={handleNoProperDocumentBox}\r\n              />\r\n              No proper Data/Documents\r\n            </Label>\r\n          </Col>\r\n\r\n          <Label sm={3} className='mt-3'>\r\n            Bifurcation\r\n          </Label>\r\n          <Col sm={2} className='mt-3'>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='bifurcation'\r\n              value={data.bifurcation}\r\n              size='sm'\r\n              style={{ marginLeft: \"-5rem\" }}\r\n            />\r\n          </Col>\r\n\r\n          <Col md={4} className='mt-3'>\r\n            <Label style={{ marginLeft: \"5rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={isExcpApproval}\r\n                onChange={handleIsExcpApproval}\r\n              />\r\n              Is Exceptional Approval\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginLeft: \"\" }}>\r\n            Reason\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='textarea'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='remarks'\r\n              name='remarks'\r\n              value={data.remarks}\r\n              size='sm'\r\n              style={{ marginLeft: \"-5rem\", width: \"305px\", height: \"60px\" }}\r\n            />\r\n          </Col>\r\n          <Col sm={2}>\r\n            <Button\r\n              className='buttonUpdate'\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                // position: \"relative\",\r\n                marginLeft: \"18rem\",\r\n              }}>\r\n              update\r\n            </Button>\r\n          </Col>\r\n          <Col sm={2} style={{ marginLeft: \"13rem\" }}>\r\n            <Button\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                position: \"relative\",\r\n              }}\r\n              onClick={() => window.close()}>\r\n              Close\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n      <br />\r\n      <hr />\r\n\r\n      <div className='App'>\r\n        <DocumentUpload pymtReqId={id} />\r\n        <DocumentTable pymtReqId={id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Child() {\r\n  let { id } = useParams({});\r\n  return <div></div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { DocumentTable } from \"./DocumentTable\";\r\nimport { Route, useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n<switch>\r\n  <Route path='/attachmentFieldcomplreq/:id' children={<Child />} />\r\n</switch>;\r\n\r\nexport default function AttachmentFieldsCompletedRequest() {\r\n  let { id } = useParams();\r\n  console.log(id);\r\n\r\n  const [formData, setState] = useState({});\r\n  const [isExcpApproval, setIsExcpApproval] = useState(false);\r\n  const [autoRenewal, setAutoRenewal] = useState(false);\r\n  const [governmentCheckBox, setGovernmentCheckBox] = useState(false);\r\n  const [insuranceCheckBox, setInsuranceCheckBox] = useState(false);\r\n  const [noProperDocumentCheckBox, setNoProperDocumentCheckBox] =\r\n    useState(false);\r\n  const loadAttachmentDetails = (ids) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .get(properties.displayAttachmentDetails + `${ids}`, { headers: head })\r\n      .then(\r\n        (response) => {\r\n          console.log(\r\n            \"Response Data loaded here\" + JSON.stringify(response.data)\r\n          );\r\n\r\n          setState({\r\n            formData,\r\n            matrixRefNo: response.data[0].strMatrixRefNo,\r\n            mcNameEn: response.data[0].mcNameEn,\r\n            issuanceAuthority: response.data[0].issuanceAuthority,\r\n            tradeLicenseExpDate: response.data[0].tradeLicenseExpDate,\r\n            agreementExpDate: response.data[0].agreementExpDate,\r\n            budgetYear: response.data[0].budgetYear,\r\n            invoiceDateYear: response.data[0].invoiceDateYear,\r\n            invoiceAmount: response.data[0].invoiceAmount,\r\n            supplierName: response.data[0].supplierName,\r\n            status: response.data[0].status,\r\n            serviceCode: response.data[0].serviceCode,\r\n            buildingName: response.data[0].buildingName,\r\n            autoRenewal: response.data[0].autoRenewal,\r\n            isGovernmentEntity: response.data[0].isGovernmentEntity,\r\n            isInsuranceCompany: response.data[0].isInsuranceCompany,\r\n            noProperDocuments: response.data[0].noProperDocuments,\r\n            bifurcation: response.data[0].bifurcation,\r\n            isExceptionalApproval: response.data[0].isExceptionalApproval,\r\n            remarks: response.data[0].remarks,\r\n          });\r\n          if (!\"Y\".localeCompare(response.data[0].isExceptionalApproval)) {\r\n            setIsExcpApproval(true);\r\n          }\r\n\r\n          if (!\"Y\".localeCompare(response.data[0].noProperDocuments))\r\n            setNoProperDocumentCheckBox(true);\r\n\r\n          if (response.data[0].autoRenewal)\r\n            if (!\"Y\".localeCompare(response.data[0].autoRenewal))\r\n              setAutoRenewal(true);\r\n\r\n          if (response.data[0].isGovernmentEntity)\r\n            if (!\"Y\".localeCompare(response.data[0].isGovernmentEntity))\r\n              setGovernmentCheckBox(true);\r\n          if (response.data[0].isInsuranceCompany)\r\n            if (!\"Y\".localeCompare(response.data[0].isInsuranceCompany))\r\n              setInsuranceCheckBox(true);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  useEffect(() => {\r\n    loadAttachmentDetails(`${id}`);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5'>\r\n        <FormGroup row>\r\n          <Label sm={3}>Matrix Ref No</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.matrixRefNo} />\r\n          </Col>\r\n\r\n          <Label sm={3} className='ml-5'>\r\n            Budget Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.budgetYear} />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3}>Management Company Name</Label>\r\n          <Col sm={2}>\r\n            <Input size='sm' type='text' value={formData.mcNameEn}></Input>\r\n          </Col>\r\n\r\n          <Label sm={3} className='ml-5'>\r\n            Invoice Date/Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.invoiceDateYear} />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3}>Issuance Authority</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.issuanceAuthority} />\r\n          </Col>\r\n\r\n          <Label sm={3} className='ml-5'>\r\n            Invoice Amount\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.invoiceAmount} />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3}>Trade License Expiry Date</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.tradeLicenseExpDate} />\r\n          </Col>\r\n\r\n          <Label sm={3} className='ml-5'>\r\n            Supplier Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.supplierName} />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3}> Agreement Expiry Date</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.agreementExpDate} />\r\n          </Col>\r\n\r\n          <Label sm={3} className='ml-5'>\r\n            {\" \"}\r\n            Status\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.status} />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3}> Building Name</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.buildingName} />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"2rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={governmentCheckBox}\r\n                // onChange={handleGovernmentBox}\r\n              />\r\n              Government\r\n            </Label>\r\n          </Col>\r\n          <Col md={2}>\r\n            <Label style={{ marginLeft: \"-3rem\" }} check>\r\n              <Checkbox color='primary' checked={autoRenewal} />\r\n              Auto Renewal\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3} className=''>\r\n            Service Code\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.serviceCode} />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"2rem\" }} check>\r\n              <Checkbox color='primary' checked={insuranceCheckBox} />\r\n              Insurance Company\r\n            </Label>\r\n          </Col>\r\n\r\n          <Col md={2.5}>\r\n            <Label style={{ marginLeft: \"-2rem\" }} check>\r\n              <Checkbox color='primary' checked={noProperDocumentCheckBox} />\r\n              No proper Data/Documents\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3}>Bifurcation</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' value={formData.bifurcation} size='sm' />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"2rem\" }} check>\r\n              <Checkbox color='primary' checked={isExcpApproval} />\r\n              Is Exceptional Approval\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginLeft: \"\" }}>\r\n            Reason\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='textarea'\r\n              id='remarks'\r\n              name='remarks'\r\n              value={formData.remarks}\r\n              size='sm'\r\n              style={{ marginLeft: \"\", width: \"305px\", height: \"60px\" }}\r\n            />\r\n          </Col>\r\n          <Col sm={2}>\r\n            <Button\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                marginLeft: \"32rem\",\r\n              }}\r\n              onClick={() => window.close()}>\r\n              Close\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n      <div className='App'>\r\n        <DocumentTable pymtReqId={id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Child() {\r\n  let { id } = useParams();\r\n  return <div></div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport { DocumentTable } from \"./DocumentTable\";\r\nimport { Route, useParams } from \"react-router\";\r\n\r\nimport axios from \"axios\";\r\nimport DocumentUpload from \"./DocumentUpload\";\r\nimport { properties } from \"./properties\";\r\nimport \"./Attachment.css\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nfunction AttachmentTemp() {\r\n  return (\r\n    <>\r\n      <div style={{ overflowX: \"hidden\" }}>\r\n        <Form className='my-3 ml-5'>\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }}>\r\n              Matrix Ref No\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' size='sm' className='input' />\r\n            </Col>\r\n\r\n            <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n              Budget Year\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' id='budgetYear' size='sm' required />\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n              Supplier Name\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input size='sm' type='select' id='supplierId' size='sm' required>\r\n                <option selected disabled>\r\n                  Please select a supplier\r\n                </option>\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2} style={{ marginLeft: \"10rem\" }}>\r\n              Invoice Date/Year\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' id='invoiceDateYear' size='sm' />\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n              Management Company Name\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input size='sm' type='select' id='mgmtCompId' required>\r\n                <option selected disabled>\r\n                  Please select a company\r\n                </option>\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n              Invoice Amount\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' id='invoiceAmount' size='sm' required />\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n              Trade License Expiry Date\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='date' id='tradeLicenseExpDate' size='sm' required />\r\n              <Input type='text' id='hiddenTrade' hidden />\r\n            </Col>\r\n\r\n            <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n              Issuance Authority\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' id='issuanceAuthority' size='sm' required />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }}>\r\n              {\" \"}\r\n              Agreement Expiry Date\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='date' id='agreementExpDate' size='sm' />\r\n              <Input type='text' id='hiddenAgree' hidden />\r\n            </Col>\r\n\r\n            <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n              Service Code\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' id='serviceCode' size='sm' required />\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Col sm={4}>\r\n              <Label style={{ marginLeft: \"16rem\" }} check>\r\n                <Checkbox color='primary' />\r\n                Auto Renewal\r\n              </Label>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n              {\" \"}\r\n              Building Name\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input size='sm' type='select' id='buildingId' required>\r\n                <option selected hidden>\r\n                  Please select building\r\n                </option>\r\n              </Input>\r\n            </Col>\r\n\r\n            <Col sm={2}>\r\n              <Button\r\n                style={{\r\n                  background: \"#254a9e\",\r\n                  color: \"white\",\r\n                  position: \"relative\",\r\n                  marginLeft: \"80vh\",\r\n                }}>\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Col sm={7}>\r\n              <Label style={{ marginLeft: \"1.5rem\" }} check>\r\n                <Checkbox color='primary' />\r\n                Government\r\n              </Label>\r\n            </Col>\r\n\r\n            <Col sm={7}>\r\n              <Label style={{ marginLeft: \"1.5rem\" }} check>\r\n                <Checkbox color='primary' />\r\n                Insurance Company\r\n              </Label>\r\n            </Col>\r\n\r\n            <Col sm={7}>\r\n              <Label style={{ marginLeft: \"1.5rem\" }} check>\r\n                <Checkbox color='primary' />\r\n                No Proper Documents\r\n              </Label>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n\r\n        <div className='App'></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AttachmentTemp;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Temp() {\r\n  let { id } = useParams();\r\n  return (\r\n    <div className='text-center'>\r\n      <h1>Temporary React component with ID: {id}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Temp;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./mydiv.css\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport MuiTableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// Icons\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  selectTableCell: {\r\n    width: 40,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 20,\r\n  },\r\n  input: {\r\n    width: 130,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst CustomTableCell = ({ row, name, onChange }) => {\r\n  const classes = useStyles();\r\n  const { isEditMode } = row;\r\n  return (\r\n    <TableCell align='left' className={classes.tableCell}>\r\n      {isEditMode ? (\r\n        <Input\r\n          value={row[name]}\r\n          name={name}\r\n          onChange={(e) => onChange(e, row)}\r\n          className={classes.input}\r\n        />\r\n      ) : (\r\n        row[name]\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nfunction BulkEdit(props) {\r\n  const [rows, setRows] = useState(\r\n    props.data\r\n    // createData(\"A1.01\", \"Deficit\", 50000, 50.0, 5050.0, 2356.0, 1284.0),\r\n    // createData(\"A1.02\", \"Deficit\", 50000, 50.0, 5050.0, 2356.0, 1284.0),\r\n  );\r\n\r\n  const [previous, setPrevious] = React.useState({});\r\n  const classes = useStyles();\r\n\r\n  const onToggleEditMode = (id) => {\r\n    setRows((state) => {\r\n      return rows.map((row) => {\r\n        if (row.id === id) {\r\n          return { ...row, isEditMode: !row.isEditMode };\r\n        }\r\n\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.id]) {\r\n      setPrevious((state) => ({ ...state, [row.id]: row }));\r\n    }\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    const { id } = row;\r\n    const newRows = rows.map((row) => {\r\n      if (row.id === id) {\r\n        return { ...row, [name]: value };\r\n      }\r\n      return row;\r\n    });\r\n\r\n    setRows(newRows);\r\n  };\r\n\r\n  const onRevert = (id) => {\r\n    const newRows = rows.map((row) => {\r\n      if (row.id === id) {\r\n        return previous[id] ? previous[id] : row;\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n    setPrevious((state) => {\r\n      delete state[id];\r\n      return state;\r\n    });\r\n    onToggleEditMode(id);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} style={{ marginTop: \"-13px\" }}>\r\n      <Table className={classes.table}>\r\n        <TableHead\r\n          style={{\r\n            backgroundColor: \"#254A9E\",\r\n          }}>\r\n          <TableRow>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Action\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Service Code\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Service Name\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Amount\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              VAT\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Total Amount\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Consumed Amount\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Balance Amount\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell className={classes.selectTableCell}>\r\n                {row.isEditMode ? (\r\n                  <>\r\n                    <IconButton\r\n                      aria-label='done'\r\n                      onClick={() => onToggleEditMode(row.id)}>\r\n                      <DoneIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label='revert'\r\n                      onClick={() => onRevert(row.id)}>\r\n                      <RevertIcon />\r\n                    </IconButton>\r\n                  </>\r\n                ) : (\r\n                  <IconButton\r\n                    aria-label='delete'\r\n                    onClick={() => onToggleEditMode(row.id)}>\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                )}\r\n              </TableCell>\r\n              <CustomTableCell {...{ row, name: \"serviceCode\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"serviceName\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"amount\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"vat\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"totalAmount\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"consumedAmount\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"consumedAmount\", onChange }} />\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default BulkEdit;\r\n","import React from \"react\";\r\n\r\nfunction Test() {\r\n  return (\r\n    <div>\r\n      <h1>Test screen</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import React, { useMemo, useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport PaymentRequestFields from \"./PaymentRequestFields\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUser } from \"../action\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n// import { addUser } from \"../store/userStore\";\r\n\r\nfunction LoginFailed(props) {\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n  ReactSession.set(\"username\", \"\");\r\n  const dispatch = useDispatch();\r\n  let handleUsername = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n  let handlePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  let handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      (userName == process.env.REACT_APP_USERNAME1 &&\r\n        password == process.env.REACT_APP_PASSWORD) ||\r\n      (userName == process.env.REACT_APP_USERNAME2 &&\r\n        password == process.env.REACT_APP_PASSWORD)\r\n    ) {\r\n      dispatch(addUser(userName));\r\n      ReactSession.set(\"username\", userName);\r\n      history.push(\"/tabs/\");\r\n    } else {\r\n      alert(\"Bad Credentials!\");\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n        marginTop: \"4em\",\r\n        marginLeft: \"-15em\",\r\n        marginBottom: \"4.3em\",\r\n        marginRight: \"98.2em\",\r\n      }}>\r\n      <Card>\r\n        <CardBody\r\n          style={{\r\n            background: \"#254a9e\",\r\n            width: 800,\r\n            height: 50,\r\n            overflow: \"hidden\",\r\n          }}>\r\n          <h4 style={{ color: \"white\" }}>Login</h4>\r\n        </CardBody>\r\n\r\n        <Card className='my-3 ml-4' style={{ width: 750 }}>\r\n          <Form\r\n            className='text-center my-3'\r\n            method='POST'\r\n            action='j_security_check'\r\n            // onSubmit={handleSubmit}\r\n          >\r\n            <FormGroup>\r\n              <p className='ml-5' style={{ color: \"red\" }}>\r\n                Invalid Credentials\r\n              </p>\r\n              <Label style={{ color: \"#254a9e\" }} for='MashreqUser'>\r\n                User ID\r\n              </Label>\r\n              <input\r\n                className='ml-4'\r\n                type='userid'\r\n                name='j_username'\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label style={{ color: \"#254a9e\" }} for='MashreqPassword'>\r\n                Password\r\n              </Label>\r\n              <input\r\n                className='ml-2'\r\n                type='password'\r\n                name='j_password'\r\n                onChange={handlePassword}\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n            <Container className='ml-4' style={{ height: 50 }}>\r\n              <Button size='sm' style={{ background: \"#254a9e\" }}>\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                size='sm'\r\n                style={{ background: \"#254a9e\" }}\r\n                className='ml-4'>\r\n                Reset\r\n              </Button>\r\n            </Container>\r\n          </Form>\r\n        </Card>\r\n        <CardBody\r\n          style={{\r\n            background: \"#254a9e\",\r\n            width: 800,\r\n            height: 50,\r\n          }}></CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default LoginFailed;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { DocumentTable } from \"./DocumentTable\";\r\nimport { Route, useParams } from \"react-router\";\r\n\r\nimport axios from \"axios\";\r\nimport DocumentUpload from \"./DocumentUpload\";\r\nimport { properties } from \"./properties\";\r\nimport \"./Attachment.css\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\n{\r\n  /* <switch>\r\n  <Route path='/attachmentField/:id' children={<Child />} />\r\n</switch>; */\r\n}\r\n\r\nexport default function ReserveAttachmentFields() {\r\n\r\n  const [IsActiveCheckBox, isActive] = useState(false);\r\n  const [attachmentFlag, setAttachmentFlag] = useState(\"false\");\r\n  const [open, setOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [responseData, setResponseData] = useState([]);\r\n  const [disableSaveButton, setDisableSaveButton] = useState(false);\r\n  console.log(\"AttachmentFields started...\");\r\n  let { id } = useParams();\r\n  console.log(\"id >>>>>>>>\" + id);\r\n\r\n  // const [formData, setState] = useState({});\r\n\r\n  // const [loaddates, setDates] = useState({});\r\n\r\n  // const [data1, setData1] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [building, setBuilding] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n  const [dropDownData, setDropDownData] = useState({\r\n    accountNumber: \"\",\r\n    reserveAccountNumber: \"\",\r\n    mgmtCompId: \"\",\r\n    buildingId: \"\",\r\n    cifNumber: \"\",\r\n    branchCode: \"\",\r\n    isActive: \"\",\r\n  });\r\n  let handleInput = (e) => {\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setDropDownData({ ...dropDownData, [name]: value });\r\n    console.log(dropDownData);\r\n  };\r\n  let save = async (e) => {\r\n    e.preventDefault();\r\n    console.log(dropDownData);\r\n    if (!dropDownData.accountNumber) {\r\n      alert(\"Please select Account Number\");\r\n      return false;\r\n    };\r\n    if (!dropDownData.reserveAccountNumber) {\r\n      alert(\"Please select Reserve Account Number\");\r\n      return false;\r\n    };\r\n    // if (!dropDownData.mgmtCompId) {\r\n    //   alert(\"Please select Management Company Name\");\r\n    //   return false;\r\n    // };\r\n    // if (!dropDownData.buildingId) {\r\n    //   alert(\"Please select Building Name\");\r\n    //   return false;\r\n    // };\r\n    // if (!dropDownData.cifNumber) {\r\n    //   alert(\"Please select CIF Number\");\r\n    //   return false;\r\n    // };\r\n    // if (!dropDownData.branchCode) {\r\n    //   alert(\"Please select Branch Code\");\r\n    //   return false;\r\n    // };\r\n    // if (!dropDownData.isActive) {\r\n    //   alert(\"Please select Is Active\");\r\n    //   return false;\r\n    // };\r\n    if (dropDownData.buildingId != null && dropDownData.mgmtCompId != null && dropDownData.accountNumber != null && dropDownData.branchCode != null\r\n      && dropDownData.cifNumber != null && dropDownData.reserveAccountNumber != null && dropDownData.isActive!= null) {\r\n      alert(\"Data has been updated successfully\")\r\n\r\n    }\r\n    const requestData = {\r\n      account_Number: dropDownData.accountNumber,\r\n      cif_Number: dropDownData.cifNumber,\r\n      mgmnt_Comp_Id: dropDownData.mgmtCompId,\r\n      building_Id: dropDownData.buildingId,\r\n      reserve_Account_Number: dropDownData.reserveAccountNumber,\r\n      is_Active: 'Y',\r\n      branch_Code: dropDownData.branchCode\r\n    };\r\n    await axios.post(\r\n      `${properties.dataURl}/dataSave`,\r\n      requestData).then(response => setResponseData(response.data));\r\n    console.log(\">>>>>>>>>>.\", responseData);\r\n\r\n    //get API data\r\n    getFundDetails();\r\n    setIsOpen(false);\r\n  }\r\n  let getFundDetails = async () => {\r\n    const requestOptions = {\r\n      // method: 'POST',\r\n      // headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n      // title: 'mgmtCompId':202  'buildingId':104 ;\r\n      mgmtCompId: dropDownData.mgmtCompId,\r\n      buildingId: dropDownData.buildingId\r\n    };\r\n    await axios.post(\r\n      `${properties.dataURl}/data`,\r\n      requestOptions).then(response => setResponseData(response.data));\r\n    console.log(\">>>>>>>>>>.\", responseData);\r\n\r\n  }\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setDropDownData({ ...dropDownData, [name]: value });\r\n    console.log(dropDownData);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"submitted\");\r\n\r\n    var isActive = \"\";\r\n\r\n\r\n\r\n    // if (IsActiveCheckBox) {\r\n    //   console.log(\"Is Active\");\r\n    //   isActive = \"Y\";\r\n    // } else {\r\n    //   isActive = \"N\";\r\n    // }\r\n\r\n    function handle(e) {\r\n      var regex = /[^.=,;\\w\\s]/gi;\r\n      const newdata = { ...data };\r\n      newdata[e.target.id] = e.target.value.replace(regex, \"\");\r\n      console.log(e.target.id + \":\" + e.target.value);\r\n      setData(newdata);\r\n      console.log(\"MY DATA :: \" + JSON.stringify(newdata));\r\n      console.log(\r\n        \"handle newdata.tradeLicenseExpDate:\" + newdata.tradeLicenseExpDate\r\n      );\r\n    }\r\n  }\r\n  let handleInsCheckbox = (e) => {\r\n    isActive(e.target.checked);\r\n  };\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-1 ml-5'>\r\n        <FormGroup row className='my-2 ml--3' inline>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Account Number\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              id='accountNumber' name='accountNumber' onChange={(e) => handleInput(e)}\r\n              type='number' />\r\n            {company.map((opt) => (\r\n              <option value={opt.reserveFundId}></option>\r\n            ))}\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Reserved Account Number\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type=\"number\" id='reserveAccountNumber' name='reserveAccountNumber' onChange={(e) => handleInput(e)}\r\n            />\r\n          </Col>\r\n\r\n        </FormGroup>\r\n        <FormGroup row className='my-2 ml--3' inline>\r\n          <Label className='required' sm={3} style={{ marginRight: -80 }}>Management Company Name</Label>\r\n          <Col>\r\n            <Input className='formInput' type='select'\r\n              id='mgmtCompId'\r\n              name='mgmtCompId'\r\n              // value={company.mgmtCompId}\r\n              onChange={(e) => handleInput(e)}\r\n              onChange1={(e) => {\r\n                getBuildingNames(e);\r\n              }}\r\n              style={{ width: \"15rem\", marginRight:\"-300px\"  }}>\r\n\r\n              <option selected disabled>\r\n                Please select a company\r\n              </option>\r\n              <option value='201'>RDK OWNERS ASSOCIATION MANAGEMENT LLC</option>\r\n              <option value='202'>KAIZEN OWNER ASSOCIATION MANAGEMENT</option>\r\n              <option value='203'>Better Communities Owner Association</option>\r\n              <option value='204'>STRATUM OWNERS ASSOCIATION MANAGEMENT SERVICES LLC</option>\r\n              <option value='205'>SG Community Management Services LLC</option>\r\n              {company.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Label className=\"formLable\"  style={{ marginLeft: \"4rem\" }}>Building Name</Label>\r\n          <Col >\r\n            <Input className='formInput'\r\n              type='select'\r\n              id='buildingId'\r\n              name='buildingId'\r\n              // value={dropDownData.mgmtCompId}\r\n              onChange={(e) => handleInput(e)}\r\n              style={{ width: \"15rem\",marginLeft:\"-200px\" }}>\r\n\r\n              <option selected disabled>\r\n                Please select a building\r\n              </option>\r\n              <option value='101'>TWO TOWERS</option>\r\n              <option value='102'>BINGHATTI GATEWAY</option>\r\n              <option value='103'>MILLENNIUM BINGHATTI RESIDENCES BUSINESS BAY</option>\r\n              <option value='104'>MILANO GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='105'>GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='106'>PALM VIEW</option>\r\n              <option value='107'>W Residences - The Palm</option>\r\n              {building.map((opt2) => (\r\n                <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row className='my-2 ml--3' inline>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required' >\r\n            CIF Number\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='number' id='cifNumber' name='cifNumber' onChange={(e) => handleInput(e)}  />\r\n            {company.map((opt) => (\r\n              <option value={opt.cifNumber}></option>\r\n            ))}\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Branch Code\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type=\"number\" id='branchCode' name='branchCode' onChange={(e) => handleInput(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"0rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={IsActiveCheckBox}\r\n                onChange={handleInsCheckbox}\r\n              />\r\n              Is Active\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row className='my-2 ml--3' inline>\r\n          <Button\r\n            type=\"submit\" onClick={save} style={{ background: \"#254a9e\", color: \"white\", marginLeft: \"430px\" }}>\r\n            UPDATE & SAVE{\" \"}\r\n          </Button>\r\n\r\n          <Col sm={2} className='mt-3'>\r\n            <Button\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n              onClick={() => window.close()}>\r\n              Close\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n\r\n      </Form>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Child() {\r\n  let { id } = useParams();\r\n  return <div></div>;\r\n}","import React from 'react'\r\nimport { PieChart,Pie,CartesianGrid,Tooltip,ResponsiveContainer } from 'recharts'\r\nimport { Grid,Card } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors';\r\nimport { MenuBook } from '@material-ui/icons';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nconst data = [\r\n  {\r\n      name: 'Page A',\r\n      uv: 100,\r\n      pv: 200,\r\n      amt: 100\r\n  },\r\n  {\r\n      name: 'Page B',\r\n      uv: 300,\r\n      pv: 100,\r\n      amt: 150\r\n  },\r\n  {\r\n      name: 'Page C',\r\n      uv: 400,\r\n      pv: 240,\r\n      amt: 340\r\n  },\r\n  {\r\n      name: 'Page D',\r\n      uv: 200,\r\n      pv: 242,\r\n      amt: 250\r\n  }, {\r\n      name: 'Page E',\r\n      uv: 100,\r\n      pv: 240,\r\n      amt: 240\r\n  }, {\r\n      name: 'Page F',\r\n      uv: 400,\r\n      pv: 245,\r\n      amt: 540\r\n  }\r\n];\r\n\r\nconst fill1=['red','green','orange']\r\n\r\nfunction Dchart2() {\r\n  return (\r\n    \r\n    <ResponsiveContainer width=\"100%\" height=\"100%\" >\r\n    <PieChart width={400} height={400}>\r\n      <Pie\r\n        dataKey=\"uv\"\r\n        isAnimationActive={false}\r\n        data={data}\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        outerRadius={100}\r\n        fill1=\"#8884d8\"\r\n        label\r\n      />\r\n       <Pie\r\n        dataKey=\"pv\"\r\n        isAnimationActive={false}\r\n        data={data}\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        outerRadius={100}\r\n        fill=\"#8884d8\"\r\n        label\r\n      />\r\n       <Pie\r\n        dataKey=\"amt\"\r\n        isAnimationActive={false}\r\n        data={data}\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        outerRadius={100}\r\n        fill=\"#8884d8\"\r\n        label\r\n      />\r\n     \r\n      <Tooltip />\r\n    </PieChart>\r\n  \r\n  </ResponsiveContainer>\r\n  )\r\n}\r\n\r\nexport default Dchart2\r\n","import React from 'react';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\r\nimport { Container, Grid, Card, Box } from '@material-ui/core';\r\nimport Modal from '@mui/material/Modal';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 'auto',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\n\r\n\r\n\r\n\r\nconst data = [\r\n    {\r\n        name: 'Page A',\r\n        uv: 100,\r\n        pv: 200,\r\n        amt: 100\r\n    },\r\n    {\r\n        name: 'Page B',\r\n        uv: 300,\r\n        pv: 100,\r\n        amt: 150\r\n    },\r\n    {\r\n        name: 'Page C',\r\n        uv: 400,\r\n        pv: 240,\r\n        amt: 340\r\n    },\r\n    {\r\n        name: 'Page D',\r\n        uv: 200,\r\n        pv: 242,\r\n        amt: 250\r\n    }, {\r\n        name: 'Page E',\r\n        uv: 100,\r\n        pv: 240,\r\n        amt: 240\r\n    }, {\r\n        name: 'Page F',\r\n        uv: 400,\r\n        pv: 245,\r\n        amt: 540\r\n    }\r\n];\r\n\r\n\r\nfunction LinechartD() {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => {\r\n        console.log('Modal is closing'); // Add this line\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Box>\r\n                    <Grid container >\r\n                        <Grid item >\r\n                            <Card>\r\n                                <div onClick={handleOpen}>\r\n                                    <LineChart width={400} height={300} data={data} >\r\n                                        <Line type='monotone' dataKey=\"uv\" stroke=\"#2196f3\" strokeWidth={2} />\r\n                                        <Line type='monotone' dataKey=\"pv\" stroke=\"#F44236\" strokeWidth={2} />\r\n                                        <Line type='monotone' dataKey=\"amt\" stroke=\"#FFCA29\" strokeWidth={2} />\r\n                                        <CartesianGrid stroke='#ccc' />\r\n                                        <XAxis dataKey='name' />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                    </LineChart>\r\n                                </div>\r\n\r\n                                <Modal\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                    aria-labelledby=\"modal-modal-title\"\r\n                                    aria-describedby=\"modal-modal-description\"\r\n                                >\r\n                                    <Box sx={style}>\r\n                                        <TableContainer component={Paper}>\r\n                                            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell>Dessert (100g serving)</TableCell>\r\n                                                        <TableCell align=\"right\">Calories</TableCell>\r\n                                                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                                                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                                                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {rows.map((row) => (\r\n                                                        <TableRow\r\n                                                            key={row.name}\r\n                                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                                        >\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                {row.name}\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                                            <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                                            <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                                                            <TableCell align=\"right\">{row.protein}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </TableContainer>\r\n\r\n                                    </Box>\r\n                                </Modal>\r\n                            </Card>\r\n\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n                </Box>\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LinechartD\r\n","import React from 'react'\r\nimport { Container, Box, Grid, Card } from '@material-ui/core';\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    CartesianGrid,\r\n    Pie,\r\n    PieChart,\r\n    ResponsiveContainer,\r\n    LineChart,\r\n    Line\r\n} from 'recharts';\r\n\r\nimport Dchart2 from './Dchart2';\r\nimport LinechartD from './linechart';\r\n\r\n\r\n// \r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n// \r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useState } from 'react';\r\n\r\n// \r\n\r\n\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 'auto',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\n\r\n\r\n// \r\n\r\nconst data = [\r\n    {\r\n        name: 'Page A',\r\n        uv: 100,\r\n        pv: 200,\r\n        amt: 100\r\n    },\r\n    {\r\n        name: 'Page B',\r\n        uv: 300,\r\n        pv: 100,\r\n        amt: 150\r\n    },\r\n    {\r\n        name: 'Page C',\r\n        uv: 400,\r\n        pv: 240,\r\n        amt: 340\r\n    },\r\n    {\r\n        name: 'Page D',\r\n        uv: 200,\r\n        pv: 242,\r\n        amt: 250\r\n    }, {\r\n        name: 'Page E',\r\n        uv: 100,\r\n        pv: 240,\r\n        amt: 240\r\n    }, {\r\n        name: 'Page F',\r\n        uv: 400,\r\n        pv: 245,\r\n        amt: 540\r\n    }\r\n];\r\n\r\nfunction Dashboard() {\r\n    const [carbsData, setCarbsData] = useState(null);\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => {\r\n        console.log('Modal is closing'); // Add this line\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleCarbsClick = (carbs1) => {\r\n        const carbsdetails = rows.find((each) => each.carbs === carbs1)\r\n        console.log('Carbs clicked:', carbs1);\r\n        setCarbsData(carbsdetails);\r\n        handleOpen();\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Box >\r\n                    <Grid container spacing={2}  >\r\n\r\n                        <Grid item xs={12} sm={6} md={4}  >\r\n                            <Card>\r\n                                <div onClick={() => handleCarbsClick(rows[3].carbs)} >\r\n                                    <BarChart width={400}\r\n                                        height={300}\r\n                                        data={data}>\r\n                                        <XAxis dataKey=\"name\" stroke=\"#8884d8\" />\r\n                                        <YAxis />\r\n                                        <Tooltip wrapperStyle={\r\n                                            {\r\n                                                width: 70,\r\n                                                backgroundColor: '#ccc'\r\n                                            }\r\n                                        } />\r\n\r\n                                        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                                        <Bar dataKey=\"uv\" fill=\"#8884d8\"\r\n                                            barSize={20} />\r\n                                        <Bar dataKey=\"pv\" fill=\"red\"\r\n                                            barSize={20} />\r\n                                        <Bar dataKey=\"amt\" fill=\"#green\"\r\n                                            barSize={20} />\r\n\r\n\r\n                                    </BarChart>\r\n                                </div>\r\n\r\n                                {/* model */}\r\n\r\n                                <Modal\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                    aria-labelledby=\"modal-modal-title\"\r\n                                    aria-describedby=\"modal-modal-description\"\r\n                                    disablePortal\r\n                                    disableEnforceFocus\r\n                                >\r\n                                    <Box sx={style}>\r\n                                        <TableContainer component={Paper}>\r\n                                            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell>Dessert (100g serving)</TableCell>\r\n                                                        <TableCell align=\"right\">Calories</TableCell>\r\n                                                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                                                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                                                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {rows.map((row) => (\r\n                                                        <TableRow\r\n                                                            key={row.name}\r\n                                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                                        >\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                {row.name}\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                                            <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <span\r\n                                                                    style={{ cursor: 'pointer', color: 'blue', textDecoration: 'underline' }}\r\n                                                                    onClick={(e) => handleCarbsClick(row[3].carbs)}\r\n                                                                >\r\n                                                                    {row.carbs}\r\n                                                                </span>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">{row.protein}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </TableContainer>\r\n\r\n                                    </Box>\r\n                                </Modal>\r\n\r\n\r\n\r\n                            </Card>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12} sm={6} md={3} >\r\n\r\n                            <Dchart2 />\r\n\r\n                        </Grid>\r\n                        <div>\r\n                            <div onClick={handleOpen}>\r\n\r\n                                <MenuIcon />\r\n                            </div>\r\n\r\n                            <Modal\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"modal-modal-title\"\r\n                                aria-describedby=\"modal-modal-description\"\r\n                            >\r\n                                <Box sx={style}>\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Dessert (100g serving)</TableCell>\r\n                                                    <TableCell align=\"right\">Calories</TableCell>\r\n                                                    <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                                                    <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                                                    <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {rows.map((row) => (\r\n                                                    <TableRow\r\n                                                        key={row.name}\r\n                                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                                    >\r\n                                                        <TableCell component=\"th\" scope=\"row\">\r\n                                                            {row.name}\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n\r\n                                </Box>\r\n                            </Modal>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <Grid item xs={12} sm={6} md={4}  >\r\n\r\n                            <LinechartD />\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Box>\r\n\r\n            </Container>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","// import { Box,Card, Container, Grid, Typography } from '@material-ui/core';\r\n// import React from 'react'\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\n// function Dash() {\r\n//   return (\r\n//     <div>\r\n//      <Box>\r\n//      <Container>\r\n//       <Grid container spacing={2}>\r\n//         <Grid items xs={2} md={4} alignContent='center' className='dashcards' >\r\n//         {rows.map((row) =>(\r\n//           <Card >\r\n//              <div>\r\n//               <Typography variant='h6' >\r\n//                 Name:{row.name}\r\n//               </Typography>\r\n//               <Typography variant='p' >\r\n//                 calories:{row.calories}\r\n//               </Typography>\r\n//              </div>\r\n//              <div>\r\n//               <Typography variant='p'>\r\n//                Fat:{row.fat}\r\n//               </Typography>\r\n//              </div>\r\n//              <div>\r\n//               <Typography variant='p'>\r\n//                carbs:{row.carbs}\r\n//               </Typography>\r\n//              </div>\r\n//           </Card>\r\n//         ))}\r\n//         </Grid>\r\n//       </Grid>\r\n//       </Container>\r\n//      </Box>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Dash;\r\n\r\nimport { Box, Card, Container, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction Dash() {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Grid container spacing={2}>\r\n          {rows.map((row, index) => (\r\n            <Grid item key={index} xs={12} sm={6} md={4} lg={3}>\r\n              <Card className='dashcards'>\r\n                <div>\r\n                  <Typography variant='h6'>\r\n                    Name: {row.name}\r\n                  </Typography>\r\n                  <Typography variant='body1'>\r\n                    Calories: {row.calories}\r\n                  </Typography>\r\n                </div>\r\n                <div>\r\n                  <Typography variant='body1'>\r\n                    Fat: {row.fat}\r\n                  </Typography>\r\n                </div>\r\n                <div>\r\n                  <Typography variant='body1'>\r\n                    Carbs: {row.carbs}\r\n                  </Typography>\r\n                </div>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dash;\r\n\r\n","import React, { useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n// import CommingSoon from \"../../ComingSoon/ComingSoon\";\r\nconst CasePriority = () => {\r\n  const [options, setOptions] = useState(\r\n    {\r\n      chart: {\r\n        type: 'bar',\r\n        height: 350,\r\n        stacked: true,\r\n        toolbar: {\r\n          show: true\r\n        },\r\n        zoom: {\r\n          enabled: true\r\n        }\r\n      },\r\n      responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n          legend: {\r\n            position: 'bottom',\r\n            offsetX: -10,\r\n            offsetY: 0\r\n          }\r\n        }\r\n      }],\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          borderRadius: 10,\r\n          dataLabels: {\r\n            total: {\r\n              enabled: true,\r\n              style: {\r\n                fontSize: '13px',\r\n                fontWeight: 900\r\n              }\r\n            }\r\n          }\r\n        },\r\n      },\r\n      xaxis: {\r\n        type: 'date',\r\n        categories: ['01/01/2011 GMT', '01/02/2011 GMT', '01/03/2011 GMT'\r\n        ],\r\n      },\r\n      legend: {\r\n        position: 'right',\r\n        offsetY: 40\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      }\r\n    },\r\n  );\r\n\r\n  const [series, setSeries] = useState([{\r\n    name: 'Label 1',\r\n    data: [44, 55, 41]\r\n  }, {\r\n    name: 'Label 2',\r\n    data: [13, 23, 20]\r\n  }, {\r\n    name: 'Label 3',\r\n    data: [11, 17, 15]\r\n  }]);\r\n\r\n  return (\r\n    \r\n    <div className=\"RiskScoreChart\">\r\n      <Chart\r\n        options={options}\r\n        series={series}\r\n        type=\"bar\"\r\n        height={'227px'}\r\n        width={\"100%\"}\r\n      />\r\n      {/* <CommingSoon/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CasePriority };\r\n","// import React, { useState } from 'react'\r\n// import Chart from 'react-apexcharts'\r\n// import { CaseTypes123 } from './dounautchart2';\r\n// import TableData from './tableData';\r\n// function RiskLevel({ }) {\r\n\r\n//     let [caseDonutData, setCaseDonutData] = useState([]);\r\n//     let cases = [0, 0, 0];\r\n\r\n\r\n//     const staticDashboardData = {\r\n//         \"httpCode\": 200,\r\n//         \"httpMessage\": \"Valid Token\",\r\n//         \"closedCasesCount\": 5,\r\n//         \"openCasesCount\": 4639,\r\n//         \"overdueCasesCount\": 3732,\r\n//         \"totalCasesCount\": 4644,\r\n//         \"low\": null,\r\n//         \"medium\": null,\r\n//         \"high\": null,\r\n//         \"unrated\": null,\r\n//         \"total\": null,\r\n//         \"newCases\": null,\r\n//         \"amberzoneCases\": null,\r\n//         \"aboutToDueCases\": null,\r\n//         \"rfiResponses\": null,\r\n//         \"rfaResponses\": null,\r\n//         \"newAlerts\": null,\r\n//         \"approvedSTRs\": null\r\n//     }\r\n\r\n//     let [dashboardData, setDashboardData] = useState([staticDashboardData]);\r\n\r\n//     const getDashboardheader = async () => {\r\n//         let donutData = []\r\n//         setDashboardData(...dashboardData, dashboardData)\r\n//         // let res = await getDashboradHeaderDetails(user)\r\n//         // if (res?.htt  pCode === 200) {\r\n//         // setDashboardData(...dashboardData, res);\r\n//         donutData.push(staticDashboardData.closedCasesCount === null ? 0 : staticDashboardData?.closedCasesCount)\r\n//         donutData.push(staticDashboardData.openCasesCount === null ? 0 : staticDashboardData?.openCasesCount)\r\n//         donutData.push(staticDashboardData.overdueCasesCount === null ? 0 : staticDashboardData?.overdueCasesCount)\r\n//         setCaseDonutData(donutData)\r\n//         // dashboardData = res;\r\n//         // } else if (res?.httpCode === 500) {\r\n//         // dashboardData = [];\r\n//         // } else if (res?.httpCode === 401) {\r\n//         // logout();\r\n//         // } else {\r\n//         // dashboardData = [];\r\n//         // }\r\n\r\n\r\n//     }\r\n\r\n//     const DonutChartOptions = {\r\n//         labels: [\r\n//             \"Closed\", \"Open\", \"Overdue\"\r\n//         ],\r\n//         colors: [\r\n//             \"#59A2F6\", \"#0DA931\", \"#B00020\"\r\n//         ],\r\n//         dataLabels: {\r\n//             enabled: true,\r\n//             formatter: function (val, opts) {\r\n//                 return opts.w.config.series[opts.seriesIndex]\r\n//             }\r\n//         },\r\n//         plotOptions: {\r\n//             pie: {\r\n//                 expandOnclick: true,\r\n//                 donut: {\r\n//                     labels: {\r\n//                         show: true,\r\n//                         total: {\r\n//                             show: true,\r\n//                             showAlways: true,\r\n//                             label: \"Total Cases\",\r\n//                             color: \"black\",\r\n//                             formatter: function (val) {\r\n//                                 let data = val.config.series;\r\n//                                 return data[0] + data[1];\r\n//                             }\r\n//                         }\r\n//                     }\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <Chart options={DonutChartOptions}\r\n//                 series={caseDonutData}\r\n//                 type=\"donut\"\r\n//                 height={\"227px\"}\r\n//                 width={\"100%\"} />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export {\r\n//     RiskLevel\r\n// }\r\n\r\n\r\n// jhcoudhfoh\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nfunction RiskLevel() {\r\n  const [caseDonutData, setCaseDonutData] = useState([0, 0, 0]);\r\n  const staticDashboardData = {\r\n    \"httpCode\": 200,\r\n    \"httpMessage\": \"Valid Token\",\r\n    \"closedCasesCount\": 5,\r\n    \"openCasesCount\": 4639,\r\n    \"overdueCasesCount\": 3732,\r\n    \"totalCasesCount\": 4644,\r\n    \"low\": null,\r\n    \"medium\": null,\r\n    \"high\": null,\r\n    \"unrated\": null,\r\n    \"total\": null,\r\n    \"newCases\": null,\r\n    \"amberzoneCases\": null,\r\n    \"aboutToDueCases\": null,\r\n    \"rfiResponses\": null,\r\n    \"rfaResponses\": null,\r\n    \"newAlerts\": null,\r\n    \"approvedSTRs\": null\r\n  };\r\n  const [dashboardData, setDashboardData] = useState(staticDashboardData);\r\n\r\n  const updateDonutData = (data) => {\r\n    const donutData = [\r\n      data.closedCasesCount || 0,\r\n      data.openCasesCount || 0,\r\n      data.overdueCasesCount || 0,\r\n    ];\r\n    setCaseDonutData(donutData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateDonutData(dashboardData);\r\n  }, [dashboardData]);\r\n\r\n  const DonutChartOptions = {\r\n    labels: [\"Closed\", \"Open\", \"Overdue\"],\r\n    colors: [\"#59A2F6\", \"#0DA931\", \"#B00020\"],\r\n    dataLabels: {\r\n      enabled: true,\r\n      formatter: function (val, opts) {\r\n        return opts.w.config.series[opts.seriesIndex];\r\n      },\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        expandOnClick: true,\r\n        donut: {\r\n          labels: {\r\n            show: true,\r\n            total: {\r\n              show: true,\r\n              showAlways: true,\r\n              label: \"Total Cases\",\r\n              color: \"black\",\r\n              formatter: function (val) {\r\n                let data = val.config.series;\r\n                return data[0] + data[1];\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chart\r\n        options={DonutChartOptions}\r\n        series={caseDonutData}\r\n        type=\"donut\"\r\n        height={\"227px\"}\r\n        width={\"100%\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { RiskLevel };\r\n","import React, { useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport function CaseTypes123(props) {\r\n  //let cases=props.data ;\r\n  //console.log(\"case data:\",props.data);\r\n  //let [casesCountList,setCasesCountList]=useState(props.data);\r\n  const [series, setSeries] = useState(props.data);\r\n\r\n  const [options, setOptions] = useState(\r\n    {\r\n\r\n      labels: [\"Closed\", \"Open\", \"Overdue\"],\r\n      dataLables: {\r\n        enabled: true,\r\n\r\n        formatter: function (val, opts) {\r\n          return opts.w.config.series[opts.seriesIndex]\r\n        }\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          expandOnClick: true,\r\n\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                show: true,\r\n                showAlways: true,\r\n                // name: true,\r\n                // value: true,\r\n                label: \"Total Cases\",\r\n                color: \"FFFFFF\",\r\n              },\r\n              // dataLables:{\r\n              //   formatter:function(val,opts){\r\n              //     return opts.w.config.series[opts.seriesIndex];\r\n              //   }\r\n              // }\r\n            },\r\n\r\n          },\r\n\r\n        },\r\n\r\n\r\n      },\r\n    } //end\r\n  );\r\n  // let closedCases;\r\n  // let openCases;\r\n  // let overduedCases;\r\n  //console.log(\"count\"+ casesCountList);\r\n  // if(typeof cases !== 'undefined' && cases.length > 0){\r\n  //     closedCases = cases.closedCasesCount;\r\n  //     openCases=cases.openCasesCount;\r\n  //     overduedCases=cases.overdueCasesCount;\r\n  //   // }\r\n  // let a=props.data[0]\r\n  // let b=props.data[1]\r\n  // let c=props.data[2]\r\n  //  console.log(a+\"::\"+b+\"::\"+c);\r\n\r\n\r\n  //console.log(closedCases+\"::\"+openCases+\"::\"+overduedCases);\r\n  console.log(\"props.data: \", props);\r\n  // console.log(\"props.data: \",props.data.length);\r\n\r\n  // const [series, setSeries] = useState([0, 1 ,0]);\r\n  // console.log(\"series: \",series);\r\n  return (\r\n    // <div className=\"CaseTypesChart\">\r\n    <div >\r\n      {/* {props.data.length > 0 &&  */}\r\n      <Chart\r\n        options={options}\r\n        // series={[1,4,10]}\r\n        series={props.data}\r\n        type=\"donut\"\r\n        height={\"227px\"}\r\n        width={\"100%\"}\r\n      />\r\n      {/* } */}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { alpha, useTheme } from \"@mui/material/styles\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\nexport const GlobalFilter = ({ filter, setFilter }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <Search>\r\n                <SearchIconWrapper>\r\n                    <SearchIcon />\r\n                </SearchIconWrapper>\r\n                <StyledInputBase\r\n                    placeholder=\"Case ID / Alert ID / CIF No / Customer Name\"\r\n                    inputProps={{ \"aria-label\": \"search\" }}\r\n                value={filter || ''}\r\n                onChange={(e) => setFilter(e.target.value) }\r\n                />\r\n            </Search> */}\r\n            <Paper\r\n                component=\"form\"\r\n                sx={{ p: '1px 3px', display: 'flex', alignItems: 'center', width: 220 }}\r\n                style={{borderRadius:'15px',boxShadow:'0.7px 0.7px 0.7px #FF5E00,-0.7px -0.7px 0.7px #1A4198' }}\r\n            >\r\n                <IconButton type=\"submit\" sx={{ p: '1px 3px 3px 3px' }} aria-label=\"search\">\r\n                    <SearchIcon />\r\n                </IconButton>\r\n\r\n                <InputBase\r\n                    sx={{ ml: 0.5, flex: 0.5 }}\r\n                    \r\n                    placeholder=\"Search here\"\r\n                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                    value={filter || ''}\r\n                    onChange={(e) => setFilter(e.target.value)}\r\n                />\r\n\r\n\r\n\r\n            </Paper>\r\n\r\n        </>\r\n    )\r\n\r\n}","// import Typography from '@mui/material/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport MuiTableCell from \"@material-ui/core/TableCell\";\r\nimport ArrowRightAltIcon from \"@mui/icons-material/ArrowRightAlt\";\r\nimport GetAppOutlined from '@mui/icons-material/GetApp';\r\nimport {\r\n  Box,\r\n  Button, Paper,\r\n  Table,\r\n  TableBody, TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useTable\r\n} from \"react-table\";\r\nimport {alignLabel,truncateText} from \"util\"\r\n// import { alignLabel, truncateText } from \"src\\component\\Dashboard\\UtilsIndex.js\";\r\n// import { Underline } from \"../Underline\";\r\nimport { GlobalFilter } from \"./Globalfilter\"\r\n\r\n/**\r\n * generic table with pagination.\r\n */\r\nexport function GenericTable({\r\n  col:columns, apiData: data = [], title, viewAll, onChange = \"\",\r\n  // isPagination = false,\r\n  isGlobalSearch = true, isExportExcel = false, stickyHeader, onClick,\r\n  action, renderStatus, isPageSize, pointerColumn\r\n}) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    page,\r\n    state,\r\n    setGlobalFilter,\r\n    setPageSize,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  }, useGlobalFilter, usePagination);\r\n\r\n  useEffect(() => {\r\n    if (isPageSize) {\r\n      setPageSize(10);\r\n    } else {\r\n      setPageSize(data.length);\r\n    }\r\n  }, []);\r\n\r\n  const { globalFilter } = state\r\n\r\n  const TableCell = withStyles({\r\n    root: {\r\n      border: \"1px solid rgb(213 218 222)\",\r\n      align: \"center\",\r\n      padding: \"10px 10px\",\r\n      background: \"white\"\r\n    },\r\n  })(MuiTableCell);\r\n\r\n  const renderTableBodyCell = (cell, row) => {\r\n    if (cell.column.Header === \"\") {\r\n      return action(cell, row);\r\n    }\r\n    if ((cell.column.Header === \"STATUSES\" || cell.column.Header === \"EXPIRED\" ) && renderStatus) {\r\n      return renderStatus(cell.value)\r\n    }\r\n    if (cell.value) {\r\n      if (typeof cell.value === \"string\") {\r\n        if (cell.value.length > 150) {\r\n          return (\r\n            <Tooltip title={cell.value} className=\"pointer message-details\" PopperProps={{disablePortal:true}}>\r\n              <Box component=\"span\">\r\n                {truncateText(cell.value, 150)}\r\n              </Box>\r\n            </Tooltip>\r\n          )\r\n        }\r\n      }\r\n      return cell.render(\"Cell\")\r\n    }\r\n    return \"N/A\"\r\n  }\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between\">\r\n        {\r\n          title ?\r\n            (<div>\r\n              {/* <Typography variant=\"h6\" component=\"h2\" style={{ marginLeft: '1%' ,backgroundColor:'#EBEDF4'}}> */}\r\n              <h5> {title}</h5>\r\n              {/* </Typography> */}\r\n              {/* <Underline width=\"30px\" className=\"my-2\" /> */}\r\n            </div>\r\n            ) : \"\"\r\n        }\r\n        <div className=\"d-flex\">\r\n          <div className=\"p-2\">\r\n            {isGlobalSearch && <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />}\r\n          </div>\r\n          {\r\n            viewAll ? (\r\n              <div>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <Link to={viewAll} target=\"_blank\" rel='noopener'>\r\n                    <Button style={{ textTransform: \"none\", color: \"#FF5E00\" }}>\r\n                      View All <ArrowRightAltIcon />\r\n                    </Button>\r\n                  </Link>\r\n                  <div />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n\r\n              </div>\r\n            )\r\n          }\r\n          {  /*   ------------------------ PHASE TWO-------------------------*/}\r\n          {isExportExcel && <div style={{ display: \"flex\" }}>\r\n            <Button disabled style={{ textTransform: \"none\", color: \"#1D6F42\" }}>\r\n              {/* <img src={xlicon} style={{ width: \"25px\" }} /> */}\r\n              <GetAppOutlined size={30} color=\"#1D6F42\" />\r\n              Export to Excel\r\n            </Button>\r\n          </div>}\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Paper\r\n        elevation={0}\r\n        sx={{\r\n          marginTop: \"2px\",\r\n          marginBottom: \"0px\",\r\n          display: \"flex\"\r\n        }}\r\n      >\r\n        <TableContainer sx={{ maxHeight: stickyHeader ? 440 : '' }}>\r\n          <Table {...getTableProps()}>\r\n            <TableHead>\r\n              {headerGroups.map((headerGroup, index) => (\r\n                <TableRow {...headerGroup.getHeaderGroupProps()} key={index}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <TableCell\r\n                      key={column.Header || column.id}\r\n                      {...column.getHeaderProps()}\r\n                      style={{\r\n                        color: \"rgb(26, 65, 152)\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"12px\",\r\n                        // fontFamily: 'Gilroy-Bold',\r\n                        // whiteSpace:'nowrap',\r\n                        background: \"#F5F6F9\",\r\n                      }}\r\n                      align={alignLabel(column.Header)}\r\n                    >\r\n                      {column.render(\"Header\").toUpperCase()}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableHead>\r\n            <TableBody>\r\n              {console.log('row:', page)}\r\n              {page.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <TableRow {...row.getRowProps()}>\r\n                    {row.cells.map((cell, i) => {\r\n                      return (\r\n                        <TableCell\r\n                          key={cell.column.Header}\r\n                          {...cell.getCellProps()}\r\n                          style={\r\n                            { color: cell.column.Header === pointerColumn && cell.value ? \"#F7971C\" : \"#000\" }\r\n                          }\r\n                          className={cell.column.Header === pointerColumn && cell.value ? \"pointer\" : \"\"}\r\n                          align={alignLabel(cell.column.Header)}\r\n                          onClick={() => cell.column.Header === pointerColumn && cell.value ? onClick(cell) : \"\"}\r\n                        >\r\n                          {renderTableBodyCell(cell, row)}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport PlayArrowRoundedIcom from '@mui/icons-material/PlayArrowRounded';\r\nimport { tableHeaders } from './tableData'\r\n\r\nconst { caseRefernece, sasCaseId, cifId, alteredEntityNumber, primaryEntityName, ageing, alertCreationDate, createrUserId, assignedTo, caseCreatedDate, status } = tableHeaders\r\n\r\nexport const Cases_column = () => {\r\n    return ([\r\n        {\r\n            Header: '<Field 1>',\r\n            accessor: 'dataTaskDetails',\r\n            Cell: (e) => (<Link to={`/casedetails/${e.value.value}/${e.value.name}/${e.row?.original?.caseRefNo}`} target='_blank' rel='noopener'> <PlayArrowRoundedIcom fontSize={\"medium\"} /> </Link>),\r\n        },\r\n        {\r\n            Header: caseRefernece,\r\n            accessor: 'caseRefNo',\r\n\r\n        },\r\n        { Header: sasCaseId, accessor: 'sasCaseId' },\r\n        { Header: cifId, accessor: 'cifId' },\r\n        { Header: alteredEntityNumber, accessor: 'alertedEntityNumber' },\r\n        // { Header: 'Alerted Entity Name', accessor: 'customerName' },\r\n        // { Header: 'Primary Entity number', accessor: 'primaryEntityNumber' },\r\n        { Header: primaryEntityName, accessor: 'primaryEntityName' },\r\n        { Header: ageing, accessor: 'ageing' },\r\n        { Header: alertCreationDate, accessor: 'alertCreationDate' },\r\n        { Header: createrUserId, accessor: 'createdUserId' },\r\n        { Header: assignedTo, accessor: 'taskAssignedToUser' },\r\n        { Header: caseCreatedDate, accessor: 'createdDateTime' },\r\n        { Header: status, accessor: 'caseStatus' }\r\n    ])\r\n}\r\n\r\n","/**\r\n * A collection of string in objects based on modules for displaying as labels.  \r\n * This file is created for the purpose - if any or all label/static data needs to be changed in future,\r\n * changes needs to be done only in this file rather than changing in complete project.\r\n * This ensures that changes can be viewed/reviewed in git in easy manner and handling is easy.              \r\n */\r\nconst viewAll = {\r\n  activeCases: {\r\n      title: \"Title 1\"\r\n  },\r\n  allCases: {\r\n      title: \"Title 2\"\r\n  }\r\n}\r\n\r\nconst dashboardTitle = 'Dashboard'\r\nconst adminDashboardTitle = 'Admin Dashboard'\r\nconst tableHeaders = {\r\n  caseRefernece : '<Field 2>',\r\n  sasCaseId : '<Field 3>',\r\n  cifId:'<Field 4>',\r\n  alteredEntityNumber:'<Field 5>',\r\n  primaryEntityName:'<Field 6>',\r\n  ageing: '<Field 7>',\r\n  alertCreationDate: '<Field 8>',\r\n  createrUserId: '<Field 9>',\r\n  assignedTo:'<Field 10>',\r\n  caseCreatedDate:'<Field 11>',\r\n  status:'<Field 12>'\r\n}\r\nconst label = {\r\n  cases: 'Cases',\r\n  risk: 'Risk Score',\r\n  performance: 'My Performance',\r\n  productivity: 'Productivity',\r\n  chartText : 'You are 60% more productive this month!',\r\n  AddOptions : 'Add Controls',\r\n  mapping :'Mapping Controls'\r\n  \r\n}\r\n\r\nconst fileUpload = {\r\n  fileSizeLimit : 'Total file size exceeded. Maximum total file size is 15 MB.',\r\n  placeholderText: 'Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>',\r\n  maxFileSizeAllowed : 'File is too large. Maximum file size allowed is 15 MB',\r\n  errorMessage: 'Error while uploading file. Please try again',\r\n  successMessage: 'File uploaded successfully'\r\n}\r\n\r\nconst caseCustomerDetails = {\r\n  caseDetails: {\r\n      title: \"Case Details\",\r\n      chip: \"Cases\",\r\n      caseId: \" Case ID: #\",\r\n      cifNo: \"CIF No\",\r\n      accountType: \"Account Type\",\r\n      customerType: \"Customer Type\",\r\n      ageOfRealtionship: \"Label 1\",\r\n      rm: \"Label 2\",\r\n      groupSegment: \"Label 3\",\r\n      nationality: \"Label 4 \",\r\n      caseStatus: \"Label 5\",\r\n      caseCreatedDate: \"Lable 6\",\r\n      deadLine: \"Label 7\",\r\n      latestData: \"Label 8\",\r\n      crsRiskScore: \"Label 9\",\r\n      crsLoadDate: \"Label 10\",\r\n      l1Checker: \"Label 11\",\r\n      l2Checker: \"Label 12\"\r\n  },\r\n  labels: {\r\n      riskScore: \"Risk Score\",\r\n      noUBO: \"No of UBO\\'s\",\r\n      doBirth: \"Date of Birth\",\r\n      profession: \"Profession\",\r\n      sourceOfIncome: \"Source of Income\",\r\n  }\r\n}\r\n\r\nexport {\r\n  viewAll,\r\n  tableHeaders,\r\n  dashboardTitle,\r\n  label,\r\n  fileUpload,\r\n  caseCustomerDetails,\r\n  adminDashboardTitle\r\n}","/**\r\n * A collection of string in objects based on modules for displaying as labels.  \r\n * This file is created for the purpose - if any or all label/static data needs to be changed in future,\r\n * changes needs to be done only in this file rather than changing in complete project.\r\n * This ensures that changes can be viewed/reviewed in git in easy manner and handling is easy.              \r\n */\r\nconst viewAll = {\r\n    activeCases: {\r\n        title: \"Title 1\"\r\n    },\r\n    allCases: {\r\n        title: \"Title 2\"\r\n    }\r\n}\r\n\r\nconst dashboardTitle = 'Dashboard'\r\nconst adminDashboardTitle = 'Admin Dashboard'\r\nconst tableHeaders = {\r\n    caseRefernece : '<Field 2>',\r\n    sasCaseId : '<Field 3>',\r\n    cifId:'<Field 4>',\r\n    alteredEntityNumber:'<Field 5>',\r\n    primaryEntityName:'<Field 6>',\r\n    ageing: '<Field 7>',\r\n    alertCreationDate: '<Field 8>',\r\n    createrUserId: '<Field 9>',\r\n    assignedTo:'<Field 10>',\r\n    caseCreatedDate:'<Field 11>',\r\n    status:'<Field 12>'\r\n}\r\nconst label = {\r\n    cases: 'Cases',\r\n    risk: 'Risk Score',\r\n    performance: 'My Performance',\r\n    productivity: 'Productivity',\r\n    chartText : 'You are 60% more productive this month!',\r\n    AddOptions : 'Add Controls',\r\n    mapping :'Mapping Controls'\r\n    \r\n}\r\n\r\nconst fileUpload = {\r\n    fileSizeLimit : 'Total file size exceeded. Maximum total file size is 15 MB.',\r\n    placeholderText: 'Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>',\r\n    maxFileSizeAllowed : 'File is too large. Maximum file size allowed is 15 MB',\r\n    errorMessage: 'Error while uploading file. Please try again',\r\n    successMessage: 'File uploaded successfully'\r\n}\r\n\r\nconst caseCustomerDetails = {\r\n    caseDetails: {\r\n        title: \"Case Details\",\r\n        chip: \"Cases\",\r\n        caseId: \" Case ID: #\",\r\n        cifNo: \"CIF No\",\r\n        accountType: \"Account Type\",\r\n        customerType: \"Customer Type\",\r\n        ageOfRealtionship: \"Label 1\",\r\n        rm: \"Label 2\",\r\n        groupSegment: \"Label 3\",\r\n        nationality: \"Label 4 \",\r\n        caseStatus: \"Label 5\",\r\n        caseCreatedDate: \"Lable 6\",\r\n        deadLine: \"Label 7\",\r\n        latestData: \"Label 8\",\r\n        crsRiskScore: \"Label 9\",\r\n        crsLoadDate: \"Label 10\",\r\n        l1Checker: \"Label 11\",\r\n        l2Checker: \"Label 12\"\r\n    },\r\n    labels: {\r\n        riskScore: \"Risk Score\",\r\n        noUBO: \"No of UBO\\'s\",\r\n        doBirth: \"Date of Birth\",\r\n        profession: \"Profession\",\r\n        sourceOfIncome: \"Source of Income\",\r\n    }\r\n}\r\n\r\nexport {\r\n    viewAll,\r\n    tableHeaders,\r\n    dashboardTitle,\r\n    label,\r\n    fileUpload,\r\n    caseCustomerDetails,    \r\n    adminDashboardTitle\r\n}","import React from 'react'\r\nimport { GenericTable } from './GenericTable' \r\nimport {Cases_column} from './colunmcases'\r\nimport {label} from './label'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst openCasesData = [{ \"httpCode\": 200, \"httpMessage\": \"Valid Token\", \"caseRefNo\": \"EEC-014337704-1000026011\", \"instanceId\": \"20116\", \"alertedEntityNumber\": \"BS_014337704\", \"createdDateTime\": \"21-May-2023 03:14:51\", \"caseStatus\": null, \"cifId\": \"014337704\", \"dataId\": \"4388\", \"taskAssignedToUser\": \"NaveenCha\", \"alertId\": \"\", \"primaryEntityName\": \"TOFIK NURA KEDIR\", \"ageing\": \"49\", \"sasCaseId\": null, \"createdUserId\": \"SYSTEM\", \"previousStep\": null, \"alertCreationDate\": \"19-May-2023\", \"currentStep\": \"L1\", \"taskSubject\": \"InvestigatorL1\", \"taskId\": \"594586\", \"dataTaskIdName\": null, \"dataTaskIdValue\": null, \"dataTaskDetails\": { \"name\": \"4388\", \"value\": \"594586\" }, \"sasAlertId\": null, \"count\": \"10\", \"getHighCRS\": null, \"l1User\": null, \"l2User\": null, \"mlro\": null, \"crsLoadDate\": null, \"isCrsAvailable\": null, \"crsValue\": null }, { \"httpCode\": 200, \"httpMessage\": \"success\", \"caseRefNo\": \"EEC-014337704-1000026023\", \"instanceId\": \"20120\", \"alertedEntityNumber\": \"BS_014337704\", \"createdDateTime\": \"21-May-2023 03:16:03\", \"caseStatus\": null, \"cifId\": \"014337704\", \"dataId\": \"4388\", \"taskAssignedToUser\": \"NaveenCha\", \"alertId\": \"\", \"primaryEntityName\": \"TOFIK NURA KEDIR\", \"ageing\": \"49\", \"sasCaseId\": null, \"createdUserId\": \"SYSTEM\", \"previousStep\": null, \"alertCreationDate\": \"19-May-2023\", \"currentStep\": \"L1\", \"taskSubject\": \"InvestigatorL1\", \"taskId\": \"594596\", \"dataTaskIdName\": null, \"dataTaskIdValue\": null, \"dataTaskDetails\": { \"name\": \"4388\", \"value\": \"594596\" }, \"sasAlertId\": null, \"count\": \"10\", \"getHighCRS\": null, \"l1User\": null, \"l2User\": null, \"mlro\": null, \"crsLoadDate\": null, \"isCrsAvailable\": null, \"crsValue\": null }, { \"httpCode\": 200, \"httpMessage\": \"success\", \"caseRefNo\": \"EEC-014323975-1000025798\", \"instanceId\": \"19884\", \"alertedEntityNumber\": \"BS_014323975\", \"createdDateTime\": \"19-May-2023 10:39:35\", \"caseStatus\": null, \"cifId\": \"014323975\", \"dataId\": \"4311\", \"taskAssignedToUser\": \"NaveenCha\", \"alertId\": \"\", \"primaryEntityName\": \"RUKN ALHASIB AL THAHBI TR L L C SOL\", \"ageing\": \"51\", \"sasCaseId\": null, \"createdUserId\": \"SYSTEM\", \"previousStep\": null, \"alertCreationDate\": \"17-May-2023\", \"currentStep\": \"L1\", \"taskSubject\": \"InvestigatorL1\", \"taskId\": \"586039\", \"dataTaskIdName\": null, \"dataTaskIdValue\": null, \"dataTaskDetails\": { \"name\": \"4311\", \"value\": \"586039\" }, \"sasAlertId\": null, \"count\": \"10\", \"getHighCRS\": null, \"l1User\": null, \"l2User\": null, \"mlro\": null, \"crsLoadDate\": null, \"isCrsAvailable\": null, \"crsValue\": null }, { \"httpCode\": 200, \"httpMessage\": \"success\", \"caseRefNo\": \"EEC-014323975-1000025810\", \"instanceId\": \"19904\", \"alertedEntityNumber\": \"BS_014323975\", \"createdDateTime\": \"19-May-2023 10:39:47\", \"caseStatus\": null, \"cifId\": \"014323975\", \"dataId\": \"4311\", \"taskAssignedToUser\": \"NaveenCha\", \"alertId\": \"\", \"primaryEntityName\": \"RUKN ALHASIB AL THAHBI TR L L C SOL\", \"ageing\": \"51\", \"sasCaseId\": null, \"createdUserId\": \"SYSTEM\", \"previousStep\": null, \"alertCreationDate\": \"17-May-2023\", \"currentStep\": \"L1\", \"taskSubject\": \"InvestigatorL1\", \"taskId\": \"585990\", \"dataTaskIdName\": null, \"dataTaskIdValue\": null, \"dataTaskDetails\": { \"name\": \"4311\", \"value\": \"585990\" }, \"sasAlertId\": null, \"count\": \"10\", \"getHighCRS\": null, \"l1User\": null, \"l2User\": null, \"mlro\": null, \"crsLoadDate\": null, \"isCrsAvailable\": null, \"crsValue\": null }, { \"httpCode\": 200, \"httpMessage\": \"success\", \"caseRefNo\": \"EEC-014317465-1000026268\", \"instanceId\": \"20350\", \"alertedEntityNumber\": \"BS_010597457\", \"createdDateTime\": \"24-May-2023 14:50:18\", \"caseStatus\": null, \"cifId\": \"014317465\", \"dataId\": \"4861\", \"taskAssignedToUser\": \"NaveenCha\", \"alertId\": \"\", \"primaryEntityName\": \"RAHIMO HAIDERALI SACOOR\", \"ageing\": \"117\", \"sasCaseId\": null, \"createdUserId\": \"SYSTEM\", \"previousStep\": null, \"alertCreationDate\": \"12-Mar-2023\", \"currentStep\": \"L1\", \"taskSubject\": \"InvestigatorL1\", \"taskId\": \"614509\", \"dataTaskIdName\": null, \"dataTaskIdValue\": null, \"dataTaskDetails\": { \"name\": \"4861\", \"value\": \"614509\" }, \"sasAlertId\": null, \"count\": \"10\", \"getHighCRS\": null, \"l1User\": null, \"l2User\": null, \"mlro\": null, \"crsLoadDate\": null, \"isCrsAvailable\": null, \"crsValue\": null }, { \"httpCode\": 200, \"httpMessage\": \"success\", \"caseRefNo\": \"EEC-014317465-1000026264\", \"instanceId\": \"20381\", \"alertedEntityNumber\": \"BS_010597457\", \"createdDateTime\": \"24-May-2023 08:18:12\", \"caseStatus\": null, \"cifId\": \"014317465\", \"dataId\": \"4861\", \"taskAssignedToUser\": null, \"alertId\": \"\", \"primaryEntityName\": \"RAHIMO HAIDERALI SACOOR\", \"ageing\": \"117\", \"sasCaseId\": null, \"createdUserId\": \"SYSTEM\", \"previousStep\": null, \"alertCreationDate\": \"12-Mar-2023\", \"currentStep\": \"L1\", \"taskSubject\": \"InvestigatorL1\", \"taskId\": \"613654\", \"dataTaskIdName\": null, \"dataTaskIdValue\": null, \"dataTaskDetails\": { \"name\": \"4861\", \"value\": \"613654\" }, \"sasAlertId\": null, \"count\": \"10\", \"getHighCRS\": null, \"l1User\": null, \"l2User\": null, \"mlro\": null, \"crsLoadDate\": null, \"isCrsAvailable\": null, \"crsValue\": null }, { \"httpCode\": 200, \"httpMessage\": \"success\", \"caseRefNo\": \"EEC-014317465-1000026269\", \"instanceId\": \"20396\", \"alertedEntityNumber\": \"BS_010597457\", \"createdDateTime\": \"24-May-2023 22:44:20\", \"caseStatus\": null, \"cifId\": \"014317465\", \"dataId\": \"4861\", \"taskAssignedToUser\": \"NaveenCha\", \"alertId\": \"\", \"primaryEntityName\": \"RAHIMO HAIDERALI SACOOR\", \"ageing\": \"117\", \"sasCaseId\": null, \"createdUserId\": \"SYSTEM\", \"previousStep\": null, \"alertCreationDate\": \"12-Mar-2023\", \"currentStep\": \"MLRO\", \"taskSubject\": \"Step: Review the case MLRO\", \"taskId\": \"624882\", \"dataTaskIdName\": null, \"dataTaskIdValue\": null, \"dataTaskDetails\": { \"name\": \"4861\", \"value\": \"624882\" }, \"sasAlertId\": null, \"count\": \"10\", \"getHighCRS\": null, \"l1User\": null, \"l2User\": null, \"mlro\": null, \"crsLoadDate\": null, \"isCrsAvailable\": null, \"crsValue\": null }, { \"httpCode\": 200, \"httpMessage\": \"success\", \"caseRefNo\": \"EEC-014309126-1000025664\", \"instanceId\": \"19695\", \"alertedEntityNumber\": \"BS_014309126\", \"createdDateTime\": \"17-May-2023 09:30:16\", \"caseStatus\": null, \"cifId\": \"014309126\", \"dataId\": \"3197\", \"taskAssignedToUser\": \"NaveenCha\", \"alertId\": \"\", \"primaryEntityName\": \"PHILEMON HOWARD\", \"ageing\": \"53\", \"sasCaseId\": null, \"createdUserId\": \"SYSTEM\", \"previousStep\": null, \"alertCreationDate\": \"15-May-2023\", \"currentStep\": null, \"taskSubject\": \"InvestigatorL1\", \"taskId\": \"576730\", \"dataTaskIdName\": null, \"dataTaskIdValue\": null, \"dataTaskDetails\": { \"name\": \"3197\", \"value\": \"576730\" }, \"sasAlertId\": null, \"count\": \"10\", \"getHighCRS\": null, \"l1User\": null, \"l2User\": null, \"mlro\": null, \"crsLoadDate\": null, \"isCrsAvailable\": null, \"crsValue\": null }, { \"httpCode\": 200, \"httpMessage\": \"success\", \"caseRefNo\": \"EEC-014309126-1000025684\", \"instanceId\": \"19730\", \"alertedEntityNumber\": \"BS_014309126\", \"createdDateTime\": \"17-May-2023 09:30:32\", \"caseStatus\": null, \"cifId\": \"014309126\", \"dataId\": \"3197\", \"taskAssignedToUser\": \"NaveenCha\", \"alertId\": \"\", \"primaryEntityName\": \"PHILEMON HOWARD\", \"ageing\": \"53\", \"sasCaseId\": null, \"createdUserId\": \"SYSTEM\", \"previousStep\": null, \"alertCreationDate\": \"15-May-2023\", \"currentStep\": null, \"taskSubject\": \"InvestigatorL1\", \"taskId\": \"576756\", \"dataTaskIdName\": null, \"dataTaskIdValue\": null, \"dataTaskDetails\": { \"name\": \"3197\", \"value\": \"576756\" }, \"sasAlertId\": null, \"count\": \"10\", \"getHighCRS\": null, \"l1User\": null, \"l2User\": null, \"mlro\": null, \"crsLoadDate\": null, \"isCrsAvailable\": null, \"crsValue\": null }, { \"httpCode\": 200, \"httpMessage\": \"success\", \"caseRefNo\": \"EEC-014299408-1000026265\", \"instanceId\": \"20382\", \"alertedEntityNumber\": \"BS_010597457\", \"createdDateTime\": \"24-May-2023 08:28:15\", \"caseStatus\": null, \"cifId\": \"014299408\", \"dataId\": \"4862\", \"taskAssignedToUser\": \"NaveenCha\", \"alertId\": \"\", \"primaryEntityName\": \"RAHIMO HAIDERALI SACOOR\", \"ageing\": \"117\", \"sasCaseId\": null, \"createdUserId\": \"SYSTEM\", \"previousStep\": null, \"alertCreationDate\": \"12-Mar-2023\", \"currentStep\": \"L2\", \"taskSubject\": \"Step: Investigator L2\", \"taskId\": \"1801884\", \"dataTaskIdName\": null, \"dataTaskIdValue\": null, \"dataTaskDetails\": { \"name\": \"4862\", \"value\": \"1801884\" }, \"sasAlertId\": null, \"count\": \"10\", \"getHighCRS\": null, \"l1User\": null, \"l2User\": null, \"mlro\": null, \"crsLoadDate\": null, \"isCrsAvailable\": null, \"crsValue\": null }]\r\n\r\nconsole.log(openCasesData,\"opendata\");\r\nconsole.log(GenericTable,\"generic\");\r\n\r\nfunction TableData() {\r\n\r\n    // const renderDashbordTable = () => {\r\n        return (\r\n          <Grid title={label.cases} viewAll={`/cases/viewall`} >\r\n            <GenericTable col={Cases_column} apiData={openCasesData} isPagination={false} isExportExcel={false} isGlobalSearch={false} />\r\n          </Grid>\r\n        )\r\n    //   }\r\n//        console.log(label,\"label\");\r\n//        console.log(Cases_column,\"cases\");\r\n//       console.log(renderDashbordTable,\"total\");\r\n//   return (\r\n//     <div>\r\n//         {renderDashbordTable} \r\n      \r\n//     </div>\r\n//   )\r\n}\r\n\r\nexport default TableData;\r\n","import \"./App.css\";\nimport \"./component/mydiv.css\";\n\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\n\nimport AppTabs from \"./component/AppTabs\";\n//import BulkPaymentDetails from './component/BulkPaymentDetails';\nimport DocumentPath from \"./component/DocumentPath\";\nimport Footer from \"./component/Footer\";\nimport Header from \"./component/Header\";\nimport Login from \"./component/Login\";\nimport AttachmentFields from \"./component/AttachmentFields\";\nimport AttachmentFieldsCompletedRequest from \"./component/AttachmentFields_CompletedRequest\";\nimport ExceptionUpdate from \"./component/ExceptionUpdate\";\nimport PaymentRequestFields from \"./component/PaymentRequestFields\";\nimport { DocumentTable } from \"./component/DocumentTable\";\nimport AttachmentTemp from \"./component/AttachmentTemp\";\nimport Temp from \"./component/Temp\";\nimport ReactSession from \"react-client-session/dist/ReactSession\";\nimport BulkEdit from \"./component/BulkEdit\";\nimport Test from \"./component/Test\";\nimport LoginFailed from \"./component/LoginFailed\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { properties } from \"./component/properties\";\nimport ReserveAttachmentFields from \"./component/ReserveAttachmentFields\";\nimport Dashboard from \"./component/Dashboard/Dashboard\";\nimport LinechartD from \"./component/Dashboard/linechart\";\nimport Dash from \"./component/Dashboard/dash\";\nimport { CasePriority } from \"./component/Dashboard/apexchartsdonut\";\nimport { RiskLevel } from \"./component/Dashboard/donutchartfrom\";\nimport { CaseTypes123 } from \"./component/Dashboard/dounautchart2\";\nimport { GenericTable } from \"./component/Dashboard/GenericTable\";\nimport TableData from \"./component/Dashboard/table\";\n\n\n\nfunction App() {\n  const [isUser, setIsUser] = useState(true);\n  console.log(`OA React Application started`);\n  console.log(process.env.REACT_APP_BASE_URL);\n  ReactSession.setStoreType(\"localStorage\");\n\n  \n  // let auth = async () => {\n  //   setIsUser(true);\n  //   console.log(\n  //     `${properties.userAuth}?token=${ReactSession.get(\n  //       \"token\"\n  //     )}&username=${ReactSession.get(\"username\")}`\n  //   );\n  //   let response = await axios.get(\n  //     `${properties.userAuth}?token=${ReactSession.get(\n  //       \"token\"\n  //     )}&username=${ReactSession.get(\"username\")}`\n  //   );\n  //   console.log(response);\n  //   if (response) {\n  //     if (response.data) {\n  //       console.log(\"user already logged in\");\n  //       setIsUser(true);\n  //     }\n  //   }\n  // };\n  // // //caling userAuth\n  // // if (!isUser) auth();\n  // // console.log(\"PAth: \" + window.location.pathname);\n  // // if (!\"/ownersassociation/\".localeCompare(window.location.pathname)) {\n  // //   console.log(\"token cleared\");\n  // //   ReactSession.set(\"token\", \"\");\n  // // }\n  // console.log(isUser);\n  // if (!isUser)\n  //   if (ReactSession.get(\"token\")) {\n  //     console.log(\"user already logged in\");\n  //     setIsUser(true);\n  //   } else {\n  //     console.log(\"please login first\");\n  //   }\n\n  return (\n    <div className='App'>\n      <Header />\n      <hr />\n      <Switch>\n        <Route path='/' exact component={Login} />\n        <Route path='/dashboard' exact component={Dashboard} />\n        <Route path='/Dash' exact component={Dash} />\n        <Route path='/casetypes' exact component={CasePriority} />\n        <Route path='/risctypes' exact component={RiskLevel} />\n        <Route path='/citytypes2' exact component={CaseTypes123} />\n        <Route path='/tableData' exact component={TableData} />\n        {isUser && (\n          <>\n            <Route path='/bulkEdit' exact component={BulkEdit} />\n            <Route path='/' exact component={Login} />\n            <Route path='/loginFailed' exact component={LoginFailed} />\n            <Route path='/tabs/' exact component={AppTabs} />\n            {/* <Route path='/bulkPaymentdetails/:id' exact component={BulkPaymentDetails}/> */}\n            <Route path='/documentpath/:id' exact component={DocumentPath} />\n            <Route\n              path='/attachmentField/:id'\n              exact\n              component={AttachmentFields}\n            />\n            <Route path='/attachmentTemp/' exact component={AttachmentTemp} />\n            <Route path='/temp/:id' exact component={Temp} />\n       \n            \n            <Route\n              path='/ReservedAttachmentFields/:id'\n              exact\n              component={ReserveAttachmentFields}\n            />\n            \n\n            <Route\n              path='/ExceptionUpdate/:id'\n              exact\n              component={ExceptionUpdate}\n            />\n            <Route path='/test' exact component={Test} />\n          </>\n        )}\n        <Redirect to='/' />\n      </Switch>\n      <Footer />\n     \n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = { username: \"\" };\r\nconst ADD_USER = \"ADD_USER\";\r\nexport function setUser(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_USER:\r\n      return { username: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { setUser } from \"./addUserReducer\";\r\n\r\nconst reducer = combineReducers({ userStore: setUser });\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"../reducer/index\";\r\nconst userStore = createStore(reducer, {});\r\n\r\nexport default userStore;\r\n","import \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport userStore from \"./store/userStore\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.REACT_APP_BASE_URL}>\n    <Provider store={userStore}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}