{"version":3,"sources":["component/properties.js","app-data/BulkPaymentColmns.js","component/GlobalFiltering.js","component/BulkPayments.js","component/ExcpCol.js","component/IndividualPayment.js","component/IndividualPaymentFields.js","component/BulkPaymentField.js","component/PaymentTabs.js","app-data/SerachResultColumn.js","component/ExportsButtons.js","component/SearchResults.js","component/TransactionSearchCriteria.js","app-data/PaymentColumn.js","component/GlobalFilteringPaymentReq.js","component/PaymentRequestTable.js","component/PaymentRequestFields.js","component/CompletedRequestColumn.js","component/GlobalFilteringCompReq.js","component/CompletedRequestTable.js","component/CompletedRequest.js","component/ReportsColumn.js","component/ReportsTable.js","component/ReportsForm.js","component/TransactionalReportColumn.js","component/TransactionalReportTable.js","component/TransactionalReport.js","component/ReportsTab.js","component/BudgetDetailsTable.js","component/Popup.js","component/ReserveFundButtonAdvance.js","component/ReserveFundDetailsTableFooters.js","component/ReserveFundDetails.js","component/ReserveFundDetailsCopy.js","component/AppTabs.js","component/DocumentPath.js","component/Footer.js","component/logo.png","component/Header.js","component/Login.js","component/DocumentColumns.js","component/DocumentTable.js","component/DocumentUpload.js","component/AttachmentFields.js","component/ExceptionUpdate.js","component/AttachmentFields_CompletedRequest.js","component/AttachmentTemp.js","component/Temp.js","component/BulkEdit.js","component/Test.js","component/LoginFailed.js","component/ReserveAttachmentFields.js","App.js","reportWebVitals.js","reducer/addUserReducer.js","reducer/index.js","store/userStore.js","index.js"],"names":["CONTEXTROOT","process","PROTOCOL","window","location","protocol","DOMAIN","host","console","log","OA_SERVICE_URL","properties","loginURL","userAuth","searchResult","attachmentUpdate","managementCompanyList","saveAttachmentData","getMatrixRefNo","displayAttachmentDetails","getCompletedRequests","getPaymentData","searchPaymentData","excelUpload","supplierList","generateReports","reportsExcel","reportsPDF","loadingExpDates","transactionalPdf","transactionalExcel","generateTransactionalReports","exceptionUpdate","bulkPaymentColumns","paymentColumns","getBuilding","getBuildingsByMgmtComp","getBulkPayment","attachmentFieldReq","documentPath","getPath","getListDocuments","fileUpload","loadAttachmentDetails","individualPaymentsList","buildingNames","budgetDetails","updateBudget","completedRequestList","completedPdf","completedExcel","individualDataList","bulkDataList","downloadPDF","dataURl","fetchReserveFundData","saveReserveFundData","reserveFundUpdateDetail","BULKPAYMENT_COLUMNS","id","Header","accessor","Cell","e","to","value","target","rel","Tooltip","title","IconButton","GlobalFiltering","filter","setFilter","class","style","marginTop","marginLeft","Col","Input","placeholder","onChange","BulkPayments","prop","columns","useMemo","useState","data","setData","useEffect","dataArray","info","JSON","stringify","useTable","useGlobalFilter","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","state","setGlobalFilter","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","pageIndex","pageSize","globalFilter","width","Table","size","striped","backgroundColor","color","bordercolor","fontSize","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","textAlign","length","type","defaultValue","pageNumber","Number","padding","Button","onClick","disabled","EXCPQ_COLUMNS","IndividualPayment","responsive","fontWeight","IndividualPaymentFields","indivData","setIndivData","data1","setData1","setData3","building","setBuilding","individualData","mgmtCompId","buildingId","getBuildingNames","a","preventDefault","name","axios","get","fetchManagementComany","company","fetchBuilding","className","overflowX","Form","onSubmit","event","alert","head","token","ReactSession","username","post","then","response","error","loadIndividualData","FormGroup","Label","sm","selected","opt","mcNameEn","newdata","handle","buildingName","borderColor","BulkPaymentField","bulkData","setBulkData","bulkDataImput","loadBulkData","PaymentTabs","React","tbVal","setVal","AppBar","position","maxHeight","Tabs","TabIndicatorProps","background","marginBottom","height","val","Tab","label","minWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","SEARCH_RESULT_COLUMNS","ExportsButtons","SearchResults","props","Data","Search","handleMatrixRefNo","setState","MatrixRefNo","handleBeneficiaryName","BeneficiaryName","handleCustomerRef","CustomerRef","handlecurrency","currency","handleProduct","Product","handlesubProduct","subProduct","handleInitiationDateFrom","InitiationDateFrom","handleInitiationDateTo","InitiationDateTo","handleAmountFrom","AmountFrom","handleAmountTo","AmountTo","handleSortby","Sortby","handleSortOrder","SortOrder","handleMatrixFileRefNo","MatrixFileRefNo","handleDebitAccountNumber","DebitAccountNumber","handleManagementCompanyName","handleBuildingName","valueChange","handleStatus","Status","buildingDropDownData","fetchSupplier","supplier","SupplierList","handleSubmit","Event","postbody","matrixRefNo","debitAccountNumberDesc","beneficiaryName","customerReference","status","paymentCurrency","amountFrom","amountTo","initiatorDateFrom","initiatorDateTo","sortOrder","sortBy","SearchResult","paymentData","count","resetForm","BuildingName","dropdowndata","this","maxwidth","Card","CardTitle","tag","CardBody","for","hidden","supplierId","supplierName","offset","borderRadius","margin","Component","PaymentColumns","GlobalFilteringPaymentReq","PaymentRequestTable","PaymentRequestFields","clearFile","setClearFile","history","useHistory","files","setFile","dropDownData","setDropDownData","tableData","setTableData","setCompany","fetchCompany","handleInput","fileValidation","fileInput","document","getElementById","filePath","exec","innerHTML","getListDocumnetsFromServer","inline","onChange1","CustomInput","accept","fileRef","url","formData","FormData","append","config","push","reload","opt2","CompletedRequestColumn","GlobalFilteringCompReq","CompletedRequestTable","CompletedRequest","compData","setCompData","data2","setData2","years","setYears","completedData","budgetYear","getYears","date","Date","year","i","getFullYear","reverse","loadCompletedData","downloadLink","createElement","linkSource","href","download","click","downloadPDFData","table","ExcelData","ReportsColumn","ReportsTable","ReportsForm","reportData","setReportData","report","invoiceYear","loadReportData","maxLength","TransactionalReportColumn","TransactionalReportTable","TransactionalReport","transactionFrom","transactionTo","marginRight","ReportsTab","useStyles","makeStyles","theme","root","selectTableCell","tableCell","input","saveButton","cancleButton","editButton","CustomTableCell","calculateTotalAmount","classes","isEditMode","TableCell","align","onBlur","BudgetDetailsTable","setRows","previous","setPrevious","getDetails","onToggleEditMode","budgetItemId","mode","put","res","catch","err","newRows","balanceAmount","totalBudget","consumedAmount","Paper","TableHead","TableRow","TableBody","Popup","handleClose","content","ReserveFundButtonAdvance","responseData","setResponseData","save","accountNumber","branchCode","cifNumber","reserveAccountNumber","test","setIsOpen","requestData","cif_Number","mgmnt_Comp_Id","building_Id","account_Number","reserve_Account_Number","is_Active","branch_Code","getFundDetails","requestOptions","isOpen","togglePopup","float","required","reserveFundId","ReserveFundDetailsTableFooters","enabled","ReserveFundDetails","ReserveFundDetailsCopy","search","AppTabs","variant","Child","useParams","DocumentPath","open","path","children","Footer","bottom","isLogged","setLogged","user","useSelector","userStore","PATH","pathname","minHeight","display","top","src","logo","alt","remove","Login","userName","setUsername","password","setPassword","useDispatch","set","localeCompare","message","left","overflow","autoComplete","replace","Container","DocumentColumns","downloadDocument","fileName","DocumentTable","pymtReqId","DocumentUpload","pymtId","AttachmentFields","autoRenewal","setAutoRenewal","setOpen","setAttachmentFlag","governmentCheckBox","setGovernmentCheckBox","isExcpApproval","setIsExcpApproval","insuranceCheckBox","setInsuranceCheckBox","noProperDocumentCheckBox","setNoProperDocumentCheckBox","disableSaveButton","setDisableSaveButton","data3","matrixFileRefNo","subPaymentsCount","ids","strMatrixRefNo","invoiceAmount","tradeLicenseExpDate","agreementExpDate","serviceCode","bifurcation","isGovernmentEntity","isInsuranceCompany","curdate","datecolor","saveData","postData","today","dd","getDate","mm","getMonth","fetchData","autoRenewalData","noDocumentData","isExceptionalApproval","issuanceAuthority","invoiceDateYear","attachmentFlag","noProperDocuments","remarks","undefined","hiddenTrade","dat","handleTrade","handleAgree","md","check","checked","close","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","hiddenAgree","ExceptionUpdate","putData","updateData","AttachmentTemp","Temp","BulkEdit","onRevert","Test","LoginFailed","method","action","ReserveAttachmentFields","IsActiveCheckBox","isActive","App","isUser","setStoreType","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ADD_USER","reducer","combineReducers","payload","createStore","ReactDOM","basename","store"],"mappings":"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","file":"static/js/main.0fc724dd.chunk.js","sourcesContent":["import { data } from \"jquery\";\r\n\r\n// const DOMAIN = process.env.REACT_APP_DOMAIN;\r\nconst CONTEXTROOT = process.env.REACT_APP_CONTEXTROOT;\r\nconst PROTOCOL = window.location.protocol;\r\nconst DOMAIN = window.location.host;\r\nconsole.log(`Dynamic server url:  ${PROTOCOL}//${DOMAIN}/${CONTEXTROOT}`);\r\n// const OA_SERVICE_URL = `http://localhost:3001`;\r\nconst OA_SERVICE_URL = `${PROTOCOL}//${DOMAIN}/${CONTEXTROOT}`;\r\n const OA_RESERVEFUND_URL = `http://localhost:5050`;\r\n// const OA_RESERVEFUND_URL = `${PROTOCOL}//${DOMAIN}/${CONTEXTROOT}`;\r\nconsole.log(OA_SERVICE_URL);\r\nexport const properties = {\r\n  loginURL: `${OA_SERVICE_URL}/login`,\r\n  userAuth: `${OA_SERVICE_URL}/auth`,\r\n  searchResult: `${OA_SERVICE_URL}/search/getPaymentData`,\r\n  attachmentUpdate: `${OA_SERVICE_URL}/completedrequest/updateData`,\r\n  managementCompanyList: `${OA_SERVICE_URL}/attachment/managementCompany/`,\r\n  saveAttachmentData: `${OA_SERVICE_URL}/attachment/saveAttachmentData`,\r\n  getMatrixRefNo: `${OA_SERVICE_URL}/attachment/getMatrixNo/`,\r\n  displayAttachmentDetails: `${OA_SERVICE_URL}/completedrequest/pymtReqId/`,\r\n  getCompletedRequests: `${OA_SERVICE_URL}/completedrequest/getCompletedRequests`,\r\n  getPaymentData: `${OA_SERVICE_URL}/payment/getPaymentData`,\r\n  searchPaymentData: `${OA_SERVICE_URL}/payment/searchPaymentData`,\r\n  excelUpload: `${OA_SERVICE_URL}/payment/excelUpload`,\r\n  supplierList: `${OA_SERVICE_URL}/reports/supplierList`,\r\n  generateReports: `${OA_SERVICE_URL}/reports/getReportList`,\r\n  reportsExcel: `${OA_SERVICE_URL}/reports/excelGenerate`,\r\n  reportsPDF: `${OA_SERVICE_URL}/reports/pdfGenerate`,\r\n  loadingExpDates: `${OA_SERVICE_URL}/attachment/getExpiryDates/`,\r\n  transactionalPdf: `${OA_SERVICE_URL}/transactional/pdfGenerate`,\r\n  transactionalExcel: `${OA_SERVICE_URL}/transactional/excelGenerate`,\r\n  generateTransactionalReports: `${OA_SERVICE_URL}/transactional/getReportsList`,\r\n  exceptionUpdate: `${OA_SERVICE_URL}/exception/queue/updateData`,\r\n  bulkPaymentColumns: `${OA_SERVICE_URL}/exceptionUpdate`,\r\n  paymentColumns: `${OA_SERVICE_URL}/attachmentField`,\r\n  getBuilding: `${OA_SERVICE_URL}/properties/groupNames`,\r\n  getBuildingsByMgmtComp: `${OA_SERVICE_URL}/payment/getBuildings`,\r\n  getBulkPayment: `${OA_SERVICE_URL}/exception/queue/bulkpayments/list`,\r\n  attachmentFieldReq: `${OA_SERVICE_URL}/attachmentFieldcomplreq`,\r\n  documentPath: `${OA_SERVICE_URL}/documentpath`,\r\n  getPath: `${OA_SERVICE_URL}/documents`,\r\n  getListDocuments: `${OA_SERVICE_URL}/documents/pymtReqId`,\r\n  fileUpload: `${OA_SERVICE_URL}/saveDocument/`,\r\n  loadAttachmentDetails: `${OA_SERVICE_URL}/exception/queue/pymtReqId`,\r\n  individualPaymentsList: `${OA_SERVICE_URL}/exception/queue/individualpayments/list`,\r\n  buildingNames: `${OA_SERVICE_URL}/buildings/buildingNames`,\r\n  budgetDetails: `${OA_SERVICE_URL}/budget/budgetDetails`,\r\n  updateBudget: `${OA_SERVICE_URL}/budget/updateBudget`,\r\n  completedRequestList: `${OA_SERVICE_URL}/completedrequest/completedRequests`,\r\n  completedPdf: `${OA_SERVICE_URL}/completedrequest/pdfGenerate`,\r\n  completedExcel: `${OA_SERVICE_URL}/completedrequest/excelGenerate`,\r\n  individualDataList: `${OA_SERVICE_URL}/exception/queue/individualpayments`,\r\n  bulkDataList: `${OA_SERVICE_URL}/exception/queue/bulkpayments`,\r\n  downloadPDF: `${OA_SERVICE_URL}/reports/downloadPDF`,\r\n  dataURl:`${OA_SERVICE_URL}`,\r\n  fetchReserveFundData:`${OA_SERVICE_URL}/data`,\r\n  saveReserveFundData:`${OA_SERVICE_URL}/dataSave`,\r\n  reserveFundUpdateDetail:`${OA_SERVICE_URL}/dataUpdate`,\r\n};\r\n","import { properties } from \"../component/properties\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nconst BULKPAYMENT_COLUMNS = [\r\n  ,\r\n  {\r\n    id: \"matrixreflink\",\r\n    Header: \" \",\r\n    accessor: \"pymtReqId\",\r\n    Cell: (e) => (\r\n      <Link to={`/ExceptionUpdate/` + e.value} target='_blank' rel='noopener'>\r\n        <Tooltip title='Edit'>\r\n          <IconButton>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Link>\r\n    ),\r\n  },\r\n  {\r\n    Header: \"Matrix Ref No.\",\r\n    accessor: \"strMatrixRefNo\",\r\n  },\r\n  {\r\n    Header: \"Sub Product\",\r\n    accessor: \"subProduct\",\r\n  },\r\n\r\n  {\r\n    Header: \"Debit Account Number Description\",\r\n    accessor: \"debitAccountNumberDesc\",\r\n  },\r\n  {\r\n    Header: \"Beneficiary Name\",\r\n    accessor: \"beneficiaryName\",\r\n  },\r\n  {\r\n    Header: \"Initiator Date\",\r\n    accessor: \"displayInitiatorDate\",\r\n  },\r\n  {\r\n    Header: \"Payment Currency\",\r\n    accessor: \"paymentCurrency\",\r\n  },\r\n  {\r\n    Header: \"Amount\",\r\n    accessor: \"invoiceAmount\",\r\n  },\r\n  {\r\n    Header: \"Customer Reference\",\r\n    accessor: \"customerReference\",\r\n  },\r\n  {\r\n    Header: \"Initiator Name/Date Time\",\r\n    accessor: \"initiatorNameDateTime\",\r\n  },\r\n  {\r\n    Header: \"Remarks\",\r\n    accessor: \"remarks\",\r\n  },\r\n];\r\nexport default BULKPAYMENT_COLUMNS;\r\n","import { Form, FormGroup, Label, Input, Col, CustomInput } from \"reactstrap\";\r\nconst GlobalFiltering = ({ filter, setFilter }) => {\r\n  return (\r\n    <>\r\n    <div class='inline' style={{ marginTop: \"2rem\", marginLeft: \"-4rem\" }}>\r\n    Search\r\n  </div>\r\n  <Col style={{ marginTop: \"-1.7rem\", marginLeft: \"-1.5rem\" }}>\r\n    <Input\r\n      placeholder=''\r\n      value={filter || \"\"}\r\n      onChange={(e) => setFilter(e.target.value)}\r\n    />\r\n  </Col>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default GlobalFiltering;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  useFilters,\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nimport { Button, Table } from \"reactstrap\";\r\n\r\nimport BULKPAYMENT_COLUMNS from \"../app-data/BulkPaymentColmns\";\r\nimport GlobalFiltering from \"./GlobalFiltering\";\r\nimport { properties } from \"./properties\";\r\n\r\nconst BulkPayments = (prop) => {\r\n  const columns = useMemo(() => BULKPAYMENT_COLUMNS, []);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  // const getBulkPaymentFromServer = () => {\r\n  //   axios.get(properties.getBulkPayment).then(\r\n  //     (response) => {\r\n  //       console.log(\"loading....\");\r\n  //       console.log(response.data);\r\n  //       setData(response.data);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setData(prop.dataArray);\r\n    console.info(\"state data[][][] : \" + JSON.stringify(data));\r\n  });\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n  } = useTable(\r\n    { columns, data },\r\n    useGlobalFilter,\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n  const { pageIndex, pageSize } = state;\r\n  const { globalFilter } = state;\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginLeft: \"83%\", width: \"15%\", marginTop: \"-4rem\" }}>\r\n        <GlobalFiltering filter={globalFilter} setFilter={setGlobalFilter} />\r\n      </div>\r\n      <Table\r\n        size='sm'\r\n        striped={false}\r\n        striped={true}\r\n        style={{ marginTop: 20 }}\r\n        {...getTableProps()}>\r\n        <thead\r\n          style={{\r\n            backgroundColor: \"#254a9e\",\r\n            color: \"white\",\r\n            bordercolor: \"#254a9e\",\r\n            fontSize: 14,\r\n          }}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {\" \"}\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" ⬇️\"\r\n                        : \" ⬆️\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody style={{ fontSize: 14 }} {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td style={{ fontSize: 14 }} {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <span>\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          | Go To Page:{\" \"}\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\", padding: \"2\" }}\r\n          />{\" \"}\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}>\r\n          {[10, 20, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => nextPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BulkPayments;\r\n","import { Link } from \"react-router-dom\";\r\nimport ColumnFiltering from \"./ColumnFiltering\";\r\nimport { properties } from \"./properties\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nconst EXCPQ_COLUMNS = [\r\n  {\r\n    id: \"matrixreflink\",\r\n    Header: \" \",\r\n    accessor: \"pymtReqId\",\r\n    Cell: (e) => (\r\n      <Link to={`/ExceptionUpdate/` + e.value} target='_blank' rel='noopener'>\r\n        <Tooltip title='Edit'>\r\n          <IconButton>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Link>\r\n    ),\r\n  },\r\n  {\r\n    Header: \"Matrix Ref No.\",\r\n    accessor: \"strMatrixRefNo\",\r\n  },\r\n\r\n  {\r\n    Header: \"Sub Product\",\r\n    accessor: \"subProduct\",\r\n  },\r\n\r\n  {\r\n    Header: \"Debit Account Number Description\",\r\n    accessor: \"debitAccountNumberDesc\",\r\n  },\r\n  {\r\n    Header: \"Beneficiary Name\",\r\n    accessor: \"beneficiaryName\",\r\n  },\r\n  {\r\n    Header: \"Initiator Date\",\r\n    accessor: \"displayInitiatorDate\",\r\n  },\r\n  {\r\n    Header: \"Payment Currency\",\r\n    accessor: \"paymentCurrency\",\r\n  },\r\n  {\r\n    Header: \"Amount\",\r\n    accessor: \"invoiceAmount\",\r\n  },\r\n  {\r\n    Header: \"Customer Reference\",\r\n    accessor: \"customerReference\",\r\n  },\r\n  {\r\n    Header: \"Initiator Name/Date Time\",\r\n    accessor: \"initiatorNameDateTime\",\r\n  },\r\n  {\r\n    Header: \"Remarks\",\r\n    accessor: \"remarks\",\r\n  },\r\n];\r\nexport default EXCPQ_COLUMNS;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  useFilters,\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nimport { Button, Table } from \"reactstrap\";\r\nimport EXCPQ_COLUMNS from \"./ExcpCol\";\r\nimport GlobalFiltering from \"./GlobalFiltering\";\r\nimport { properties } from \"./properties\";\r\n\r\nconst IndividualPayment = (prop) => {\r\n  const columns = useMemo(() => EXCPQ_COLUMNS, []);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  // const getBulkPaymentFromServer = () => {\r\n  //   axios.get(properties.individualPaymentsList).then(\r\n  //     (response) => {\r\n  //       console.log(\"loading....\");\r\n  //       console.log(response.data);\r\n  //       setData(response.data);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setData(prop.dataArray);\r\n    console.info(\"state data[][][] : \" + JSON.stringify(data));\r\n  });\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n  } = useTable(\r\n    { columns, data },\r\n    useGlobalFilter,\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n  const { pageIndex, pageSize } = state;\r\n  const { globalFilter } = state;\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginLeft: \"83%\", width: \"15%\", marginTop: \"-4rem\" }}>\r\n        <GlobalFiltering filter={globalFilter} setFilter={setGlobalFilter} />\r\n      </div>\r\n      <Table\r\n        responsive='true'\r\n        size='sm'\r\n        striped={false}\r\n        striped={true}\r\n        style={{ marginTop: 20 }}\r\n        {...getTableProps()}>\r\n        <thead\r\n          style={{\r\n            backgroundColor: \"#254a9e\",\r\n            color: \"white\",\r\n            bordercolor: \"#254a9e\",\r\n            fontSize: 14,\r\n            fontWeight: \"bold\",\r\n          }}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {\" \"}\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" ⬇️\"\r\n                        : \" ⬆️\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody style={{ fontSize: 14 }} {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td style={{ fontSize: 14 }} {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <span>\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          | Go To Page:{\" \"}\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\", padding: \"0\" }}\r\n          />{\" \"}\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}>\r\n          {[10, 20, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => nextPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>{\" \"}\r\n        <Button\r\n          style={{ backgroundColor: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualPayment;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport IndividualPayment from \"./IndividualPayment\";\r\nimport { properties } from \"./properties\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\nfunction IndividualPaymentFields() {\r\n  const [indivData, setIndivData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [data1, setData1] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data3, setData3] = useState([]);\r\n  const [building, setBuilding] = useState([]);\r\n\r\n  const individualData = {\r\n    mgmtCompId: data.mgmtCompId,\r\n    buildingId: data.buildingId,\r\n  };\r\n\r\n  const loadIndividualData = (individualData) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.individualDataList, individualData, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          if (data.length) {\r\n            setIndivData(data);\r\n            console.info(\"Individual Response << : \" + JSON.stringify(data));\r\n          } else {\r\n            alert(\"No Record Found\");\r\n            setIndivData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log(data);\r\n    if (!data.mgmtCompId || !data.buildingId) {\r\n      event.preventDefault();\r\n      alert(\"Please select Mandatory fields\");\r\n      return false;\r\n    }\r\n\r\n    console.log(\"MgmtId:::\" + data.mgmtCompId);\r\n    console.log(\"buildingId:::\" + data.buildingId);\r\n\r\n    loadIndividualData(individualData);\r\n    event.preventDefault();\r\n  };\r\n\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n\r\n  const fetchManagementComany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    console.log(\"company\" + company.data);\r\n    setData1(company.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchManagementComany();\r\n  }, []);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    console.log(\"building\", building.data);\r\n    setData3(building.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n  }, []);\r\n\r\n  function handle(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='App' style={{ overflowX: \"hidden\" }}>\r\n        <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n          <FormGroup row>\r\n            <Label sm={2} className='required'>\r\n              Management Company\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='mgmtCompId'\r\n                name='mgmtCompId'\r\n                value={data.mgmtCompId}\r\n                onChange={(e) => getBuildingNames(e)}>\r\n                <option selected disabled>\r\n                  Please select a company\r\n                </option>\r\n                {data1.map((opt) => (\r\n                  <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2} className='required'>\r\n              Building Name\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                style={{ marginLeft: -65 }}\r\n                size='sm'\r\n                type='select'\r\n                id='buildingId'\r\n                // value={data.buildingId}\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a building\r\n                </option>\r\n                {building.map((opt) => (\r\n                  <option value={opt.buildingId}>{opt.buildingName}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Col>\r\n              <button\r\n                size='sm'\r\n                style={{\r\n                  backgroundColor: \"#254a9e\",\r\n                  borderColor: \"#254a9e\",\r\n                  fontSize: \"15px\",\r\n                  marginLeft: \"-4.3rem\",\r\n                }}\r\n                type='submit'\r\n                class='btn btn-primary'>\r\n                Search\r\n              </button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n        <IndividualPayment dataArray={indivData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndividualPaymentFields;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport BulkPayments from \"./BulkPayments\";\r\nimport { properties } from \"./properties\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\nfunction BulkPaymentField() {\r\n  const [bulkData, setBulkData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [data1, setData1] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data3, setData3] = useState([]);\r\n  const [building, setBuilding] = useState([]);\r\n\r\n  const bulkDataImput = {\r\n    mgmtCompId: data.mgmtCompId,\r\n    buildingId: data.buildingId,\r\n  };\r\n\r\n  const loadBulkData = (bulkDataImput) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.bulkDataList, bulkDataImput, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          if (data.length) {\r\n            setBulkData(data);\r\n            console.info(\"Bulk Response << : \" + JSON.stringify(data));\r\n          } else {\r\n            alert(\"No Record Found\");\r\n            setBulkData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const fetchManagementComany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    console.log(\"company\" + company.data);\r\n    setData1(company.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchManagementComany();\r\n  }, []);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    console.log(\"building\", building.data);\r\n    setData3(building.data);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   fetchBuilding();\r\n  // }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log(data);\r\n    if (!data.mgmtCompId || !data.buildingId) {\r\n      event.preventDefault();\r\n      alert(\"Please select Mandatory fields\");\r\n      return false;\r\n    }\r\n\r\n    console.log(\"MgmtId:::\" + data.mgmtCompId);\r\n    console.log(\"buildingId:::\" + data.buildingId);\r\n\r\n    loadBulkData(bulkDataImput);\r\n    event.preventDefault();\r\n  };\r\n\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n\r\n  function handle(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='App' style={{ overflowX: \"hidden\" }}>\r\n        <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n          <FormGroup row>\r\n            <Label sm={2} className='required'>\r\n              Management Company\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='mgmtCompId'\r\n                name='mgmtCompId'\r\n                value={data.mgmtCompId}\r\n                onChange={(e) => getBuildingNames(e)}>\r\n                <option selected disabled>\r\n                  Please select a company\r\n                </option>\r\n                {data1.map((opt) => (\r\n                  <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2} className='required'>\r\n              Building Name\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                style={{ marginLeft: -65 }}\r\n                size='sm'\r\n                type='select'\r\n                id='buildingId'\r\n                // value={data.buildingId}\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a building\r\n                </option>\r\n                {building.map((opt) => (\r\n                  <option value={opt.buildingId}>{opt.buildingName}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Col>\r\n              <button\r\n                size='sm'\r\n                style={{\r\n                  backgroundColor: \"#254a9e\",\r\n                  borderColor: \"#254a9e\",\r\n                  fontSize: \"15px\",\r\n                  marginLeft: \"-4.3rem\",\r\n                }}\r\n                type='submit'\r\n                class='btn btn-primary'>\r\n                Search\r\n              </button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n        <BulkPayments dataArray={bulkData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BulkPaymentField;\r\n","import React from 'react';\r\n\r\nimport {\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n} from '@material-ui/core';\r\n\r\nimport BulkPayments from './BulkPayments';\r\nimport IndividualPayment from './IndividualPayment';\r\nimport IndividualPaymentFields from './IndividualPaymentFields';\r\nimport BulkPaymentField from './BulkPaymentField';\r\n\r\nconst PaymentTabs = () => {\r\n    const [tbVal, setVal] = React.useState(0);\r\n\r\n    const moveTab = (e, val) => {\r\n        setVal(val)\r\n    }\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\" style={{marginTop:3 , backgroundColor:'#254a9e',maxHeight:'35px'}}>\r\n                <Tabs TabIndicatorProps={{style: {background:'white',marginBottom:'11px',}}} style={{height:'5px'}} value={tbVal} onChange={moveTab}>\r\n                    <Tab label=\"Individuals Payment\" style={{fontWeight:'bold',minWidth:\"2%\",fontSize:'13px',paddingTop:'0px' ,paddingBottom:'-40px',paddingLeft:'10px',paddingRight:'0px'}}/>\r\n                    <Tab label=\"Bulk Payment\" style={{fontWeight:'bold',minWidth:\"2%\",fontSize:'13px' ,paddingTop:'0px' ,paddingBottom:'-40px',paddingLeft:'10px',paddingRight:'0px'}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {tbVal=== 0 && <IndividualPaymentFields/>}\r\n            {tbVal=== 1 && <BulkPaymentField/>}\r\n            {/*\r\n            <TabPanel value={tbVal} index={0}>T1</TabPanel>\r\n            <TabPanel value={tbVal} index={1}>T2</TabPanel>\r\n            */}\r\n        </>\r\n    );\r\n}\r\nexport default PaymentTabs\r\n\r\n\r\n\r\n","const SEARCH_RESULT_COLUMNS = [\r\n  {\r\n    Header: \"Matrix Ref No/Matrix File RefNo\",\r\n    accessor: \"strMatrixRefNo\",\r\n  },\r\n\r\n  {\r\n    Header: \"Sub Product\",\r\n    accessor: \"subProduct\",\r\n  },\r\n\r\n  {\r\n    Header: \"Debit Account Number Description\",\r\n    accessor: \"debitAccountNumberDesc\",\r\n  },\r\n  {\r\n    Header: \"Beneficiary Name\",\r\n    accessor: \"beneficiaryName\",\r\n  },\r\n  {\r\n    Header: \"Initiator Date\",\r\n    accessor: \"initiatorDate\",\r\n  },\r\n  {\r\n    Header: \"Payment Currency\",\r\n    accessor: \"paymentCurrency\",\r\n  },\r\n  {\r\n    Header: \"Amount\",\r\n    accessor: \"invoiceAmount\",\r\n  },\r\n  {\r\n    Header: \"Customer Reference\",\r\n    accessor: \"customerReference\",\r\n  },\r\n  {\r\n    Header: \"Initiator Name\",\r\n    accessor: \"initiatorNameDateTime\",\r\n  },\r\n  {\r\n    Header: \"Status\",\r\n    accessor: \"status\",\r\n  },\r\n  {\r\n    Header: \"Remarks\",\r\n    accessor: \"remarks\",\r\n  },\r\n];\r\nexport default SEARCH_RESULT_COLUMNS;\r\n","import React from 'react';\r\n\r\nfunction ExportsButtons() {\r\n    return (\r\n        <div class=\"col ml-auto\" align=\"right\" style={{marginTop:5}}>\r\n            <button style={{backgroundColor:'#254a9e', borderColor:'#254a9e'}}  type=\"button\" class=\"btn btn-primary btn-sm\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}PDF</button>{' '}\r\n            <button style={{backgroundColor:'#254a9e', borderColor:'#254a9e'}} type=\"button\" class=\"btn btn-primary btn-sm\">\r\n                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}Excel</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExportsButtons\r\n","import React, { useMemo, useEffect, useState } from 'react';\r\n\r\nimport {\r\n  useFilters,\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from 'react-table';\r\nimport {\r\n  Button,\r\n  Table,\r\n} from 'reactstrap';\r\n\r\nimport SEARCH_RESULT_COLUMNS from '../app-data/SerachResultColumn';\r\nimport ExportsButtons from './ExportsButtons';\r\n\r\nconst SearchResults = (props) => {\r\n    const columns = useMemo(() => SEARCH_RESULT_COLUMNS, [])\r\n    const[data , setData] =  useState([]);\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        state,\r\n        setGlobalFilter,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize,\r\n    } = useTable({ columns, data }, useGlobalFilter, useFilters, useSortBy, usePagination)\r\n    const { pageIndex, pageSize } = state\r\n    const { globalFilter } = state\r\n  \r\n      \r\n    useEffect(() =>{\r\n     \r\n       setData(props.Data);\r\n    });\r\n\r\n    console.info('props : '+JSON.stringify(props.Data))\r\n    \r\n    return (\r\n        <div>\r\n         \r\n            <Table size='sm' striped={false} striped={true} style={{ marginTop: 20 }} {...getTableProps()}>\r\n                <thead style={{ backgroundColor: '#254a9e', color: 'white', bordercolor: '#254a9e', fontSize: 14 }}>\r\n                    {\r\n                        headerGroups.map((headerGroup) => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {\r\n                                    headerGroup.headers.map((column) => (\r\n                                        <th {...column.getHeaderProps(column.getSortByToggleProps())}> {column.render('Header')}\r\n                                            <span>\r\n                                                {\r\n                                                    column.isSorted ? (column.isSortedDesc ? ' ⬇️' : ' ⬆️') : ''\r\n                                                }\r\n                                            </span>\r\n                                        </th>\r\n                                    ))\r\n                                }\r\n\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {\r\n                        page.map((row) => {\r\n                            prepareRow(row)\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {\r\n                                        row.cells.map((cell) => {\r\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        })\r\n                                    }\r\n\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            <div style={{textAlign:'center'}}>\r\n                <span>\r\n                    Page{' '}\r\n                    <strong>\r\n                        {pageIndex+1} of {pageOptions.length}\r\n                    </strong>{' '}\r\n                </span>\r\n                <span>\r\n                    | Go To Page:{' '}\r\n                    <input type=\"number\" defaultValue={pageIndex+1} onChange={(e)=>{\r\n                        const pageNumber = e.target.value ? Number(e.target.value)-1:0\r\n                        gotoPage(pageNumber)                        \r\n                    }} \r\n                        style={{width:'50px', padding:'2',}}/>{' '}\r\n                </span>\r\n                <select value={pageSize} onChange={(e)=>setPageSize(Number(e.target.value))}>\r\n                        {[10, 20, 50].map((pageSize)=>(\r\n                        <option key={pageSize} value={pageSize}>\r\n                                Show {pageSize}\r\n                        </option>))}\r\n                </select>\r\n                <Button style={{backgroundColor:'#254a9e', color:'white'}} size=\"sm\" onClick={()=>gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</Button>{' '}\r\n                <Button style={{backgroundColor:'#254a9e', color:'white'}} size=\"sm\" onClick={()=>previousPage()} disabled={!canPreviousPage}>Previous</Button>{' '}\r\n                <Button style={{backgroundColor:'#254a9e', color:'white'}} size=\"sm\" onClick={()=>nextPage(pageCount-1)} disabled={!canNextPage}>Next</Button>{' '}\r\n                <Button style={{backgroundColor:'#254a9e', color:'white'}} size=\"sm\" onClick={()=>gotoPage(pageCount-1)} disabled={!canNextPage}>{'>>'}</Button>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n)\r\n}\r\n\r\nexport default SearchResults\r\n","import \"./mydiv.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\nimport SearchResults from \"./SearchResults\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\nexport default class Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      MatrixRefNo: \"\",\r\n      BeneficiaryName: \"\",\r\n      SupplierList: [],\r\n      CustomerRef: \"\",\r\n      currency: \"\",\r\n      DebitAccountNumber: \"\",\r\n      Product: \"\",\r\n      subProduct: \"\",\r\n      InitiationDateFrom: \"\",\r\n      InitiationDateTo: \"\",\r\n      AmountFrom: \"\",\r\n      AmountTo: \"\",\r\n      Sortby: \"DESC\",\r\n      SortOrder: \"\",\r\n      MatrixFileRefNo: \"\",\r\n      mcNameEn: \"\",\r\n      BuildingName: \"\",\r\n      buildingId: \"\",\r\n      Status: \"\",\r\n      SearchResult: [],\r\n      dropdowndata: [],\r\n      buildingDropDownData: [],\r\n    };\r\n  }\r\n\r\n  handleMatrixRefNo = (event) => {\r\n    this.setState({\r\n      MatrixRefNo: event.target.value,\r\n    });\r\n  };\r\n  handleBeneficiaryName = (event) => {\r\n    this.setState({\r\n      BeneficiaryName: event.target.value,\r\n    });\r\n  };\r\n  handleCustomerRef = (event) => {\r\n    this.setState({\r\n      CustomerRef: event.target.value,\r\n    });\r\n  };\r\n  handlecurrency = (event) => {\r\n    this.setState({\r\n      currency: event.target.value,\r\n    });\r\n  };\r\n  handleProduct = (event) => {\r\n    this.setState({\r\n      Product: event.target.value,\r\n    });\r\n  };\r\n  handlesubProduct = (event) => {\r\n    this.setState({\r\n      subProduct: event.target.value,\r\n    });\r\n  };\r\n  handleInitiationDateFrom = (event) => {\r\n    this.setState({\r\n      InitiationDateFrom: event.target.value,\r\n    });\r\n  };\r\n  handleInitiationDateTo = (event) => {\r\n    this.setState({\r\n      InitiationDateTo: event.target.value,\r\n    });\r\n  };\r\n  handleAmountFrom = (event) => {\r\n    this.setState({\r\n      AmountFrom: event.target.value,\r\n    });\r\n  };\r\n  handleAmountTo = (event) => {\r\n    this.setState({\r\n      AmountTo: event.target.value,\r\n    });\r\n  };\r\n  handleSortby = (event) => {\r\n    this.setState({\r\n      Sortby: event.target.value,\r\n    });\r\n  };\r\n  handleSortOrder = (event) => {\r\n    this.setState({\r\n      SortOrder: event.target.value,\r\n    });\r\n  };\r\n  handleMatrixFileRefNo = (event) => {\r\n    this.setState({\r\n      MatrixFileRefNo: event.target.value,\r\n    });\r\n  };\r\n  handleDebitAccountNumber = (event) => {\r\n    this.setState({\r\n      DebitAccountNumber: event.target.value,\r\n    });\r\n  };\r\n  handleManagementCompanyName = (event) => {\r\n    this.setState({\r\n      mcNameEn: event.target.value,\r\n    });\r\n  };\r\n  handleBuildingName = (event) => {\r\n    console.log(event.target.value);\r\n    this.setState({\r\n      buildingId: event.target.value,\r\n    });\r\n  };\r\n\r\n  valueChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleStatus = (event) => {\r\n    this.setState({\r\n      Status: event.target.value,\r\n    });\r\n  };\r\n  fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    this.setState({ buildingDropDownData: [] });\r\n    // this.setState({ buildingDropDownData: building.data });\r\n  };\r\n  fetchSupplier = async () => {\r\n    const supplier = await axios.get(properties.supplierList);\r\n    this.setState({ SupplierList: supplier.data });\r\n  };\r\n  componentDidMount() {\r\n    this.fetchBuilding();\r\n    this.fetchSupplier();\r\n    axios.get(properties.managementCompanyList).then(\r\n      (response) => {\r\n        this.setState({ dropdowndata: response.data });\r\n      },\r\n      (error) => {\r\n        console.log(\"dropdown : \" + error);\r\n      }\r\n    );\r\n  }\r\n\r\n  //get building name based on management comp\r\n  getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    this.setState({ [name]: value });\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) this.setState({ buildingDropDownData: building.data });\r\n    else this.setState({ buildingDropDownData: [] });\r\n  };\r\n\r\n  handleSubmit = (Event) => {\r\n    Event.preventDefault();\r\n\r\n    if (\r\n      this.state.MatrixRefNo == \"\" &&\r\n      this.state.BeneficiaryName == \"\" &&\r\n      this.state.CustomerRef == \"\" &&\r\n      this.state.currency == \"\" &&\r\n      this.state.subProduct == \"\" &&\r\n      this.state.InitiationDateFrom == \"\" &&\r\n      this.state.InitiationDateTo == \"\" &&\r\n      this.state.AmountFrom == \"\" &&\r\n      this.state.AmountTo == \"\" &&\r\n      this.state.Sortby != \"\" &&\r\n      this.state.SortOrder == \"\" &&\r\n      this.state.DebitAccountNumber == \"\" &&\r\n      this.state.Status == \"\" &&\r\n      this.state.mcNameEn == \"\" &&\r\n      this.state.buildingId == \"\"\r\n    ) {\r\n      alert(\"Please Enter At least Two Filters!\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      this.state.MatrixRefNo == \"\" &&\r\n      this.state.BeneficiaryName == \"\" &&\r\n      this.state.CustomerRef == \"\" &&\r\n      this.state.currency == \"\" &&\r\n      this.state.subProduct == \"\" &&\r\n      this.state.InitiationDateFrom == \"\" &&\r\n      this.state.InitiationDateTo == \"\" &&\r\n      this.state.AmountFrom == \"\" &&\r\n      this.state.AmountTo == \"\" &&\r\n      this.state.Sortby != \"\" &&\r\n      this.state.SortOrder != \"\" &&\r\n      this.state.DebitAccountNumber == \"\" &&\r\n      this.state.Status == \"\"\r\n    ) {\r\n      alert(\"Please Enter More Filters!\");\r\n      return false;\r\n    }\r\n\r\n    const postbody = {\r\n      matrixRefNo: this.state.MatrixRefNo,\r\n      subProduct: this.state.subProduct,\r\n      debitAccountNumberDesc: this.state.DebitAccountNumber,\r\n      beneficiaryName: this.state.BeneficiaryName,\r\n      customerReference: this.state.CustomerRef,\r\n      status: this.state.Status,\r\n      paymentCurrency: this.state.currency,\r\n      amountFrom: this.state.AmountFrom,\r\n      amountTo: this.state.AmountTo,\r\n      initiatorDateFrom: this.state.InitiationDateFrom,\r\n      initiatorDateTo: this.state.InitiationDateTo,\r\n      sortOrder: this.state.SortOrder,\r\n      sortBy: this.state.Sortby,\r\n      mcNameEn: this.state.mcNameEn,\r\n      buildingName: this.state.buildingName,\r\n    };\r\n\r\n    console.log(\"SUPPLIER!!\" + this.state.BeneficiaryName);\r\n    console.log(\"MGMT!!\" + this.state.mcNameEn);\r\n    console.log(\"this.state.buildingId\" + this.state.buildingId);\r\n    console.log(\"this.state.buildingName\" + this.state.buildingName);\r\n    var head = {\r\n      \"Content-Type\": \"application/json\",\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios.post(properties.searchResult, postbody, { headers: head }).then(\r\n      (response) => {\r\n        console.log(\"loading....\");\r\n        this.setState({\r\n          SearchResult: response.data.paymentData,\r\n          count: response.data.count,\r\n        });\r\n        if (\r\n          !response.data.paymentData ||\r\n          (response.data.paymentData == 0 && response.data.count == 0)\r\n        ) {\r\n          alert(\"No Records found!\");\r\n        }\r\n\r\n        if (response.data.count > 0) {\r\n          alert(\r\n            \"There are \" +\r\n              response.data.count +\r\n              \" records, Please apply more filters!\"\r\n          );\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"Error! : \" + error);\r\n      }\r\n    );\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      MatrixRefNo: \"\",\r\n      BeneficiaryName: \"\",\r\n      // SupplierList: [],\r\n      CustomerRef: \"\",\r\n      currency: \"\",\r\n      DebitAccountNumber: \"\",\r\n      Product: \"\",\r\n      subProduct: \"\",\r\n      InitiationDateFrom: \"\",\r\n      InitiationDateTo: \"\",\r\n      AmountFrom: \"\",\r\n      AmountTo: \"\",\r\n      Sortby: \"\",\r\n      SortOrder: \"\",\r\n      MatrixFileRefNo: \"\",\r\n      mcNameEn: \"\",\r\n      BuildingName: \"\",\r\n      buildingDropDownData: [],\r\n      Status: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      MatrixRefNo,\r\n      MatrixFileRefNo,\r\n      BeneficiaryName,\r\n      SupplierList,\r\n      CustomerRef,\r\n      currency,\r\n      Product,\r\n      subProduct,\r\n      InitiationDateFrom,\r\n      InitiationDateTo,\r\n      AmountFrom,\r\n      AmountTo,\r\n      Sortby,\r\n      SortOrder,\r\n      DebitAccountNumber,\r\n      mcNameEn,\r\n      BuildingName,\r\n      Status,\r\n      dropdowndata,\r\n      buildingDropDownData,\r\n    } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <div style={{ maxwidth: \"100%\", marginTop: \"5px\" }}>\r\n            <hr />\r\n            <Card>\r\n              <CardTitle\r\n                tag='h5'\r\n                id='tit1'\r\n                style={{ background: \"#254a9e\", color: \"white\" }}>\r\n                Transaction Search Criteria\r\n              </CardTitle>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for='MatrixRefNo' sm={2}>\r\n                    Matrix Ref No:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='MatrixRefNo'\r\n                      value={MatrixRefNo}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Label for='CustomerRef' sm={2}>\r\n                    Customer Ref:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='CustomerRef'\r\n                      value={CustomerRef}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n                  <Label\r\n                    for='ManagementCompanyName'\r\n                    sm={2}\r\n                    style={{ marginTop: \"-0.7rem\", marginBottom: \"-1rem\" }}>\r\n                    Management Company Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='mcNameEn'\r\n                      value={mcNameEn}\r\n                      onChange={this.valueChange}\r\n                      onChange={(e) => this.getBuildingNames(e)}>\r\n                      <option selected hidden>\r\n                        Please select a company\r\n                      </option>\r\n                      {dropdowndata.map((opt) => (\r\n                        <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col>\r\n                  {/*<Label for='DebitAccountNumber' sm={2}>\r\n                    Account Number:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='DebitAccountNumber'\r\n                      value={DebitAccountNumber}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col> */}\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  {/* <Label for='BeneficiaryName' sm={2}>\r\n                    Beneficiary Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='BeneficiaryName'\r\n                      value={BeneficiaryName}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col> */}\r\n\r\n                  <Label for='BeneficiaryName' sm={2}>\r\n                    Beneficiary Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='BeneficiaryName'\r\n                      id='BeneficiaryName'\r\n                      // value={BeneficiaryName}\r\n                      onChange={this.valueChange}>\r\n                      <option selected hidden>\r\n                        Select a beneficiary name\r\n                      </option>\r\n                      {SupplierList.map((opt) => (\r\n                        <option value={opt.supplierId}>\r\n                          {opt.supplierName}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col>\r\n                  <Label for='subProduct' sm={2}>\r\n                    Sub Product:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='subProduct'\r\n                      value={subProduct}\r\n                      onChange={this.valueChange}></Input>\r\n                  </Col>\r\n                  {/* <Label for='BuildingName' sm={2}>\r\n                    Building Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='BuildingName'\r\n                      id={BuildingName}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col> */}\r\n\r\n                  <Label for='buildingName' sm={2}>\r\n                    Building Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='buildingName'\r\n                      id='buildingName'\r\n                      // value={BuildingName}\r\n                      onChange={this.valueChange}>\r\n                      <option selected hidden>\r\n                        Select a building name\r\n                      </option>\r\n                      {buildingDropDownData.map((opt) => (\r\n                        <option value={opt.buildingId}>\r\n                          {opt.buildingName}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label for='InitiationDateFrom' sm={2}>\r\n                    Initiation Date From:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='date'\r\n                      name='InitiationDateFrom'\r\n                      value={InitiationDateFrom}\r\n                      placeholder='date placeholder'\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n                  <Label for='InitiationDateTo' sm={2}>\r\n                    Initiation Date To:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='date'\r\n                      name='InitiationDateTo'\r\n                      value={InitiationDateTo}\r\n                      placeholder='date placeholder'\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Label for='Status' sm={2}>\r\n                    Status:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='Status'\r\n                      value={Status}\r\n                      onChange={this.valueChange}>\r\n                      <option value=''>select</option>\r\n                      <option value='APPROVED'>APPROVED</option>\r\n                      <option value='EXCEPTION'>EXCEPTION</option>\r\n                      <option value='FAILED'>FAILED</option>\r\n                      <option value='IN PROGRESS'>IN PROGRESS</option>\r\n                      <option value='PENDING'>PENDING</option>\r\n                      <option value='REJECTED'>REJECTED</option>\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='AmountFrom' sm={2}>\r\n                    Amount From:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='AmountFrom'\r\n                      value={AmountFrom}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Label for='AmountTo' sm={2}>\r\n                    Amount To:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='AmountTo'\r\n                      value={AmountTo}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Label for='currency' sm={2}>\r\n                    Currency:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='currency'\r\n                      value={currency}\r\n                      onChange={this.valueChange}>\r\n                      <option value=''>select</option>\r\n                      <option value='AED'>AED</option>\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for='DebitAccountNumber' sm={2}>\r\n                    Account Number:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='text'\r\n                      name='DebitAccountNumber'\r\n                      value={DebitAccountNumber}\r\n                      onChange={this.valueChange}\r\n                    />\r\n                  </Col>\r\n                  {/* <Label for='ManagementCompanyName' sm={2}>\r\n                    Management Company Name:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='mcNameEn'\r\n                      value={mcNameEn}\r\n                      onChange={this.valueChange}>\r\n                      <option selected hidden>\r\n                        Please select a company\r\n                      </option>\r\n                      {dropdowndata.map((opt) => (\r\n                        <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                      ))}\r\n                    </Input>\r\n                  </Col> */}\r\n                  <Label for='SortOrder' sm={2}>\r\n                    Sort Order:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='SortOrder'\r\n                      value={SortOrder}\r\n                      onChange={this.valueChange}>\r\n                      <option value=''>select</option>\r\n                      <option value='MGMT_COMP_ID'>Management Company</option>\r\n                      <option value='BENEFICIARY_NAME'>Beneficiary Name</option>\r\n                      <option value='INITIATOR_DATE'>Initiation Date</option>\r\n                    </Input>\r\n                  </Col>\r\n\r\n                  <Label for='Sortby' sm={2}>\r\n                    Sort By:\r\n                  </Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      size='sm'\r\n                      type='select'\r\n                      name='Sortby'\r\n                      value={Sortby}\r\n                      onChange={this.valueChange}\r\n                      defaultValue='Ascending'>\r\n                      <option value='DESC'>Descending</option>\r\n                      <option value='ASC'>Ascending</option>\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row></FormGroup>\r\n                <Col sm={{ offset: 9 }}>\r\n                  <Button\r\n                    color='primary'\r\n                    type='submit'\r\n                    id='Button'\r\n                    style={{\r\n                      borderRadius: \"5%\",\r\n                      margin: \"1%\",\r\n                      marginLeft: \"130px\",\r\n                      background: \"#254a9e\",\r\n                      color: \"white\",\r\n                    }}>\r\n                    Search\r\n                  </Button>\r\n                  <Button\r\n                    color='primary'\r\n                    type='reset'\r\n                    style={{\r\n                      background: \"#254a9e\",\r\n                      color: \"white\",\r\n                      borderRadius: \"5%\",\r\n                      marginLeft: \"55px\",\r\n                    }}\r\n                    onClick={this.resetForm}\r\n                    id='Button'>\r\n                    Reset\r\n                  </Button>\r\n                </Col>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n\r\n        {console.info(\"from Parent : \" + this.state.SearchResult)}\r\n        <SearchResults Data={this.state.SearchResult} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { properties } from \"../component/properties\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nexport const PaymentColumns = [\r\n  {\r\n    id: \"matrixreflink\",\r\n    Header: \" \",\r\n    accessor: \"pymtReqId\",\r\n    Cell: (e) => (\r\n      <Link to={`/attachmentField/` + e.value} target='_blank' rel='noopener'>\r\n        <Tooltip title='Edit'>\r\n          <IconButton>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Link>\r\n    ),\r\n  },\r\n  {\r\n    Header: \"Matrix Ref No.\",\r\n    accessor: \"strMatrixRefNo\",\r\n  },\r\n  {\r\n    Header: \"Sub Product\",\r\n    accessor: \"subProduct\",\r\n  },\r\n  {\r\n    Header: \"Debit Account Number Description\",\r\n    accessor: \"debitAccountNumberDesc\",\r\n  },\r\n  {\r\n    Header: \"Beneficiary Name\",\r\n    accessor: \"beneficiaryName\",\r\n  },\r\n  {\r\n    Header: \"Initiator Date\",\r\n    accessor: \"displayInitiatorDate\",\r\n  },\r\n  {\r\n    Header: \"Payment Currency\",\r\n    accessor: \"paymentCurrency\",\r\n  },\r\n  {\r\n    Header: \"Amount\",\r\n    accessor: \"invoiceAmount\",\r\n  },\r\n  {\r\n    Header: \"Customer Reference\",\r\n    accessor: \"customerReference\",\r\n  },\r\n  {\r\n    Header: \"Initiator Name/Date and Time\",\r\n    accessor: \"initiatorNameDateTime\",\r\n  },\r\n];\r\n","import { Form, FormGroup, Label, Input, Col, CustomInput } from \"reactstrap\";\r\nconst GlobalFilteringPaymentReq = ({ filter, setFilter }) => {\r\n  return (\r\n    <>\r\n      <div class='inline' style={{ marginTop: \"2rem\", marginLeft: \"-6.5rem\" }}>\r\n        Search\r\n      </div>\r\n      <Col style={{ marginTop: \"-1.7rem\", marginLeft: \"-1.5rem\" }}>\r\n        <Input\r\n          placeholder=''\r\n          value={filter || \"\"}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        />\r\n      </Col>\r\n      {/* <div class=\"col ml-auto\" align=\"right\">\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}PDF</button>{' '}\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\">\r\n    <i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}Excel</button>\r\n</div> */}\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GlobalFilteringPaymentReq;\r\n","import React, { useMemo, useEffect, useState } from \"react\";\r\n\r\nimport { PaymentColumns } from \"../app-data/PaymentColumn\";\r\nimport { Button, Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport GlobalFilteringPaymentReq from \"./GlobalFilteringPaymentReq\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useFilters,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n} from \"react-table\";\r\nexport const PaymentRequestTable = (props) => {\r\n  const columns = useMemo(() => PaymentColumns, []);\r\n\r\n  const data = props.data;\r\n\r\n  // const getListDocumnetsFromServer = () => {\r\n  //   axios.get(properties.getPaymentData).then(\r\n  //     (response) => {\r\n  //       console.log(\"loading....\");\r\n  //       setData(response.data);\r\n  //       console.log(response.data);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getListDocumnetsFromServer();\r\n  // }, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    setGlobalFilter,\r\n    prepareRow,\r\n  } = useTable(\r\n    { columns, data },\r\n    useGlobalFilter,\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const { pageIndex, pageSize } = state;\r\n  const { globalFilter } = state;\r\n  return (\r\n    <>\r\n      <div style={{ marginLeft: \"83%\", width: \"18%\", marginTop: \"-4rem\" }}>\r\n        <GlobalFilteringPaymentReq\r\n          filter={globalFilter}\r\n          setFilter={setGlobalFilter}\r\n          style={{ marginLeft: \"10\" }}\r\n        />\r\n      </div>\r\n      <Table\r\n        size='sm'\r\n        striped={true}\r\n        style={{ marginTop: \"1rem\" }}\r\n        {...getTableProps()}>\r\n        <thead\r\n          style={{\r\n            background: \"#254a9e\",\r\n            color: \"white\",\r\n            fontSize: 14,\r\n            fontWeight: \"bold\",\r\n          }}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody style={{ fontSize: 14 }} {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td style={{ fontSize: 14 }} {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div className='text-center'>\r\n        <span>\r\n          page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          Go to page:{\" \"}\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\" }}\r\n          />\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}>\r\n          {[10, 25, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Col, CustomInput } from \"reactstrap\";\r\nimport { PaymentRequestTable } from \"./PaymentRequestTable\";\r\nimport axios, { post } from \"axios\";\r\nimport { Button } from \"reactstrap\";\r\nimport { properties } from \"./properties\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CompassCalibrationOutlined } from \"@material-ui/icons\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\nfunction PaymentRequestFields() {\r\n  // const username = useSelector((state) => state.userStore.username);\r\n  // const username = \"checker1\";\r\n  const [clearFile, setClearFile] = useState();\r\n  const username = ReactSession.get(\"username\");\r\n  console.log(\"payment request fields started\");\r\n  let history = useHistory();\r\n  const [files, setFile] = useState();\r\n  const [dropDownData, setDropDownData] = useState({\r\n    mgmtCompId: \"\",\r\n    buildingId: \"\",\r\n  });\r\n  const [data, setData] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const [building, setBuilding] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    setBuilding(building.data);\r\n    // setBuilding([]);\r\n  };\r\n  const fetchCompany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    setCompany(company.data);\r\n    console.log(company.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n    fetchCompany();\r\n  }, []);\r\n\r\n  let handleInput = (e) => {\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setDropDownData({ ...dropDownData, [name]: value });\r\n    console.log(dropDownData);\r\n  };\r\n  let search = (e) => {\r\n    e.preventDefault();\r\n    console.log(dropDownData);\r\n    if (!dropDownData.mgmtCompId) {\r\n      alert(\"Please select management company\");\r\n      return false;\r\n    }\r\n    //call api to get search result\r\n    console.log(dropDownData);\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.searchPaymentData, dropDownData, { headers: head })\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          if (response.data) setTableData(response.data);\r\n          else {\r\n            setTableData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    <div className='App'>\r\n      <PaymentRequestTable data={tableData} />\r\n    </div>;\r\n  };\r\n\r\n  //get building name based on management comp\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setDropDownData({ ...dropDownData, [name]: value });\r\n    console.log(dropDownData);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n\r\n  //load table data\r\n\r\n  const getListDocumnetsFromServer = () => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios.get(properties.getPaymentData, { headers: head }).then(\r\n      (response) => {\r\n        console.log(\"loading....\");\r\n        setTableData(response.data);\r\n        console.log(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListDocumnetsFromServer();\r\n  }, []);\r\n\r\n  function fileUpload(e) {\r\n    e.preventDefault();\r\n    // if (!dropDownData.mgmtCompId) {\r\n    //   alert(\"Please select management company\");\r\n    //   return false;\r\n    // }\r\n\r\n    if (fileValidation()) {\r\n      const url = properties.excelUpload;\r\n      const formData = new FormData();\r\n      console.log(files);\r\n      formData.append(\"file\", files);\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          token: ReactSession.get(\"token\"),\r\n          username: ReactSession.get(\"username\"),\r\n        },\r\n      };\r\n      console.log(formData);\r\n      axios\r\n        .post(\r\n          url + `/${username}/${dropDownData.mgmtCompId}/`,\r\n          formData,\r\n          config\r\n        )\r\n        .then((response) => response.data)\r\n        .then(\r\n          (data) => {\r\n            console.log(data);\r\n            setData(data);\r\n            console.info(\"report response << : \" + JSON.stringify(data));\r\n            alert(data);\r\n            setClearFile(\"\");\r\n            // window.location.reload();\r\n            history.push(\"/tabs/\");\r\n          },\r\n          (error) => {\r\n            alert(\"Error: Upload failed please try after sometime!\");\r\n            history.push(\"/tabs/\");\r\n            // window.location.reload();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  function fileValidation(e) {\r\n    let extensions = /(\\.xls|\\.xlsx)$/i;\r\n    var fileInput = document.getElementById(\"file\");\r\n    var filePath = fileInput.value;\r\n    if (!filePath || !dropDownData.mgmtCompId) {\r\n      alert(\"Please select Management company and Payment request file\");\r\n      return false;\r\n    }\r\n    if (!extensions.exec(filePath)) {\r\n      console.log(\"Invalid file extension\");\r\n      alert(`Invalid file, system will accept only [.xls, .xlsx,] `);\r\n      fileInput.innerHTML = \"\";\r\n      return false;\r\n    }\r\n    console.log(\"Valid file extension found\");\r\n    return true;\r\n  }\r\n\r\n  const getFile = (e) => {\r\n    const fileRef = e.target.files[0];\r\n    setFile(fileRef);\r\n    fileValidation();\r\n  };\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5' inline>\r\n        <FormGroup row>\r\n          <Label className='required'>Management Company Name</Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='mgmtCompId'\r\n              name='mgmtCompId'\r\n              // value={company.mgmtCompId}\r\n              onChange={(e) => handleInput(e)}\r\n              onChange1={(e) => {\r\n                getBuildingNames(e);\r\n              }}\r\n              style={{ width: \"15rem\" }}>\r\n              <option selected disabled>\r\n                Please select a company\r\n              </option>\r\n              {company.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row className='ml-lg-5'>\r\n          <Label>Upload Payment Requests</Label>\r\n          <Col>\r\n            <div class='custom-file'>\r\n              <CustomInput\r\n                type='file'\r\n                accept='.xls, .xlsx'\r\n                onChange={getFile}\r\n                style={{ width: \"20rem\", textAlign: \"left\" }}\r\n                id='file'\r\n                name='file'\r\n                key={clearFile}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Button\r\n              onClick={fileUpload}\r\n              style={{ background: \"#254a9e\", color: \"white\" }}>\r\n              Upload{\" \"}\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                marginLeft: \"5vh\",\r\n                position: \"absolute\",\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n              }}\r\n              onClick={() => window.location.reload()}>\r\n              Refresh\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row className='mt-4'>\r\n          <Label>Building Name</Label>\r\n          <Col style={{ marginLeft: \"6.5rem\" }}>\r\n            <Input\r\n              type='select'\r\n              id='buildingId'\r\n              name='buildingId'\r\n              // value={dropDownData.mgmtCompId}\r\n              onChange={(e) => handleInput(e)}\r\n              style={{ width: \"15rem\" }}>\r\n              <option selected disabled>\r\n                Please select a building\r\n              </option>\r\n              {building.map((opt2) => (\r\n                <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              onClick={search}\r\n              style={{ background: \"#254a9e\", color: \"white\" }}>\r\n              Search{\" \"}\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n      <div className='App'>\r\n        <PaymentRequestTable data={tableData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PaymentRequestFields;\r\n","import { properties } from \"./properties\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nexport const CompletedRequestColumn = [\r\n  {\r\n    id: \"matrixreflink\",\r\n    Header: \" \",\r\n    accessor: \"pymtReqId\",\r\n    Cell: (e) => (\r\n      <Link\r\n        to={`/attachmentFieldcomplreq/` + e.value}\r\n        target='_blank'\r\n        rel='noopener'>\r\n        <Tooltip title='Edit'>\r\n          <IconButton>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Link>\r\n    ),\r\n  },\r\n  {\r\n    Header: \"Matrix Ref No.\",\r\n    accessor: \"strMatrixRefNo\",\r\n  },\r\n  {\r\n    Header: \"Sub Product\",\r\n    accessor: \"subProduct\",\r\n  },\r\n  {\r\n    Header: \"Debit Account Number Description\",\r\n    accessor: \"debitAccountNumberDesc\",\r\n  },\r\n  {\r\n    Header: \"Beneficiary Name\",\r\n    accessor: \"beneficiaryName\",\r\n  },\r\n  {\r\n    Header: \"Initiator Date\",\r\n    accessor: \"displayInitiatorDate\",\r\n  },\r\n  {\r\n    Header: \"Payment Currency\",\r\n    accessor: \"paymentCurrency\",\r\n  },\r\n  {\r\n    Header: \"Amount\",\r\n    accessor: \"invoiceAmount\",\r\n  },\r\n  {\r\n    Header: \"Customer Reference\",\r\n    accessor: \"customerReference\",\r\n  },\r\n  {\r\n    Header: \"Initiator Name/Date and Time\",\r\n    accessor: \"initiatorNameDateTime\",\r\n  },\r\n  {\r\n    Header: \"Status\",\r\n    accessor: \"status\",\r\n  },\r\n  {\r\n    Header: \"Remarks\",\r\n    accessor: \"remarks\",\r\n  },\r\n];\r\n","import { Form, FormGroup, Label, Input, Col, CustomInput } from \"reactstrap\";\r\nconst GlobalFilteringCompReq = ({ filter, setFilter }) => {\r\n  return (\r\n    <>\r\n      <div class='inline' style={{ marginTop: \"2rem\", marginLeft: \"-2rem\" }}>\r\n        Search\r\n      </div>\r\n      <Col style={{ marginTop: \"-1.7rem\", marginLeft: \"1rem\" }}>\r\n        <Input\r\n          placeholder=''\r\n          value={filter || \"\"}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        />\r\n      </Col>\r\n      {/* <div class=\"col ml-auto\" align=\"right\">\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}PDF</button>{' '}\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\">\r\n    <i class=\"fa fa-download\" aria-hidden=\"true\"></i>{' '}Excel</button>\r\n</div> */}\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GlobalFilteringCompReq;","import React, { useMemo, useEffect, useState } from \"react\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useSortBy,\r\n} from \"react-table\";\r\nimport { CompletedRequestColumn } from \"./CompletedRequestColumn\";\r\nimport { Button, Table } from \"reactstrap\";\r\nimport GlobalFilteringCompReq from \"./GlobalFilteringCompReq\";\r\n\r\nexport const CompletedRequestTable = (prop) => {\r\n  const columns = useMemo(() => CompletedRequestColumn, []);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  // const getListDocumnetsFromServer = () => {\r\n  //   axios.get(properties.getCompletedRequests).then(\r\n  //     (response) => {\r\n  //       console.log(\"loading....\");\r\n  //       setData(response.data);\r\n  //       console.log(response.data);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setData(prop.dataArray);\r\n    console.info(\"state data[][][] : \" + JSON.stringify(data));\r\n  });\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    setGlobalFilter,\r\n    prepareRow,\r\n  } = useTable(\r\n    { columns, data },\r\n    useGlobalFilter,\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination,\r\n    usePagination\r\n  );\r\n\r\n  const { pageIndex, pageSize } = state;\r\n  const { globalFilter } = state;\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          marginLeft: \"83%\",\r\n          // alignSelf: \"self-end\",\r\n\r\n          marginTop: \"-7.5rem\",\r\n          marginBottom: \"4rem\",\r\n          width: \"15%\",\r\n        }}>\r\n        <GlobalFilteringCompReq\r\n          filter={globalFilter}\r\n          setFilter={setGlobalFilter}\r\n        />\r\n      </div>\r\n      <Table\r\n        size='sm'\r\n        striped={true}\r\n        style={{ marginTop: \"1rem\" }}\r\n        {...getTableProps()}>\r\n        <thead\r\n          style={{\r\n            background: \"#254a9e\",\r\n            color: \"white\",\r\n            fontSize: 14,\r\n            fontWeight: \"bold\",\r\n          }}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody style={{ fontSize: 14 }} {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td style={{ fontSize: 14 }} {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div className='text-center'>\r\n        <span>\r\n          page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          Go to page:{\" \"}\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\" }}\r\n          />\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}>\r\n          {[10, 25, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CompletedRequestTable } from \"./CompletedRequestTable\";\r\nimport { properties } from \"./properties\";\r\nimport axios from \"axios\";\r\nimport { Form, FormGroup, Label, Input, Col } from \"reactstrap\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nfunction CompletedRequest() {\r\n  const [compData, setCompData] = useState([]);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [data1, setData1] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data3, setData3] = useState([]);\r\n  const [building, setBuilding] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n\r\n\r\n  const completedData = {\r\n    mgmtCompId: data.mgmtCompId,\r\n    supplierId: data.supplierId,\r\n    buildingId: data.buildingId,\r\n    status: data.status,\r\n    budgetYear:data.budgetYear\r\n  };\r\n  //'http://localhost:3001/completedrequest/completedRequests'\r\n  const loadCompletedData = (completedData) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.completedRequestList, completedData, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          if (data.length) {\r\n            setCompData(data);\r\n            console.info(\"completed response << : \" + JSON.stringify(data));\r\n          } else {\r\n            alert(\"No Record Found\");\r\n            setCompData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log(data);\r\n    if (!data.mgmtCompId || !data.buildingId) {\r\n      event.preventDefault();\r\n      alert(\"Please select Mandatory fields\");\r\n      return false;\r\n    }\r\n    loadCompletedData(completedData);\r\n    event.preventDefault();\r\n  };\r\n  //'http://localhost:3001/completedrequest/pdfGenerate'\r\n  const downloadPDFData = (completedData) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.completedPdf, completedData, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.info(\"completed response << : \" + data);\r\n\r\n          const downloadLink = document.createElement(\"a\");\r\n          const fileName = \"CompletedPayments.pdf\";\r\n          const linkSource = `data:application/pdf;base64,${data}`;\r\n          downloadLink.href = linkSource;\r\n          downloadLink.download = fileName;\r\n          downloadLink.click();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const downloadPDF = (event) => {\r\n    downloadPDFData(completedData);\r\n    event.preventDefault();\r\n  };\r\n  //'http://localhost:3001/completedrequest/excelGenerate'\r\n  const ExcelData = (completedData) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.completedExcel, completedData, { headers: head })\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        console.log(\"completed data response\" + data);\r\n        console.table(\"completed>>>+++\" + JSON.stringify(data));\r\n\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = \"CompletedPayments.xlsx\";\r\n        const linkSource = `data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,${data}`;\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n      });\r\n  };\r\n  const ExcelSubmit = (event) => {\r\n    ExcelData(completedData);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const fetchManagementComany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    console.log(\"company\" + company.data);\r\n    setData1(company.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchManagementComany();\r\n  }, []);\r\n\r\n  const fetchSupplier = async () => {\r\n    const supplier = await axios.get(properties.supplierList);\r\n    console.log(\"supplier\" + supplier.data);\r\n    setData2(supplier.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchSupplier();\r\n  }, []);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    console.log(\"building\", building.data);\r\n    setData3(building.data);\r\n  };\r\n\r\n  const getYears = async () => {\r\n    var date = new Date();\r\n    let year = [];\r\n    for (var i = 2018; i <= date.getFullYear(); i++) {\r\n      year.push(i);\r\n    }\r\n    setYears(year.reverse());\r\n  };\r\n  useEffect(() =>{\r\n    getYears();\r\n},[]);\r\n\r\n  // useEffect(() => {\r\n  //   fetchBuilding();\r\n  // }, []);\r\n\r\n  function handle(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  //get building name based on management comp\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n    // setData({...data,['buildingId']:\"\"})\r\n    //   console.log('new Data '+data)\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='App' style={{ overflowX: \"hidden\" }}>\r\n        <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n          <FormGroup row>\r\n            <Label sm={2} className='required'>\r\n              Management Company\r\n            </Label>\r\n            <Col sm={2} style={{marginLeft:\"-1%\"}}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='mgmtCompId'\r\n                name='mgmtCompId'\r\n                value={data.mgmtCompId}\r\n                onChange={(e) => getBuildingNames(e)}>\r\n                <option selected disabled>\r\n                  Please select a company\r\n                </option>\r\n                {data1.map((opt) => (\r\n                  <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2}>Supplier Name</Label>\r\n            <Col sm={2} style={{marginLeft:\"-2%\"}}>\r\n              <Input\r\n                style={{ marginLeft: -20 }}\r\n                size='sm'\r\n                type='select'\r\n                id='supplierId'\r\n                value={data.supplierId}\r\n                size='sm'\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a supplier\r\n                </option>\r\n                {data2.map((opt2) => (\r\n                  <option value={opt2.supplierId}>{opt2.supplierName}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Col>\r\n              <button\r\n                size='sm'\r\n                style={{\r\n                  backgroundColor: \"#254a9e\",\r\n                  borderColor: \"#254a9e\",\r\n                  fontSize: \"11px\",\r\n                }}\r\n                type='submit'\r\n                class='btn btn-primary'>\r\n                Search\r\n              </button>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={2} className='required'>\r\n              Building Name\r\n            </Label>\r\n            <Col sm={2} style={{marginLeft:\"-1%\"}}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='buildingId'\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a building\r\n                </option>\r\n                {building.map((opt) => (\r\n                  <option value={opt.buildingId}>{opt.buildingName}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2}>Status</Label>\r\n            <Col sm={2} style={{marginLeft:\"-2%\"}}>\r\n              <Input\r\n                style={{ marginLeft: -20 }}\r\n                size='sm'\r\n                type='select'\r\n                value={data.status}\r\n                id='status'\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  {\" \"}\r\n                  Please select status\r\n                </option>\r\n                <option value='ALL'>ALL</option>\r\n                <option value='REJECTED'>REJECTED</option>\r\n                <option value='APPROVED'>APPROVED</option>\r\n              </Input>\r\n            </Col>\r\n\r\n            <div class='col ml-auto'>\r\n              <button\r\n                style={{ backgroundColor: \"#254a9e\", borderColor: \"#254a9e\" }}\r\n                type='button'\r\n                class='btn btn-primary btn-sm'\r\n                onClick={downloadPDF}>\r\n                <i class='fa fa-download' aria-hidden='true'></i> PDF\r\n              </button>{\" \"}\r\n              <button\r\n                style={{ backgroundColor: \"#254a9e\", borderColor: \"#254a9e\" }}\r\n                type='button'\r\n                class='btn btn-primary btn-sm'\r\n                onClick={ExcelSubmit}>\r\n                <i class='fa fa-download' aria-hidden='true'></i> EXCEL\r\n              </button>{\" \"}\r\n            </div>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n          <Label sm={2}>Budget Year</Label>\r\n        <Col sm={2} style={{marginLeft:\"-1%\"}}>\r\n          <Input\r\n            type='select'\r\n            size='sm'\r\n            id='budgetYear'\r\n            name='budgetYear'\r\n            value={data.budgetYear}\r\n            onChange={(e)=>handle(e)}>\r\n            <option selected disabled>\r\n              Select Budget year\r\n            </option>\r\n            {years.map((year) => (\r\n              <option value={year}>{year}</option>\r\n            ))}\r\n          </Input>\r\n        </Col>\r\n          </FormGroup>\r\n\r\n        </Form>\r\n        <CompletedRequestTable dataArray={compData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CompletedRequest;\r\n","const ReportsColumn = [\r\n  {\r\n    Header: \"Management Company\",\r\n    accessor: \"mcNameEn\",\r\n  },\r\n  {\r\n    Header: \"Supplier Name\",\r\n    accessor: \"supplierName\",\r\n  },\r\n  {\r\n    Header: \"Budget year\",\r\n    accessor: \"budgetYear\",\r\n  },\r\n\r\n  {\r\n    Header: \"Invoice year\",\r\n    accessor: \"invoiceYear\",\r\n  },\r\n\r\n  {\r\n    Header: \"Total budget\",\r\n    accessor: \"totalBudget\",\r\n  },\r\n\r\n  {\r\n    Header: \"Consumed Amount\",\r\n    accessor: \"consumedAmount\",\r\n  },\r\n  {\r\n    Header: \"Balance Amount\",\r\n    accessor: \"balanceAmount\",\r\n  },\r\n];\r\nexport default ReportsColumn;\r\n","import React, {\r\n    useEffect,\r\n    useMemo,\r\n    useState,\r\n  } from 'react';\r\n  \r\n  \r\n  import {\r\n    usePagination,\r\n    useTable,\r\n  } from 'react-table';\r\n  import {\r\n    Button,\r\n    Table,\r\n  } from 'reactstrap';\r\n  \r\n  import ReportsColumn  from './ReportsColumn';\r\n  \r\n  export const ReportsTable = (prop) => {\r\n  \r\n      const columns = useMemo(()=> ReportsColumn,[])\r\n    \r\n      const[data , setData] =  useState([]);\r\n   \r\n     \r\n      useEffect(()=>{\r\n          setData(prop.dataArray);\r\n          console.info('state data[] : '+JSON.stringify(data));\r\n        });\r\n       \r\n  \r\n      const {\r\n          getTableProps,\r\n          getTableBodyProps,\r\n          headerGroups,\r\n          page,\r\n          nextPage,\r\n          previousPage,\r\n          canNextPage,\r\n          canPreviousPage,\r\n          pageOptions,\r\n          state,\r\n          gotoPage,\r\n          pageCount,\r\n          setPageSize,\r\n          prepareRow\r\n      } = useTable({\r\n          columns,\r\n          data\r\n      },\r\n      usePagination)\r\n  \r\n      const {pageIndex, pageSize} = state\r\n      \r\n      return (\r\n          <>\r\n          {console.info('from child component[] : '+JSON.stringify(prop.dataArray))}\r\n          <Table size='sm' striped={true} style={{marginTop: 3}} {...getTableProps()}>\r\n              <thead style={{background:'#254a9e', color:'white'}}>\r\n                  {headerGroups.map((headerGroup) =>\r\n                  <tr {...headerGroup.getHeaderGroupProps()}>\r\n                      {headerGroup.headers.map((column) => (\r\n                      <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                      \r\n                      ))}\r\n                      </tr>\r\n                  )}               \r\n              \r\n              </thead>\r\n              <tbody {...getTableBodyProps()}>\r\n                  \r\n                  {page.map((row)=> {\r\n                      prepareRow(row)\r\n                      return (\r\n                      <tr {...row.getRowProps()}>\r\n                          {row.cells.map((cell) => {\r\n                              return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                  </tr>\r\n                  )\r\n              })}\r\n              </tbody>\r\n      \r\n          </Table>\r\n          <div className=\"text-center\">\r\n          <span>\r\n              page{' '}\r\n              <strong>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n              </strong>{' '}\r\n              </span>\r\n              <span>\r\n                   Go to page:{' '}\r\n                  <input\r\n                  type='number'\r\n                  defaultValue={pageIndex + 1}\r\n                  onChange={(e) => {\r\n                      const pageNumber = e.target.value ? Number(e.target.value)-1 : 0\r\n                      gotoPage(pageNumber)\r\n                  }}\r\n                  style={{width: '50px'}}\r\n                  />\r\n              </span>\r\n              <select\r\n              value={pageSize}\r\n              onChange={(e) => setPageSize(Number(e.target.value))}>\r\n                  {[10,25,50].map((pageSize)=> (\r\n                      <option key={pageSize} value={pageSize}>Show {pageSize}</option>\r\n                  ))}\r\n              </select>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> previousPage()} disabled={!canPreviousPage}>Previous</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> nextPage()} disabled={!canNextPage}>Next</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(pageCount-1)} disabled={!canNextPage}>{'>>'}</Button>\r\n          </div>\r\n          \r\n          </>\r\n      )\r\n  }\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { ReportsTable } from \"./ReportsTable\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nexport default function ReportsForm() {\r\n  const [reportData, setReportData] = useState([]);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const [data1, setData1] = useState([]);\r\n\r\n  const [data2, setData2] = useState([]);\r\n\r\n  const report = {\r\n    mgmtCompId: data.mgmtCompId,\r\n    supplierId: data.supplierId,\r\n    budgetYear: data.budgetYear,\r\n    invoiceYear: data.invoiceYear,\r\n    //budgetRangeFrom: data.budgetRangeFrom,\r\n    //budgetRangeTo: data.budgetRangeTo,\r\n  };\r\n\r\n  const loadReportData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.generateReports, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          if (data.length) {\r\n            setReportData(data);\r\n            console.info(\"report response << : \" + JSON.stringify(data));\r\n          } else {\r\n            alert(\"No Record Found\");\r\n            setReportData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!data.mgmtCompId) {\r\n      alert(\"Please select Management Company\");\r\n      return false;\r\n    } else {\r\n      loadReportData(report);\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const downloadPDFData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.reportsPDF, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.info(\"report response << : \" + data);\r\n\r\n          const downloadLink = document.createElement(\"a\");\r\n          const fileName = \"Report.pdf\";\r\n          const linkSource = `data:application/pdf;base64,${data}`;\r\n          downloadLink.href = linkSource;\r\n          downloadLink.download = fileName;\r\n          downloadLink.click();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const downloadPDF = (event) => {\r\n    downloadPDFData(report);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const ExcelData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.reportsExcel, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        console.log(\"report data response\" + data);\r\n        console.table(\"responseData>>>+++\" + JSON.stringify(data));\r\n\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = \"Report.xlsx\";\r\n        const linkSource = `data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,${data}`;\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n      });\r\n  };\r\n\r\n  const ExcelSubmit = (event) => {\r\n    ExcelData(report);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const fetchManagementComany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    console.log(\"company\" + company.data);\r\n    setData1(company.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchManagementComany();\r\n  }, []);\r\n\r\n  const fetchSupplier = async () => {\r\n    const supplier = await axios.get(properties.supplierList);\r\n    console.log(\"supplier\" + supplier.data);\r\n    setData2(supplier.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchSupplier();\r\n  }, []);\r\n\r\n  function handle(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='App' style={{ overflowX: \"hidden\" }}>\r\n        <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n          <FormGroup row>\r\n            <Label sm={2} className='required'>\r\n              Management Company\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='mgmtCompId'\r\n                value={data.mgmtCompId}\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a company\r\n                </option>\r\n                {data1.map((opt) => (\r\n                  <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2}>Budget Year</Label>\r\n            <Col sm={2} style={{ marginLeft: \"-7%\" }}>\r\n              <Input\r\n                type='number'\r\n                maxLength={4}\r\n                size='sm'\r\n                id='budgetYear'\r\n                value={data.budgetYear}\r\n                onChange={(e) => handle(e)}\r\n              />\r\n            </Col>\r\n\r\n            <Col >\r\n              <button\r\n                size='sm'\r\n                style={{\r\n                  backgroundColor: \"#254a9e\",\r\n                  borderColor: \"#254a9e\",\r\n                  fontSize: \"11px\",\r\n                }}\r\n                type='submit'\r\n                class='btn btn-primary'>\r\n                Generate Report\r\n              </button>\r\n            </Col>\r\n\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={2}>Supplier Name</Label>\r\n            <Col sm={2}>\r\n              <Input\r\n                size='sm'\r\n                type='select'\r\n                id='supplierId'\r\n                value={data.supplierId}\r\n                size='sm'\r\n                onChange={(e) => handle(e)}>\r\n                <option selected disabled>\r\n                  Please select a supplier\r\n                </option>\r\n                {data2.map((opt2) => (\r\n                  <option value={opt2.supplierId}>{opt2.supplierName}</option>\r\n                ))}\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2}>Invoice Year</Label>\r\n            <Col sm={2} style={{ marginLeft: \"-7%\" }}>\r\n              <Input\r\n                type='number'\r\n                maxLength={4}\r\n                size='sm'\r\n                id='invoiceYear'\r\n                value={data.invoiceYear}\r\n                onChange={(e) => handle(e)}\r\n              />\r\n            </Col>\r\n\r\n            <div class='col ml-auto' >\r\n              <button\r\n                style={{ backgroundColor: \"#254a9e\", borderColor: \"#254a9e\" }}\r\n                type='button'\r\n                class='btn btn-primary btn-sm'\r\n                onClick={downloadPDF}>\r\n                <i class='fa fa-download' aria-hidden='true'></i> PDF\r\n              </button>{\" \"}\r\n              <button\r\n                style={{ backgroundColor: \"#254a9e\", borderColor: \"#254a9e\" }}\r\n                type='button'\r\n                class='btn btn-primary btn-sm'\r\n                onClick={ExcelSubmit}>\r\n                <i class='fa fa-download' aria-hidden='true'></i> EXCEL\r\n              </button>{\" \"}\r\n            </div>\r\n\r\n          </FormGroup>\r\n          {/*<FormGroup>\r\n            <Col sm={2} style={{ marginLeft: \"60%\" }}>\r\n              <button\r\n                size='sm'\r\n                style={{\r\n                  backgroundColor: \"#254a9e\",\r\n                  borderColor: \"#254a9e\",\r\n                  fontSize: \"11px\",\r\n                  // marginLeft: \"10%\",\r\n                }}\r\n                type='submit'\r\n                class='btn btn-primary'>\r\n                Generate Report\r\n              </button>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <div style={{ marginTop: \"-3rem\" }}>\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                borderColor: \"#254a9e\",\r\n                marginLeft: \"75%\",\r\n              }}\r\n              type='button'\r\n              class='btn btn-primary btn-sm'\r\n              onClick={downloadPDF}>\r\n              <i class='fa fa-download' aria-hidden='true'></i> PDF\r\n            </button>{\" \"}\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                marginLeft: \"10px\",\r\n                borderColor: \"#254a9e\",\r\n              }}\r\n              type='button'\r\n              class='btn btn-primary btn-sm'\r\n              onClick={ExcelSubmit}>\r\n              <i class='fa fa-download' aria-hidden='true'></i> EXCEL\r\n            </button>{\" \"}\r\n          </div>*/}\r\n          {/* </FormGroup>\r\n           <FormGroup>\r\n          <Col sm={11}>\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                borderColor: \"#254a9e\",\r\n                fontSize: \"11px\",\r\n                marginLeft: \"65%\",\r\n              }}\r\n              type='submit'\r\n              class='btn btn-primary'>\r\n              Generate Report\r\n            </button>\r\n          </Col>\r\n           </FormGroup> \r\n          <div style={{ marginTop: \"-2rem\" }}>\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                marginLeft: \"80%\",\r\n                borderColor: \"#254a9e\",\r\n              }}\r\n              type='button'\r\n              class='btn btn-primary btn-sm'\r\n              onClick={downloadPDF}>\r\n              <i class='fa fa-download' aria-hidden='true'></i> PDF\r\n            </button>{\" \"}\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                marginLeft: \"10px\",\r\n                borderColor: \"#254a9e\",\r\n              }}\r\n              type='button'\r\n              class='btn btn-primary btn-sm'\r\n              onClick={ExcelSubmit}>\r\n              <i class='fa fa-download' aria-hidden='true'></i> EXCEL\r\n            </button>{\" \"}\r\n          </div> */}\r\n        </Form>\r\n\r\n        <ReportsTable dataArray={reportData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const TransactionalReportColumn = [\r\n  {\r\n    Header: \"Total Transaction\",\r\n    accessor: \"totalTransaction\",\r\n  },\r\n  {\r\n    Header: \"In-Progress\",\r\n    accessor: \"inProgress\",\r\n  },\r\n  {\r\n    Header: \"Exception\",\r\n    accessor: \"exception\",\r\n  },\r\n  {\r\n    Header: \"Approved\",\r\n    accessor: \"approved\",\r\n  },\r\n\r\n  {\r\n    Header: \"Rejected\",\r\n    accessor: \"rejected\",\r\n  },\r\n\r\n  {\r\n    Header: \"User Name\",\r\n    accessor: \"userName\",\r\n  },\r\n];\r\nexport default TransactionalReportColumn;\r\n","import React, {\r\n    useEffect,\r\n    useMemo,\r\n    useState,\r\n  } from 'react';\r\n  \r\n  \r\n  import {\r\n    usePagination,\r\n    useTable,\r\n  } from 'react-table';\r\n  import {\r\n    Button,\r\n    Table,\r\n  } from 'reactstrap';\r\n  \r\n  import TransactionalReportColumn  from './TransactionalReportColumn';\r\n  \r\n  export const TransactionalReportTable = (prop) => {\r\n  \r\n      const columns = useMemo(()=> TransactionalReportColumn,[])\r\n    \r\n      const[data , setData] =  useState([]);\r\n   \r\n     \r\n      useEffect(()=>{\r\n          setData(prop.dataArray);\r\n          console.info('state data[] : '+JSON.stringify(data));\r\n        });\r\n       \r\n  \r\n      const {\r\n          getTableProps,\r\n          getTableBodyProps,\r\n          headerGroups,\r\n          page,\r\n          nextPage,\r\n          previousPage,\r\n          canNextPage,\r\n          canPreviousPage,\r\n          pageOptions,\r\n          state,\r\n          gotoPage,\r\n          pageCount,\r\n          setPageSize,\r\n          prepareRow\r\n      } = useTable({\r\n          columns,\r\n          data\r\n      },\r\n      usePagination)\r\n  \r\n      const {pageIndex, pageSize} = state\r\n      \r\n      return (\r\n          <>\r\n          {console.info('from child component[] : '+JSON.stringify(prop.dataArray))}\r\n          <Table size='sm' striped={true} style={{marginTop: 3}} {...getTableProps()}>\r\n              <thead style={{background:'#254a9e', color:'white'}}>\r\n                  {headerGroups.map((headerGroup) =>\r\n                  <tr {...headerGroup.getHeaderGroupProps()}>\r\n                      {headerGroup.headers.map((column) => (\r\n                      <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                      \r\n                      ))}\r\n                      </tr>\r\n                  )}               \r\n              \r\n              </thead>\r\n              <tbody {...getTableBodyProps()}>\r\n                  \r\n                  {page.map((row)=> {\r\n                      prepareRow(row)\r\n                      return (\r\n                      <tr {...row.getRowProps()}>\r\n                          {row.cells.map((cell) => {\r\n                              return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                  </tr>\r\n                  )\r\n              })}\r\n              </tbody>\r\n      \r\n          </Table>\r\n          <div className=\"text-center\">\r\n          <span>\r\n              page{' '}\r\n              <strong>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n              </strong>{' '}\r\n              </span>\r\n              <span>\r\n                   Go to page:{' '}\r\n                  <input\r\n                  type='number'\r\n                  defaultValue={pageIndex + 1}\r\n                  onChange={(e) => {\r\n                      const pageNumber = e.target.value ? Number(e.target.value)-1 : 0\r\n                      gotoPage(pageNumber)\r\n                  }}\r\n                  style={{width: '50px'}}\r\n                  />\r\n              </span>\r\n              <select\r\n              value={pageSize}\r\n              onChange={(e) => setPageSize(Number(e.target.value))}>\r\n                  {[10,25,50].map((pageSize)=> (\r\n                      <option key={pageSize} value={pageSize}>Show {pageSize}</option>\r\n                  ))}\r\n              </select>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> previousPage()} disabled={!canPreviousPage}>Previous</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> nextPage()} disabled={!canNextPage}>Next</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(pageCount-1)} disabled={!canNextPage}>{'>>'}</Button>\r\n          </div>\r\n          \r\n          </>\r\n      )\r\n  }\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Col } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { TransactionalReportTable } from \"./TransactionalReportTable\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nfunction TransactionalReport() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [reportData, setReportData] = useState([]);\r\n\r\n  const report = {\r\n    transactionFrom: data.transactionFrom,\r\n    transactionTo: data.transactionTo,\r\n  };\r\n\r\n  const loadReportData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.generateTransactionalReports, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          if (data.length) {\r\n            setReportData(data);\r\n            console.info(\"report response << : \" + JSON.stringify(data));\r\n          } else {\r\n            alert(\"No Record Found\");\r\n            setReportData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!data.transactionFrom || !data.transactionTo) {\r\n      alert(\"Please select mandatory filed\");\r\n      return false;\r\n    } else {\r\n      loadReportData(report);\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const downloadPDFData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.transactionalPdf, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then(\r\n        (data) => {\r\n          console.info(\"report response << : \" + data);\r\n\r\n          const downloadLink = document.createElement(\"a\");\r\n          const fileName = \"TransactionalReport.pdf\";\r\n          const linkSource = `data:application/pdf;base64,${data}`;\r\n          downloadLink.href = linkSource;\r\n          downloadLink.download = fileName;\r\n          downloadLink.click();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const downloadPDF = (event) => {\r\n    downloadPDFData(report);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const ExcelData = (report) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.transactionalExcel, report, { headers: head })\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        console.log(\"report data response\" + data);\r\n        console.table(\"responseData>>>+++\" + JSON.stringify(data));\r\n\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = \"TransactionalExcel.xlsx\";\r\n        const linkSource = `data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,${data}`;\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n      });\r\n  };\r\n\r\n  const ExcelSubmit = (event) => {\r\n    ExcelData(report);\r\n    event.preventDefault();\r\n  };\r\n\r\n  function handle(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  return (\r\n    <div className='App' style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n        <FormGroup row>\r\n          <Label sm={2} style={{ marginRight: -60 }} className='required'>\r\n            Transaction From\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='date'\r\n              size='sm'\r\n              id='transactionFrom'\r\n              value={data.transactionFrom}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginRight: -70 }} className='required'>\r\n            Transaction To\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='date'\r\n              size='sm'\r\n              id='transactionTo'\r\n              value={data.transactionTo}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Col sm={2}>\r\n            <button\r\n              size='sm'\r\n              style={{\r\n                backgroundColor: \"#254a9e\",\r\n                borderColor: \"#254a9e\",\r\n                fontSize: \"11px\",\r\n                marginLeft: \"10%\",\r\n              }}\r\n              type='submit'\r\n              class='btn btn-primary'>\r\n              Generate Report\r\n            </button>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <div style={{ marginTop: \"-3.4rem\" }}>\r\n          <button\r\n            style={{\r\n              backgroundColor: \"#254a9e\",\r\n              borderColor: \"#254a9e\",\r\n              marginLeft: \"75%\",\r\n            }}\r\n            type='button'\r\n            class='btn btn-primary btn-sm'\r\n            onClick={downloadPDF}>\r\n            <i class='fa fa-download' aria-hidden='true'></i> PDF\r\n          </button>{\" \"}\r\n          <button\r\n            style={{\r\n              backgroundColor: \"#254a9e\",\r\n              marginLeft: \"10px\",\r\n              borderColor: \"#254a9e\",\r\n            }}\r\n            type='button'\r\n            class='btn btn-primary btn-sm'\r\n            onClick={ExcelSubmit}>\r\n            <i class='fa fa-download' aria-hidden='true'></i> EXCEL\r\n          </button>{\" \"}\r\n        </div>\r\n      </Form>\r\n\r\n      <TransactionalReportTable dataArray={reportData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionalReport;\r\n","import React from 'react';\r\n\r\nimport {\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n} from '@material-ui/core';\r\nimport ReportsForm from './ReportsForm';\r\nimport TransactionalReport from './TransactionalReport';\r\n\r\n\r\nconst ReportsTab = () => {\r\n    const [tbVal, setVal] = React.useState(0);\r\n\r\n    const moveTab = (e, val) => {\r\n        setVal(val)\r\n    }\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\" style={{marginTop:3 , backgroundColor:'#254a9e',maxHeight:'35px'}}>\r\n                <Tabs TabIndicatorProps={{style: {background:'white',marginBottom:'11px',}}} style={{height:'5px'}} value={tbVal} onChange={moveTab}>\r\n                    <Tab label=\"Budget Report\" style={{fontWeight:'bold',minWidth:\"2%\",fontSize:'13px',paddingTop:'0px' ,paddingBottom:'-40px',paddingLeft:'10px',paddingRight:'0px'}}/>\r\n                    <Tab label=\"Transactional Report\" style={{fontWeight:'bold',minWidth:\"2%\",fontSize:'13px' ,paddingTop:'0px' ,paddingBottom:'-40px',paddingLeft:'10px',paddingRight:'0px'}}/>\r\n                </Tabs>\r\n            </AppBar>\r\n            {tbVal=== 0 && <ReportsForm/>}\r\n            {tbVal=== 1 && <TransactionalReport/>}\r\n            \r\n        </>\r\n    );\r\n}\r\nexport default ReportsTab\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport MuiTableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// Icons\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  selectTableCell: {\r\n    width: 60,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40,\r\n  },\r\n  input: {\r\n    width: 140,\r\n    height: 40,\r\n  },\r\n  saveButton: {\r\n    \"&:hover\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n  cancleButton: {\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  editButton: {\r\n    \"&:hover\": {\r\n      color: \"#1888DD\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomTableCell = ({\r\n  row,\r\n  name,\r\n  disabled,\r\n  onChange,\r\n  calculateTotalAmount,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { isEditMode } = row;\r\n  return (\r\n    <TableCell align='left' className={classes.tableCell}>\r\n      {isEditMode ? (\r\n        <Input\r\n          value={row[name]}\r\n          name={name}\r\n          disabled={disabled}\r\n          onChange={(e) => onChange(e, row)}\r\n          onBlur={(e) => calculateTotalAmount(e, row)}\r\n          className={classes.input}\r\n        />\r\n      ) : (\r\n        row[name]\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nfunction BudgetDetailsTable() {\r\n  const [data, setData] = useState({\r\n    mgmtCompId: \"\",\r\n    buildingId: \"\",\r\n    budgetYear: \"\",\r\n  });\r\n  const [building, setBuilding] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n  let [tableData, setTableData] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n\r\n  const [previous, setPrevious] = React.useState({});\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    setBuilding(building.data);\r\n    // setBuilding([]);\r\n  };\r\n  const fetchCompany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    setCompany(company.data);\r\n  };\r\n  //get building name based on management comp\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    // console.log(data);\r\n    // console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n  const getYears = async () => {\r\n    var date = new Date();\r\n    let year = [];\r\n    for (var i = 2018; i <= date.getFullYear(); i++) {\r\n      year.push(i);\r\n    }\r\n    setYears(year.reverse());\r\n  };\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n    fetchCompany();\r\n    getYears();\r\n  }, []);\r\n\r\n  //handle input\r\n  let handleInput = (e) => {\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n  let getDetails = async (e) => {\r\n    e.preventDefault();\r\n    if (!data.mgmtCompId || !data.buildingId || !data.budgetYear) {\r\n      alert(\"Please select mandatory fields\");\r\n      return false;\r\n    }\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    tableData = await axios.post(properties.budgetDetails, data, {\r\n      headers: head,\r\n    });\r\n    if (tableData.data) {\r\n      setRows(tableData.data);\r\n      console.log(tableData.data);\r\n    }\r\n    if (tableData.data.length <= 0) {\r\n      alert(\"No Record found\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //table operations\r\n  const classes = useStyles();\r\n  const onToggleEditMode = (budgetItemId, mode) => {\r\n    setRows((state) => {\r\n      return rows.map((row) => {\r\n        if (row.budgetItemId === budgetItemId) {\r\n          if (mode == \"save\") {\r\n            // delete row[\"isEditMode\"];\r\n            console.log(\"updating budget details...\");\r\n            let head = {\r\n              token: ReactSession.get(\"token\"),\r\n              username: ReactSession.get(\"username\"),\r\n            };\r\n            axios\r\n              .put(properties.updateBudget, row, { headers: head })\r\n              .then((res) => alert(\"Budget Details data updated Successfully\"))\r\n              .catch((err) =>\r\n                alert(\r\n                  \"Failed to update Budget Details Please try after sometime\"\r\n                )\r\n              );\r\n          }\r\n          return { ...row, isEditMode: !row.isEditMode };\r\n        }\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.budgetItemId]) {\r\n      setPrevious((state) => ({ ...state, [row.budgetItemId]: row }));\r\n    }\r\n\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    const { budgetItemId } = row;\r\n    const newRows = rows.map((row) => {\r\n      if (row.budgetItemId === budgetItemId) {\r\n        return { ...row, [name]: value };\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n  };\r\n\r\n  const calculateTotalAmount = (e, row) => {\r\n    console.log(\"calculating total Amount....\");\r\n    const { budgetItemId } = row;\r\n\r\n    const newRows = rows.map((row) => {\r\n      if (row.budgetItemId === budgetItemId) {\r\n        row.balanceAmount = row.totalBudget - row.consumedAmount;\r\n        return row;\r\n      }\r\n      return row;\r\n    });\r\n\r\n    setRows(newRows);\r\n  };\r\n  const onRevert = (budgetItemId) => {\r\n    const newRows = rows.map((row) => {\r\n      if (row.budgetItemId === budgetItemId) {\r\n        return previous[budgetItemId] ? previous[budgetItemId] : row;\r\n      }\r\n      return row;\r\n    });\r\n    console.log(newRows);\r\n    setRows(newRows);\r\n    setPrevious((state) => {\r\n      delete state[budgetItemId];\r\n      return state;\r\n    });\r\n    onToggleEditMode(budgetItemId, \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form className='my-3 mt-5 ml-2' inline>\r\n        <FormGroup className='mb-2  mb-sm-0'>\r\n          <Label for='managementCompany' className='required'>\r\n            Management Company Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='mgmtCompId'\r\n              name='mgmtCompId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              //onChange={handleInput}\r\n              onChange={(e) => getBuildingNames(e)}>\r\n              <option selected disabled>\r\n                Select a Management company\r\n              </option>\r\n              {company.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup className='mb-2 mb-sm-0'>\r\n          <Label for='buildingName' className='required'>\r\n            Building Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='buildingId'\r\n              name='buildingId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              onChange={handleInput}>\r\n              <option selected disabled>\r\n                Select a building name\r\n              </option>\r\n              {building.map((opt2) => (\r\n                <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup className='mb-5 mb-sm-0'>\r\n          <Label for='budgetYear' className='required'>\r\n            Budget Year\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='budgetYear'\r\n              name='budgetYear'\r\n              onChange={handleInput}\r\n              style={{ width: \"11.5rem\" }}>\r\n              <option selected disabled>\r\n                Select Budget year\r\n              </option>\r\n              {years.map((year) => (\r\n                <option value={year}>{year}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <Button\r\n          style={{\r\n            background: \"#254a9e\",\r\n            color: \"white\",\r\n            // position: \"relative\",\r\n            // marginTop: \"1rem\",\r\n            marginLeft: \"0.2rem\",\r\n          }}\r\n          onClick={getDetails}>\r\n          Get Details\r\n        </Button>\r\n      </Form>\r\n      <p className='mb-lg-5' />\r\n\r\n      {/* Table */}\r\n      <Paper className={classes.root} style={{ marginTop: \"-13px\" }}>\r\n        <Table className={classes.table}>\r\n          <TableHead\r\n            style={{\r\n              backgroundColor: \"#254A9E\",\r\n            }}>\r\n            <TableRow>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Action\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Service Code\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Service Name\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Usage\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Period Code\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Amount\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                VAT\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Total Amount\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Consumed Amount\r\n              </TableCell>\r\n              <TableCell\r\n                align='left'\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  color: \"white\",\r\n                  fontWeight: \"500\",\r\n                }}>\r\n                Balance Amount\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.budgetItemId}>\r\n                <TableCell className={classes.selectTableCell}>\r\n                  {row.isEditMode ? (\r\n                    <>\r\n                      <Tooltip title='Save'>\r\n                        <IconButton\r\n                          aria-label='done'\r\n                          className={classes.saveButton}\r\n                          onClick={() =>\r\n                            onToggleEditMode(row.budgetItemId, \"save\")\r\n                          }>\r\n                          <DoneIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      {/* <Tooltip title='Cancel'>\r\n                        <IconButton\r\n                          aria-label='revert'\r\n                          className={classes.cancleButton}\r\n                          onClick={() => onRevert(row.budgetItemId)}>\r\n                          <RevertIcon />\r\n                        </IconButton>\r\n                      </Tooltip> */}\r\n                    </>\r\n                    ) : (\r\n                    <Tooltip title='Edit'>\r\n                      <IconButton\r\n                        aria-label='delete'\r\n                        className={classes.editButton}\r\n                        onClick={() =>\r\n                          onToggleEditMode(row.budgetItemId, \"edit\")\r\n                        }>\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  )}\r\n                </TableCell>\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"serviceCode\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"serviceNameEn\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"usageEn\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"budgetPeriodCode\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"totalCost\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"vatAmount\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"totalBudget\",\r\n                    disabled: \"disabled\",\r\n                    onChange,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"consumedAmount\",\r\n                    disabled: \"\",\r\n                    onChange,\r\n                    calculateTotalAmount,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    row,\r\n                    name: \"balanceAmount\",\r\n                    disabled: \"\",\r\n                    onChange,\r\n                    calculateTotalAmount,\r\n                  }}\r\n                />\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BudgetDetailsTable;\r\n","import React from \"react\";\r\nconst Popup =  props => {\r\n    return (\r\n        <div className=\"popup-box\" >\r\n            <div className=\"box\">\r\n                <button className=\"btn-close\" onClick={props.handleClose}>X</button>\r\n                {props.content}\r\n              \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Popup;\r\n\r\n","\r\n// import React, { useState } from \"react\";\r\nimport Popup from \"./Popup\";\r\nimport { Alert, Button, Col, Dropdown, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { properties } from \"./properties\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nexport const ReserveFundButtonAdvance = (props) => {\r\n    const [building, setBuilding] = useState([]);\r\n    const [company, setCompany] = useState([]);\r\n    const [responseData, setResponseData] = useState([]);\r\n    const [dropDownData, setDropDownData] = useState({\r\n        mgmtCompId: \"\",\r\n        buildingId: \"\",\r\n    });\r\n    const fetchBuilding = async (e) => {\r\n    //     e.preventDefault();\r\n    //     var name = e.target.name;\r\n    // var value = e.target.value;\r\n        // const building = await axios.get(properties.buildingNames);\r\n        const building = await axios.get(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n         setBuilding(building.data);\r\n        // setBuilding([]);\r\n      };\r\n      const fetchCompany = async () => {\r\n        const company = await axios.get(properties.managementCompanyList);\r\n        setCompany(company.data);\r\n        console.log(company.data);\r\n      };    \r\n      useEffect(() => {\r\n        fetchBuilding();\r\n        fetchCompany();\r\n      }, []);\r\n\r\n    let handleInput = (e) => {\r\n        var name = e.target.name;\r\n        var value = e.target.value;\r\n        // if(value != null ){\r\n        // }\r\n        console.log(\"name and value\",name,value);\r\n        setDropDownData({ ...dropDownData, [name]: value });\r\n        console.log(dropDownData);\r\n    };\r\n    let save = async (e) => {\r\n        e.preventDefault();\r\n        console.log(dropDownData);\r\n        \r\n        if(!dropDownData.buildingId && !dropDownData.mgmtCompId && !dropDownData.accountNumber && !dropDownData.branchCode\r\n            && !dropDownData.cifNumber && !dropDownData.reserveAccountNumber)\r\n            {\r\n                alert(\"Please fill all the mandatory fields\");\r\n                return false;\r\n            }\r\n        if(!dropDownData.accountNumber)\r\n        {\r\n            alert(\"Please enter account number\");\r\n            return false;\r\n        }\r\n         if(!dropDownData.cifNumber)\r\n        {\r\n            alert(\"Please enter cif  number\");\r\n            return false;\r\n        }\r\n        \r\n         if(!dropDownData.mgmtCompId)\r\n        {\r\n            alert(\"Please select managemnet company\");\r\n            return false;\r\n        }\r\n        if(!dropDownData.buildingId)\r\n        {\r\n            alert(\"Please select building name\");\r\n            return false;\r\n        }\r\n         if(!dropDownData.reserveAccountNumber)\r\n        {\r\n            alert(\"Please enter reserve account number\");\r\n            return false;\r\n        }\r\n         if(!dropDownData.branchCode)\r\n        {\r\n            alert(\"Please enter branch code\");\r\n            return false;\r\n        }\r\n        if(dropDownData.cifNumber.length!=9)\r\n        {\r\n            alert(\" CIF number must be 9 digit\");\r\n            return false;\r\n        }\r\n        if((!/^[0-9]+$/.test(dropDownData.cifNumber))){\r\n            alert(\"CIF number does not accept any characters, Kindly enter only numbers \")\r\n            return false;\r\n        }\r\n        if((!/^0\\d{8}$/.test(dropDownData.cifNumber)))\r\n        {\r\n            alert(\"CIF number must be starts with 0\");\r\n            return false;\r\n        }\r\n        if(dropDownData.accountNumber.length!=12  )\r\n        {\r\n            alert(\" Account number must be 12 digit\");\r\n            return false;\r\n        }\r\n        if((!/^[0-9]+$/.test(dropDownData.accountNumber))){\r\n            alert(\"Account number does not accept any characters, Kindly enter only numbers \")\r\n            return false;\r\n        }\r\n        if((!/^0\\d{11}$/.test(dropDownData.accountNumber)))\r\n        {\r\n            alert(\"Account number must be starts with 0\");\r\n            return false;\r\n        }\r\n        if(dropDownData.reserveAccountNumber.length!=12)\r\n        {\r\n            alert(\" Reserve account number must be 12 digit\");\r\n            return false;\r\n        }\r\n        if((!/^[0-9]+$/.test(dropDownData.reserveAccountNumber))){\r\n            alert(\"Reserve account number does not accept any characters, Kindly enter only numbers \")\r\n            return false;\r\n        }\r\n        if((!/^0\\d{11}$/.test(dropDownData.reserveAccountNumber)))\r\n        {\r\n            alert(\"Reserve account number must be starts with 0\");\r\n            return false;\r\n        }\r\n        if((!/^[0-9]+$/.test(dropDownData.branchCode))){\r\n            alert(\"Branch Code does not accept any characters, Kindly enter only numbers \")\r\n            return false;\r\n        }\r\n        if((!/^0\\d{2}$/.test(dropDownData.branchCode)))\r\n        {\r\n            alert(\"Branch code must be starts with 0\");\r\n            return false;\r\n        }\r\n         if(dropDownData.buildingId != null && dropDownData.mgmtCompId != null && dropDownData.accountNumber!=null && dropDownData.branchCode != null\r\n            && dropDownData.cifNumber !=null && dropDownData.reserveAccountNumber !=null)\r\n        {   \r\n            alert(\"Your data had saved successfully\");\r\n            setIsOpen(false);\r\n        }\r\n       else{\r\n        alert(\"Data has not save\");\r\n       }\r\n        const requestData = {\r\n            // method: 'POST',\r\n            // headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n            // title: 'mgmtCompId':202  'buildingId':104 ;\r\n            // reserve_Fund_Id:12, \r\n            \r\n            cif_Number: dropDownData.cifNumber,\r\n            mgmnt_Comp_Id: dropDownData.mgmtCompId,\r\n            building_Id: dropDownData.buildingId,\r\n            account_Number: dropDownData.accountNumber,\r\n            reserve_Account_Number: dropDownData.reserveAccountNumber,\r\n            is_Active: 'Y',\r\n            branch_Code: dropDownData.branchCode\r\n        };\r\n        //if(dropDownData.accountNumber.length==12 && dropDownData.reserveAccountNumber.length==12){\r\n\r\n        await axios.post(\r\n            // `${properties.dataURl}/dataSave`,\r\n            properties.saveReserveFundData,\r\n            requestData).then(response => setResponseData(response.data));\r\n        console.log(\">>>>>>>>>>.\", responseData);\r\n        // }\r\n        // else{\r\n        //     alert(\"Account Number and Reserve Account number must be 12 Digit\");\r\n        //     return false;\r\n        // }\r\n        //get API data\r\n        getFundDetails();\r\n        setIsOpen(false);\r\n    }   \r\n    let cancel = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    let getFundDetails = async () => {\r\n        const requestOptions = {\r\n            // method: 'POST',\r\n            // headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n            // title: 'mgmtCompId':202  'buildingId':104 ;\r\n           \r\n            mgmtCompId: dropDownData.mgmtCompId,\r\n            buildingId: dropDownData.buildingId\r\n        };\r\n        await axios.post(\r\n            `${properties.dataURl}/data`,\r\n            requestOptions).then(response => setResponseData(response.data));\r\n        console.log(\">>>>>>>>>>.\", responseData);\r\n    }\r\n    let getBuildingNames = async (e) => {\r\n        e.preventDefault();\r\n        var name = e.target.name;\r\n        var value = e.target.value;\r\n        setDropDownData({ ...dropDownData, [name]: value });\r\n        console.log(dropDownData);\r\n        console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n        const building = await axios.get(\r\n            `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n        );\r\n        console.log(\"Mapped building names :\" + building.data);\r\n        if (building.data) \r\n        setBuilding(building.data);\r\n        else setBuilding([]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        //getListDocumnetsFromServer();\r\n        fetchBuilding();\r\n        fetchCompany();\r\n      }, []);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const togglePopup = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    return (\r\n        <>\r\n            <Button style={{ background: \"#254a9e\", color: \"white\", float: \"right\" }} onClick={togglePopup}>ADD</Button>\r\n            {isOpen &&\r\n                <Popup\r\n                    handleClose={togglePopup}\r\n                    content={\r\n                        <Form className='my-1 ml-1'  >\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' for=\"accountNumber\" style={{marginLeft:\"15px\"} } >Account Number</Label>\r\n                                <Col>                               \r\n                                    <Input className='formInputs' type='text' id='accountNumber' name='accountNumber'  onChange={(e) => handleInput(e)}\r\n                                   style={{marginLeft:\"20%\"}} required > \r\n                                    {company.map((opt) => (\r\n                                        <option value={opt.reserveFundId}></option>\r\n                                    ))}\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' for=\"cifNumber\" style={{marginLeft:\"15px\"}}>CIF Number</Label>\r\n                                <Col>\r\n                                    <Input className='formInputs' type='text' id='cifNumber' name='cifNumber' style={{marginLeft:\"25%\"}} onChange={(e) => handleInput(e)}  />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' style={{marginLeft:\"17px\"}}>Management Company Name</Label>\r\n                                <Col>\r\n                                    <Input className='formInput' type='select'\r\n                                        id='mgmtCompId'\r\n                                        name='mgmtCompId'\r\n                                        // value={company.mgmtCompId}\r\n                                       // onChange={(e) => handleInput(e)}\r\n                                      \r\n                                        onChange={(e) => {\r\n                                            getBuildingNames(e);\r\n                                        }}\r\n                                        style={{ width: \"20rem\",marginLeft:\"1%\" }} >\r\n\r\n                                        <option selected disabled >\r\n                                            Please select a company\r\n                                        </option>\r\n                                        {/* <option value='201'>RDK OWNERS ASSOCIATION MANAGEMENT LLC</option>\r\n                                        <option value='202'>KAIZEN OWNER ASSOCIATION MANAGEMENT</option>\r\n                                        <option value='203'>Better Communities Owner Association</option>\r\n                                        <option value='204'>STRATUM OWNERS ASSOCIATION MANAGEMENT SERVICES LLC</option>\r\n                                         <option value='205'>SG Community Management Services LLC</option> */}\r\n                                        {company.map((opt) => (\r\n                                            <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' style={{marginLeft:\"15px\"}}>Building Name</Label>\r\n                                <Col >\r\n                                    <Input className='formInput'\r\n                                        type='select'\r\n                                        id='buildingId'\r\n                                        name='buildingId'\r\n                                        // value={dropDownData.mgmtCompId}\r\n                                        onChange={(e) => handleInput(e)}\r\n                                        style={{ width: \"20rem\",marginLeft:\"22.5%\" }}>\r\n\r\n                                        <option selected disabled>\r\n                                            Please select a building\r\n                                        </option>\r\n                                        {/* <option value='101'>TWO TOWERS</option>\r\n                                        <option value='102'>BINGHATTI GATEWAY</option>\r\n                                        <option value='103'>MILLENNIUM BINGHATTI RESIDENCES BUSINESS BAY</option>\r\n                                        <option value='104'>MILANO GIOVANNI BOUTIQUE SUITES</option>\r\n                                        <option value='105'>GIOVANNI BOUTIQUE SUITES</option>\r\n                                        <option value='106'>PALM VIEW</option>\r\n                                        <option value='107'>W Residences - The Palm</option> */}\r\n                                        {building.map((opt2) => (\r\n                                            <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' for=\"reserveAccountNumber\" style={{marginLeft:\"15px\"}}>Reserve Account Number</Label>\r\n                                <Col>\r\n                                    <Input className='formInputs' type='text' id='reserveAccountNumber' name='reserveAccountNumber' style={{marginLeft:\"10%\"}}onChange={(e) => handleInput(e)} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row className='my-2 ml--3' inline>\r\n                                <Label className='required' for=\"branchCode\" style={{marginLeft:\"15px\"}}>Branch Code</Label>\r\n                                <Col>\r\n                                    <Input className='formInputs' type='text' id='branchCode' name='branchCode' style={{marginLeft:\"25%\"}} onChange={(e) => handleInput(e)} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Col>\r\n                                    <Button\r\n                                        type=\"submit\" onClick={save} style={{ background: \"#254a9e\", color: \"white\", marginLeft: \"420px\" }} >\r\n                                        SAVE{\" \"}\r\n                                    </Button>\r\n                                    \r\n                                    <Button\r\n                                        onClick={cancel} style={{ background: \"#254a9e\", color: \"white\", marginLeft: \"10px\" }}>\r\n                                        CANCEL{\" \"}\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    }\r\n                />}\r\n        </>\r\n    )\r\n}\r\nexport default ReserveFundButtonAdvance;","\r\nimport {\r\n    Button\r\n  } from \"reactstrap\";\r\n  import {\r\n    usePagination,\r\n    useTable,\r\n  } from 'react-table';\r\n  import React, {\r\n    useEffect,\r\n    useMemo,\r\n    useState,\r\n  } from 'react';\r\n  import ReportsColumn  from './ReportsColumn';\r\nexport default function ReserveFundDetailsTableFooters()  {\r\n    const columns = useMemo(()=> ReportsColumn,[])\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n    const {\r\n       \r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        state,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize\r\n      \r\n    } = useTable({\r\n        columns,\r\n        data\r\n    },\r\n    usePagination)\r\n    \r\n    const {pageIndex, pageSize} = state\r\n\r\n\r\n  return (\r\n    <div className=\"text-center\" style={ { height: 50 } }  >\r\n          <span>\r\n              page{' '}\r\n              <strong>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n              </strong>{' '}\r\n              </span>\r\n              <span>\r\n                   Go to page:{' '}\r\n                  <input\r\n                  type='number'\r\n                  defaultValue={pageIndex + 1}\r\n                  onChange={(e) => {\r\n                      const pageNumber = e.target.value ? Number(e.target.value)-1 : 0\r\n                      gotoPage(pageNumber)\r\n                  }}\r\n                  style={{width: '50px' ,height:'100%'}}\r\n                  />\r\n              </span>\r\n              <select\r\n              value={pageSize}\r\n              onChange={(e) => setPageSize(Number(e.target.value))}>\r\n                  {[10,25,50].map((pageSize)=> (\r\n                      <option key={pageSize} value={pageSize}>Show {pageSize}</option>\r\n                  ))}\r\n              </select>\r\n              <Button style={{background:'#254a9e', color:'white'}} position='absolute' size=\"sm\" onClick={()=> gotoPage(0)} enabled={!canPreviousPage}>{'<<'}</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> previousPage()} enabled={!canPreviousPage}>Previous</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> nextPage()} enabled={!canNextPage}>Next</Button>\r\n              <Button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(pageCount-1)} enabled={!canNextPage}>{'>>'}</Button>\r\n              {/* <button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(0)} enabled={!canPreviousPage}>{'<<'}</button>\r\n              <button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> previousPage()} enabled={!canPreviousPage}>Previous</button>\r\n              <button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> nextPage()} enabled={!canNextPage}>Next</button>\r\n              <button style={{background:'#254a9e', color:'white'}} size=\"sm\" onClick={()=> gotoPage(pageCount-1)} enabled={!canNextPage}>{'>>'}</button> */}\r\n          </div>\r\n  )\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport MuiTableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\n// Icons\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nimport ReserveFundButtonAdvance from \"./ReserveFundButtonAdvance\";\r\nimport ReserveFundDetailsTableFooters from \"./ReserveFundDetailsTableFooters\";\r\nimport { TrainRounded } from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  selectTableCell: {\r\n    width: 60,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40,\r\n  },\r\n  input: {\r\n    width: 140,\r\n    height: 40,\r\n  },\r\n  saveButton: {\r\n    \"&:hover\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n  cancleButton: {\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  editButton: {\r\n    \"&:hover\": {\r\n      color: \"#1888DD\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomTableCell = ({\r\n  row,\r\n  name,\r\n  disabled = false,\r\n  enabled = false,\r\n  checkbox = false,\r\n\r\n  Checkbox = false,\r\n\r\n  onChange = false,\r\n\r\n  calculateTotalAmount = false,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  // const { isEditMode } = row;\r\n  const { isEditMode } = false;\r\n\r\n  return (\r\n    <TableCell align='left' className={classes.tableCell}>\r\n      {row[name]\r\n      }    </TableCell>\r\n  );\r\n};\r\n\r\n\r\nfunction ReserveFundDetails() {\r\n  // const ReserveFundDetailsTable = () =>\r\n\r\n  const [data, setData] = useState({\r\n    mgmtCompId: \"\",\r\n    buildingId: \"\",\r\n    // budgetYear: \"\",\r\n  });\r\n  const [building, setBuilding] = useState([]);\r\n  const [IsCustomTableCell, isActive] = useState(false);\r\n  const [responseData, setResponseData] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n  let [tableData, setTableData] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [showtable, setShowtable] = useState(false)\r\n\r\n  const [previous, setPrevious] = React.useState({});\r\n\r\n\r\n  const newRowData = [\r\n    { actions: \"\", cifNumber: \"19000055753\", mcNameEn: 'ACE OWNERS ASSOCIATION MANAGEMENT', buildingName: 'VICTORIA RESIDENCY', accountNumber: \"19000055753\", reserveAccountNumber: \"29000075366\", branchCode: '07', }\r\n  ];\r\n\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    setBuilding([]);\r\n\r\n    // const building = await axios.post(`${properties.dataURl}/dataUpdate`);\r\n    setBuilding(building.data);\r\n\r\n  };\r\n  // const [dropDownData, setDropDownData] = useState({\r\n  //   mgmtCompId: \"\",\r\n  //   buildingId: \"\",\r\n  // });\r\n  const fetchCompany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    //const company = await axios.post(`${properties.dataURl}/dataUpdate`);\r\n    setCompany(company.data);\r\n    console.log(company.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n    fetchCompany();\r\n    // getYears();\r\n  }, []);\r\n\r\n  //handle input\r\n  let handleInput = (e) => {\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n  };\r\n\r\n  // let search = async (e) => {\r\n  //   e.preventDefault();\r\n  //   if (!data.mgmtCompId) {\r\n  //     alert(\"Please select management company\");\r\n  //     return false;\r\n  //   }\r\n\r\n  //   //get API data\r\n  //   getFundDetails();\r\n  // }\r\n\r\n  let search = async (e) => {\r\n    e.preventDefault();\r\n    console.log(data);\r\n    if (!data.mgmtCompId) {\r\n      alert(\"Please select management company\");\r\n      return false;\r\n    }\r\n    //call api to get search result\r\n    console.log(data);\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .post(properties.fetchReserveFundData, data, { headers: head })\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          if (response.data) setTableData(response.data);\r\n          else {\r\n            setTableData([]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  // let getFundDetails = async () => {\r\n  //   const requestOptions = {\r\n  //     // method: 'POST',\r\n  //     // headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n  //     // title: 'mgmtCompId':202  'buildingId':104 ;\r\n  //     mgmtCompId: data.mgmtCompId,\r\n  //     buildingId: data.buildingId\r\n  //   };\r\n\r\n  //   let head = {\r\n  //     token: ReactSession.get(\"token\"),\r\n  //     username: ReactSession.get(\"username\"),\r\n  //   };\r\n  //   tableData = await axios.post(\r\n  //     // `${properties.dataURl}/data`,\r\n  //     properties.fetchReserveFundData,\r\n  //     requestOptions, {\r\n  //     headers: head,\r\n  //   });\r\n  //   if (tableData.data) {\r\n  //     setRows(tableData.data);\r\n  //     console.log(tableData.data);\r\n  //   }\r\n  //   if (tableData.data.length <= 0) {\r\n  //     alert(\"No Record found\");\r\n  //     return false;\r\n  //   }\r\n  // };\r\n\r\n  //get building name based on management comp\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n\r\n  //table operations\r\n  const classes = useStyles();\r\n  const onToggleEditMode = (reserveFundId, mode, cifNumber, accountNumber, reserveAccountNumber) => {\r\n    setRows((state) => {\r\n      return rows.map((row) => {\r\n        if (row.reserveFundId === reserveFundId) {\r\n         \r\n          if (mode == \"save\") {\r\n            // delete row[\"isEditMode\"];\r\n            console.log(\"updating reserve fund details details...\");\r\n\r\n            let head = {\r\n              token: ReactSession.get(\"token\"),\r\n              username: ReactSession.get(\"username\"),\r\n\r\n            };\r\n            if (row.accountNumber.length == 11 && row.reserveAccountNumber.length == 11) {\r\n              console.log(row);\r\n              axios\r\n                // .post(`${properties.dataURl}/dataUpdate`, row, { headers: head })\r\n                .post(properties.reserveFundUpdateDetail, row, { headers: head })\r\n                .then((res) => alert(\"Reserve Fund Details Data Updated Successfully\"))\r\n                .catch((err) =>\r\n                  alert(\r\n                    \"Failed to update Reserve Fund Details Table, Please try after sometime\"\r\n                  )\r\n                );\r\n             }\r\n            else {\r\n              alert(\"Failed: For update, Account Number and Reserve Account Number must be 11 digit\");\r\n            }\r\n            return { ...row, isEditMode: !row.isEditMode };\r\n          }\r\n        }\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.reserveFundId]) {\r\n      setPrevious((state) => ({ ...state, [row.reserveFundId]: row }));\r\n    }\r\n\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    const { reserveFundId } = row;\r\n    const newRows = rows.map((row) => {\r\n      if (row.reserveFundId === reserveFundId) {\r\n        return { ...row, [name]: value };\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n  };\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const onRevert = (reserveFundId) => {\r\n    const newRows = rows.map((row) => {\r\n      if (row.reserveFundId === reserveFundId) {\r\n        return previous[reserveFundId] ? previous[reserveFundId] : row;\r\n      }\r\n      return row;\r\n    });\r\n    console.log(newRows);\r\n    setRows(newRows);\r\n    setPrevious((state) => {\r\n      delete state[reserveFundId];\r\n      return state;\r\n    });\r\n    onToggleEditMode(reserveFundId, \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form className='my-3 ml-5' inline>\r\n        <FormGroup row>\r\n          <Label for='managementCompany' className='required'>\r\n            Management Company Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='mgmtCompId'\r\n              name='mgmtCompId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              // onChange={(e) => handleInput(e)}\r\n              // onChange={handleInput}\r\n              onChange={(e) => getBuildingNames(e)}\r\n              \r\n              >\r\n              <option selected disabled>\r\n                Select a Management company\r\n              </option>\r\n              {/* <option value='201'>RDK OWNERS ASSOCIATION MANAGEMENT LLC</option>\r\n              <option value='202'>KAIZEN OWNER ASSOCIATION MANAGEMENT</option>\r\n              <option value='203'>Better Communities Owner Association</option>\r\n              <option value='204'>STRATUM OWNERS ASSOCIATION MANAGEMENT SERVICES LLC</option>\r\n              <option value='205'>SG Community Management Services LLC</option> */}\r\n              {company.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row className='my-3 ml-5' inline>\r\n          <Label for='buildingName'>\r\n            Building Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='buildingId'\r\n              name='buildingId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              onChange={handleInput}\r\n              \r\n              >\r\n              <option selected disabled>\r\n                Select a building name\r\n              </option>\r\n              {/* <option value='101'>TWO TOWERS</option>\r\n              <option value='102'>BINGHATTI GATEWAY</option>\r\n              <option value='103'>MILLENNIUM BINGHATTI RESIDENCES BUSINESS BAY</option>\r\n              <option value='104'>MILANO GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='105'>GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='106'>PALM VIEW</option>\r\n              <option value='107'>W Residences - The Palm</option> */}\r\n              {building.map((opt2) => (\r\n                <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n        <Button\r\n          style={{\r\n            background: \"#254a9e\",\r\n            color: \"white\",\r\n            // position: \"relative\",\r\n            // marginTop: \"1rem\",\r\n            marginLeft: \"0.6rem\",\r\n            marginRight: \"1rem\",\r\n          }}\r\n          // onClick={search}\r\n          onClick={()=>{setShowtable(true)}}\r\n          >\r\n          Search\r\n        </Button>\r\n        <ReserveFundButtonAdvance />\r\n      </Form>\r\n\r\n      <p className='mb-lg-5' />\r\n\r\n      {/* Table */}\r\n      <Form>\r\n        <Paper className={classes.root} style={{ marginTop: \"-13px\" }}>\r\n          <Table className={classes.table}>\r\n            <TableHead style={{ backgroundColor: \"#254A9E\", minWidth: \"20%\" }}>\r\n              <TableRow>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    fontWeight: \"500\",\r\n\r\n                  }}>\r\n                  Action\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n\r\n                  }}>\r\n                  CIF Number\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n\r\n                  }}>\r\n                  Management Company Name\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Building Name\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Account Number\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Reserved Account Number\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Branch Code\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Reserve Fund %\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Last calculated on\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {console.log(\"Row__\", rows)}\r\n              {showtable && newRowData.map((row, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell className={classes.selectTableCell}><Tooltip title='Edit'>\r\n                    <IconButton\r\n                      aria-label='delete'\r\n                      className={classes.editButton}\r\n                    >\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </Tooltip></TableCell>\r\n                  <TableCell >{row.cifNumber}</TableCell>\r\n                  <TableCell >{row.mcNameEn}</TableCell>\r\n                  <TableCell >{row.buildingName}</TableCell>\r\n                  <TableCell >{row.accountNumber}</TableCell>\r\n                  <TableCell >{row.reserveAccountNumber}</TableCell>\r\n                  <TableCell >{row.branchCode}</TableCell>\r\n                \r\n\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </Form>\r\n      <ReserveFundDetailsTableFooters />\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default ReserveFundDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport MuiTableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// Icons\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nimport ReserveFundButtonAdvance from \"./ReserveFundButtonAdvance\";\r\nimport ReserveFundDetailsTableFooters from \"./ReserveFundDetailsTableFooters\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  selectTableCell: {\r\n    width: 60,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40,\r\n  },\r\n  input: {\r\n    width: 140,\r\n    height: 40,\r\n  },\r\n  saveButton: {\r\n    \"&:hover\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n  cancleButton: {\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  editButton: {\r\n    \"&:hover\": {\r\n      color: \"#1888DD\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomTableCell = ({\r\n  row,\r\n  name,\r\n  disabled,\r\n  enabled,\r\n  onChange,\r\n  calculateTotalAmount,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const { isEditMode } = row;\r\n\r\n  return (\r\n    <TableCell align='left' className={classes.tableCell}>\r\n      {isEditMode ? (\r\n        <Input\r\n          value={row[name]}\r\n          name={name}\r\n          disabled={disabled}\r\n          enabled={enabled}\r\n\r\n          // type={Checkbox}\r\n          onChange={(e) => onChange(e, row)}\r\n          //  onBlur={(e) => calculateTotalAmount(e, row)}\r\n          className={classes.input}\r\n        />\r\n      ) : (\r\n        row[name]\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\n\r\nfunction ReserveFundDetailsCopy() {\r\n  const [data, setData] = useState({\r\n    mgmtCompId: \"\",\r\n    buildingId: \"\",\r\n    // budgetYear: \"\",\r\n  });\r\n  const [building, setBuilding] = useState([]);\r\n  const [IsCustomTableCell, isActive] = useState(false);\r\n  const [responseData, setResponseData] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n  let [tableData, setTableData] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n\r\n  const [previous, setPrevious] = React.useState({});\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    setBuilding(building.data);\r\n\r\n  };\r\n\r\n  const fetchCompany = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    setCompany(company.data);\r\n    console.log(company.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n    fetchCompany();\r\n    // getYears();\r\n  }, []);\r\n\r\n  //handle input\r\n  let handleInput = (e) => {\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n  };\r\n\r\n\r\n  let search = async (e) => {\r\n    e.preventDefault();\r\n    if (!data.mgmtCompId || !data.buildingId) {\r\n      alert(\"Please select mandatory fields\");\r\n      return false;\r\n    }\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    tableData = await axios.post(\r\n      `${properties.dataURl}/data`, data,\r\n      {\r\n        headers: head,\r\n      });\r\n    if (tableData.data) {\r\n      setRows(tableData.data);\r\n      console.log(tableData.data);\r\n    }\r\n    if (tableData.data.length <= 0) {\r\n      alert(\"No Record found\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //get building name based on management comp\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    console.log(data);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data)\r\n      setBuilding(building.data)\r\n    else setBuilding([])\r\n  };\r\n  \r\n  //table operations\r\n  const classes = useStyles();\r\n  const onToggleEditMode = (reserveFundId, mode, cifNumber, accountNumber, reserveAccountNumber, branchCode) => {\r\n    setRows((state) => {\r\n      return rows.map((row) => {\r\n        \r\n        if (row.reserveFundId === reserveFundId) {\r\n          if (mode == \"save\") {\r\n            // delete row[\"isEditMode\"];\r\n            console.log(\"updating reserve fund details details...\");\r\n        //     if(row.accountNumber.length!=12  )\r\n        //   {\r\n        //       alert(\" Account number must be 12 digit\");\r\n            \r\n        //   }\r\n        //   if((!/^[0-9]+$/.test(row.accountNumber))){\r\n        //     alert(\"Account number does not accept any characters, Kindly enter only numbers \")\r\n            \r\n        // }\r\n        //     if(row.reserveAccountNumber.length!=12)\r\n        //   {\r\n        //       alert(\" Reserve account number must be 12 digit\");\r\n             \r\n        //   }\r\n        //   if((!/^[0-9]+$/.test(row.reserveAccountNumber))){\r\n        //     alert(\"Reserve account number does not accept any characters, Kindly enter only numbers \")\r\n          \r\n        // }\r\n            let head = {\r\n              token: ReactSession.get(\"token\"),\r\n              username: ReactSession.get(\"username\"),\r\n            };\r\n        \r\n           if(row.accountNumber.length===12 && row.reserveAccountNumber.length ===12 )\r\n            {\r\n            axios\r\n            .post(`${properties.dataURl}/dataUpdate`, row, { headers: head })\r\n            //.post(properties.reserveFundUpdateDetail, row, { headers: head })\r\n            .then((res) => alert(\"Reserve Fund Details Data Updated Successfully\"))\r\n            .catch((err) =>\r\n              alert(\r\n                \"Failed to update Reserve Fund Details Table, Please try after sometime\"\r\n              )\r\n            );\r\n           }\r\n           else{\r\n             alert(\"Account Number / Reserve Account Number should be 12 digit\");\r\n             return row;\r\n           }\r\n           \r\n            // return { ...row, isEditMode: !row.isEditMode };\r\n          }\r\n          return { ...row, isEditMode: !row.isEditMode };\r\n        }\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.reserveFundId]) {\r\n      setPrevious((state) => ({ ...state, [row.reserveFundId]: row }));\r\n    }\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    const { reserveFundId } = row;\r\n    const newRows = rows.map((row) => {\r\n      if (row.reserveFundId === reserveFundId) {\r\n        return { ...row, [name]: value };\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n  };\r\n  // const [checked, setChecked] = React.useState(false);\r\n\r\n  const onRevert = (reserveFundId) => {\r\n    const newRows = rows.map((row) => {\r\n      if (row.reserveFundId === reserveFundId) {\r\n          return previous[reserveFundId] ? previous[reserveFundId] : row;\r\n      }\r\n     return row;\r\n    });\r\n    console.log(newRows);\r\n    setRows(newRows);\r\n    setPrevious((state) => {\r\n      delete state[reserveFundId];\r\n      return state;\r\n    });\r\n    onToggleEditMode(reserveFundId, \"\");\r\n    \r\n  };\r\n \r\n  return (\r\n    <>\r\n      <Form className='my-3 ml-5' inline>\r\n        <FormGroup row>\r\n          <Label for='managementCompany' className='required'>\r\n            Management Company Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='mgmtCompId'\r\n              name='mgmtCompId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              //  onChange={(e) => handleInput(e)}\r\n              // onChange={handleInput}\r\n              onChange={(e) => { getBuildingNames(e) }}>\r\n              <option selected disabled>\r\n                Select a Management company\r\n              </option>\r\n              {/* <option value='201'>RDK OWNERS ASSOCIATION MANAGEMENT LLC</option>\r\n               <option value='202'>KAIZEN OWNER ASSOCIATION MANAGEMENT</option>\r\n                <option value='203'>Better Communities Owner Association</option>\r\n                <option value='204'>STRATUM OWNERS ASSOCIATION MANAGEMENT SERVICES LLC</option> \r\n                <option value='205'>SG Community Management Services LLC</option> */}\r\n              {company.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row className='my-3 ml-5' inline>\r\n          <Label for='buildingName'>\r\n            Building Name\r\n          </Label>\r\n          <Col>\r\n            <Input\r\n              type='select'\r\n              id='buildingId'\r\n              name='buildingId'\r\n              //   value={}\r\n              style={{ width: \"15rem\" }}\r\n              onChange={handleInput}>\r\n              <option selected disabled>\r\n                Select a building name\r\n              </option>\r\n              {/* <option value='101'>TWO TOWERS</option>\r\n              <option value='102'>BINGHATTI GATEWAY</option>\r\n              <option value='103'>MILLENNIUM BINGHATTI RESIDENCES BUSINESS BAY</option>\r\n              <option value='104'>MILANO GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='105'>GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='106'>PALM VIEW</option>\r\n              <option value='107'>W Residences - The Palm</option> */}\r\n              {building.map((opt2) => (\r\n                <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n        <Button\r\n          style={{\r\n            background: \"#254a9e\",\r\n            color: \"white\",\r\n            // position: \"relative\",\r\n            // marginTop: \"1rem\",\r\n            marginLeft: \"0.6rem\",\r\n            marginRight: \"1rem\",\r\n          }}\r\n          onClick={search}>\r\n          Search\r\n        </Button>\r\n        <ReserveFundButtonAdvance />\r\n      </Form>\r\n\r\n      <p className='mb-lg-5' />\r\n\r\n      {/* Table */}\r\n      <Form>\r\n        <Paper className={classes.root} style={{ marginTop: \"-13px\" }}>\r\n          <Table className={classes.table}>\r\n            <TableHead style={{ backgroundColor: \"#254A9E\", minWidth: \"20%\" }}>\r\n              <TableRow>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    fontWeight: \"500\",\r\n                  }}>\r\n                  Action\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n\r\n                  }}>\r\n                  CIF Number\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n\r\n                  }}>\r\n                  Management Company Name\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Building Name\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Account Number\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Reserved Account Number\r\n                </TableCell>\r\n                {/* <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Is Active\r\n                </TableCell> */}\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Branch Code\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Reserve Fund %\r\n                </TableCell>\r\n                <TableCell\r\n                  align='left'\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    color: \"white\",\r\n                    // fontWeight: \"500\",\r\n                    fontWeight: \"bold\",\r\n                  }}>\r\n                  Last Calculated On\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.reserveFundId}>\r\n                  <TableCell className={classes.selectTableCell}>\r\n                    {row.isEditMode ? (\r\n                      <>\r\n                        <Tooltip title='Save'>\r\n                          <IconButton\r\n                            aria-label='done'\r\n                            className={classes.saveButton}\r\n                            onClick={() =>\r\n                              onToggleEditMode(row.reserveFundId, \"save\")\r\n                              \r\n                            }>\r\n                            <DoneIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title='Cancel'>\r\n                          <IconButton\r\n                            aria-label='revert'\r\n                            className={classes.cancleButton}\r\n                            onClick={ (()=> onRevert(row.reserveFundId),search) }//passing two argument inside one onClick\r\n                            // onClick={search} \r\n                           \r\n                          >\r\n                            <RevertIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </>\r\n                    ) : (\r\n                      <Tooltip title='Edit'>\r\n                        <IconButton\r\n                          aria-label='delete'\r\n                          className={classes.editButton}\r\n                          onClick={() =>\r\n                            onToggleEditMode(row.reserveFundId, \"edit\")\r\n                          }>\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    )}\r\n                  </TableCell>\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"cifNumber\",\r\n                      disabled: \"disabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"mcNameEn\",\r\n                      disabled: \"disabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"buildingName\",\r\n                      disabled: \"disabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"accountNumber\",\r\n                      enabled: \"enabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"reserveAccountNumber\",\r\n                      enabled: \"enabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  {/* <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: 'isActive',\r\n                      disabled: \"disabled\",\r\n                      onChange,\r\n                    }}\r\n                  /> */}\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: \"branchCode\",\r\n                      enabled: \"enabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                  <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: 'reserveFundPercentage',\r\n                      disabled: \"disabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                    <CustomTableCell\r\n                    {...{\r\n                      row,\r\n                      name: 'lastCalculatedOn',\r\n                      disabled: \"disabled\",\r\n                      // enabled: \"enabled\",\r\n                      onChange,\r\n                    }}\r\n                  />\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </Form>\r\n      <ReserveFundDetailsTableFooters />\r\n    </>\r\n  );\r\n}\r\nexport default ReserveFundDetailsCopy;\r\n","import { useState } from \"react\";\r\n\r\nimport { AppBar, Tab, Tabs } from \"@material-ui/core\";\r\n\r\nimport PaymentTabs from \"./PaymentTabs\";\r\nimport Search from \"./TransactionSearchCriteria\";\r\nimport PaymentRequestFields from \"./PaymentRequestFields\";\r\nimport CompletedRequest from \"./CompletedRequest\";\r\nimport ReportsTab from \"./ReportsTab\";\r\nimport BudgetDetailsTable from \"./BudgetDetailsTable\";\r\nimport ReserveFundDetails from \"./ReserveFundDetails\";\r\nimport ReserveFundDetailsCopy from \"./ReserveFundDetailsCopy\";\r\n\r\n\r\n\r\nconst AppTabs = () => {\r\n  console.log(\"loading AppTabs\");\r\n  const [tbVal, setVal] = useState(0);\r\n\r\n  const moveTab = (e, val) => {\r\n    setVal(val);\r\n  };\r\n  return (\r\n    <div>\r\n      <AppBar\r\n        // /* color=\"default\" */ \r\n        variant='elevation'\r\n        //  position='sticky'\r\n         position='static'\r\n        style={{\r\n          marginTop: -10,\r\n            backgroundColor: \"#254a9e\" /* backgroundImage:'blue' */,\r\n          maxHeight: \"35px\",\r\n        }}>\r\n        <Tabs\r\n          TabIndicatorProps={{\r\n            style: { background: \"#25befa\", marginBottom: \"12px\" },\r\n          }}\r\n          value={tbVal}\r\n          onChange={moveTab}>\r\n          <Tab\r\n            label='Payment Request'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label='Exception Queue'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label='Completed Request'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label='Search'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label='Budget Details'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label='Reports'\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              minWidth: \"2%\",\r\n              fontSize: \"13px\",\r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"2px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              marginTop: \"-3px\",\r\n            }}\r\n          />\r\n          \r\n         <Tab\r\n          label='RESERVE FUND DETAILS'\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            minWidth: \"2%\",\r\n            fontSize: \"13px\",\r\n            paddingTop: \"0px\",\r\n            paddingBottom: \"2px\",\r\n            paddingLeft: \"10px\",\r\n            paddingRight: \"0px\",\r\n            marginTop: \"-3px\",\r\n          }}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {tbVal === 0 && <PaymentRequestFields />}\r\n      {tbVal === 1 && <PaymentTabs />}\r\n      {tbVal === 2 && <CompletedRequest />}\r\n      {tbVal === 3 && <Search />}\r\n      {tbVal === 4 && <BudgetDetailsTable />}\r\n      {tbVal === 5 && <ReportsTab />}\r\n      {tbVal === 6 && <ReserveFundDetailsCopy/>}\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppTabs;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { Route, useParams } from \"react-router\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nconst DocumentPath = () => {\r\n  const [formData, setState] = useState({\r\n    documentPath: \"\",\r\n  });\r\n\r\n  console.log(useParams());\r\n  let { id } = useParams();\r\n\r\n  const getPath = () => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios.get(`${properties.getPath}/${id}`, { headers: head }).then(\r\n      (response) => {\r\n        console.log(\"loading....\");\r\n        setState({\r\n          ...formData,\r\n          documentPath: response.data.documentPath,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    getPath();\r\n  }, []);\r\n  var started = false;\r\n\r\n  window.open(formData.documentPath, \"_self\");\r\n\r\n  return (\r\n    <div>\r\n      <switch>\r\n        <Route path='/documentpath/:id' children={<Child />} />\r\n      </switch>\r\n    </div>\r\n  );\r\n};\r\nfunction Child() {\r\n  let { id } = useParams();\r\n  return <div></div>;\r\n}\r\n\r\nexport default DocumentPath;\r\n","import './mydiv.css';\r\n\r\nimport React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n<div id=\"footeroly\" style={{\r\n    \r\n    height: \"30px\",\r\n    position:\"fixed\",\r\n    \r\n    bottom: \"0px\",\r\n    width: \"100%\"\r\n    }}>\r\n            <p>&#169;2021 company</p>\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/logo.9b13259e.png\";","import \"./mydiv.css\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport logo from \"./logo.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Button, CardBody } from \"reactstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nimport { ContactlessTwoTone } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  const [isLogged, setLogged] = useState(false);\r\n  const userName = useSelector((state) => state.userStore.username);\r\n  let user = ReactSession.get(\"username\");\r\n  const PROTOCOL = window.location.protocol;\r\n  const DOMAIN = window.location.host;\r\n  const PATH = window.location.pathname;\r\n  if (!isLogged)\r\n    if (ReactSession.get(\"token\")) {\r\n      setLogged(true);\r\n    } else {\r\n      console.log(\"please login first to access this application\");\r\n    }\r\n\r\n  let logout = (e) => {\r\n    e.preventDefault();\r\n    ReactSession.remove(\"token\", \"\");\r\n    ReactSession.remove(\"username\", \"\");\r\n    var url = `${PROTOCOL}//${DOMAIN}${PATH}`;\r\n    console.log(url);\r\n    window.location = url;\r\n    // history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <CardBody style={{ minHeight: \"1vh\", display: \"flex\", padding: \"0px\" }}>\r\n        {isLogged && (\r\n          <text\r\n            style={{\r\n              position: \"absolute\",\r\n              marginTop: \"3.5rem\",\r\n              fontSize: \"20px\",\r\n              marginLeft: \"75%\",\r\n              color: \"#0000EE\",\r\n            }}>\r\n            {user}\r\n          </text>\r\n        )}\r\n        <img\r\n          style={{\r\n            position: \"relative\",\r\n            marginLeft: \"2%\",\r\n            height: \"10vh\",\r\n            top: \"1vh\",\r\n            padding: \"none\",\r\n          }}\r\n          src={logo}\r\n          alt='img'\r\n        />\r\n        <h3\r\n          style={{\r\n            color: \"red\",\r\n            marginLeft: \"35vh\",\r\n            position: \"relative\",\r\n            top: \"5vh\",\r\n          }}>\r\n          Owner's Association\r\n        </h3>\r\n        {isLogged && (\r\n          <Button\r\n            size='sm'\r\n            style={{\r\n              background: \"#254a9e\",\r\n              width: \"100px\",\r\n              height: \"40px\",\r\n              fontSize: \"20px\",\r\n              marginLeft: \"27rem\",\r\n              marginTop: \"3rem\",\r\n            }}\r\n            onClick={logout}>\r\n            Logout\r\n          </Button>\r\n        )}\r\n        {/* {login ? (\r\n          \"\"\r\n        ) : (\r\n          <div\r\n            className=''\r\n            style={{\r\n              paddingLeft: \"500px\",\r\n              paddingTop: \"25px\",\r\n            }}>\r\n            <Tooltip title='Logout'>\r\n              <IconButton color='secondary' aria-label='add an alarm'>\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        )} */}\r\n      </CardBody>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useMemo, useState, useEffect } from \"react\";\r\n \r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport PaymentRequestFields from \"./PaymentRequestFields\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUser } from \"../action\";\r\n \r\n\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nimport { properties } from \"./properties\";\r\n// import { addUser } from \"../store/userStore\";\r\n \r\n\r\nfunction Login(props) {\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const PROTOCOL = window.location.protocol;\r\n  const DOMAIN = window.location.host;\r\n  const PATH = window.location.pathname;\r\n  const history = useHistory();\r\n  ReactSession.remove(\"username\", \"\");\r\n  ReactSession.remove(\"token\", \"\");\r\n  const dispatch = useDispatch();\r\n  let handleUsername = (event) => {\r\n    setUsername(event.target.value.replace(/[^\\w\\s]/gi, \"\"));\r\n  };\r\n  let handlePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n \r\n\r\n  let handleSubmit = async (event) => {\r\n    // event.preventDefault();\r\n \r\n\r\n    // if (\r\n    //   (userName == process.env.REACT_APP_USERNAME1 &&\r\n    //     password == process.env.REACT_APP_PASSWORD) ||\r\n    //   (userName == process.env.REACT_APP_USERNAME2 &&\r\n    //     password == process.env.REACT_APP_PASSWORD)\r\n    // ) {\r\n    //   dispatch(addUser(userName));\r\n    //   ReactSession.set(\"username\", userName);\r\n    //   history.push(\"/tabs/\");\r\n    // } else {\r\n    //   alert(\"Bad Credentials!\");\r\n    // }\r\n    // event.preventDefault();\r\n \r\n\r\n    event.preventDefault();\r\n    if (userName && password) {\r\n      let user = {\r\n        username: userName,\r\n        password: password,\r\n      };\r\n      ReactSession.set(\"username\", userName);\r\n      try {\r\n        let response = await axios.post(properties.loginURL, user);\r\n        console.log(response);\r\n        if (response) {\r\n          if (!\"200\".localeCompare(response.data.status)) {\r\n            console.log(\"valid user\");\r\n            ReactSession.set(\"token\", response.data.message);\r\n            ReactSession.set(\"username\", userName);\r\n            console.log(\"redirecting to tabs\");\r\n            // history.push(\"/tabs\");\r\n            var url = `${PROTOCOL}//${DOMAIN}${PATH}tabs`;\r\n            console.log(\"redirecting to \" + url);\r\n            window.location = url;\r\n            return false;\r\n          } else if (!\"403\".localeCompare(response.data.status)) {\r\n            console.log(\"Invalid user\");\r\n            alert(response.data.message);\r\n          } else if (!\"401\".localeCompare(response.data.status)) {\r\n            console.log(\"unauthorized user\");\r\n            alert(response.data.message);\r\n          } else {\r\n            alert(\"Server is not responding, please try after sometime.\");\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log(\"Error :: \" + e);\r\n        alert(\"Server is not responding, please try after sometime.\");\r\n        return false;\r\n      }\r\n    } else {\r\n      alert(\"Please enter all mandatory data\");\r\n    }\r\n  };\r\n \r\n\r\n  let handleRest = (e) => {\r\n    e.preventDefault();\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n \r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n        marginTop: \"4em\",\r\n        marginLeft: \"-15em\",\r\n        marginBottom: \"4.3em\",\r\n        marginRight: \"98.2em\",\r\n      }}>\r\n      <Card>\r\n        <CardBody\r\n          style={{\r\n            background: \"#254a9e\",\r\n            width: 800,\r\n            height: 50,\r\n            overflow: \"hidden\",\r\n          }}>\r\n          <h4 style={{ color: \"white\" }}>Login</h4>\r\n        </CardBody>\r\n \r\n\r\n        <Card className='my-3 ml-4' style={{ width: 750 }}>\r\n          <Form\r\n            className='text-center my-3'\r\n            // method='POST'\r\n            // action='j_security_check'\r\n            onSubmit={handleSubmit}\r\n            autoComplete='off'>\r\n            <FormGroup>\r\n              <Label\r\n                style={{ color: \"#254a9e\" }}\r\n                for='MashreqUser'\r\n                className='required'>\r\n                User ID\r\n              </Label>\r\n              <input\r\n                className='ml-4'\r\n                type='userid'\r\n                name='j_username'\r\n                autoComplete='off'\r\n                value={userName}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n            </FormGroup>\r\n \r\n\r\n            <FormGroup>\r\n              <Label\r\n                style={{ color: \"#254a9e\" }}\r\n                for='MashreqPassword'\r\n                className='required'>\r\n                Password\r\n              </Label>\r\n              <input\r\n                className='ml-2'\r\n                type='password'\r\n                name='j_password'\r\n                autoComplete='off'\r\n                value={password}\r\n                onChange={handlePassword}\r\n                required\r\n              />\r\n            </FormGroup>\r\n \r\n\r\n            <Container className='ml-4' style={{ height: 50 }}>\r\n              <Button\r\n                size='sm'\r\n                style={{ background: \"#254a9e\" }}\r\n                onClick={handleSubmit}>\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                size='sm'\r\n                style={{ background: \"#254a9e\" }}\r\n                className='ml-4'\r\n                onClick={handleRest}>\r\n                Reset\r\n              </Button>\r\n            </Container>\r\n          </Form>\r\n        </Card>\r\n        <CardBody\r\n          style={{\r\n            background: \"#254a9e\",\r\n            width: 800,\r\n            height: 50,\r\n          }}></CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import { properties } from \"./properties\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./documentColumn.css\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nimport axios from \"axios\";\r\nexport const DocumentColumns = [\r\n  {\r\n    Header: \"Document Id\",\r\n    accessor: \"documentId\",\r\n    Cell: (e) => (\r\n      <a className='link' onClick={(event) => downloadDocument(event, e)}>\r\n        {e.value}\r\n      </a>\r\n    ),\r\n  },\r\n  {\r\n    Header: \"Document Name\",\r\n    accessor: \"documentName\",\r\n  },\r\n  {\r\n    Header: \"Document Type\",\r\n    accessor: \"documentType\",\r\n  },\r\n\r\n  {\r\n    Header: \"Expires On\",\r\n    accessor: \"expiresOn\",\r\n  },\r\n];\r\n\r\nlet downloadDocument = async (event, e) => {\r\n  event.preventDefault();\r\n  let id = e.value;\r\n  console.log(\"downloading pdf for \" + id);\r\n  let head = {\r\n    token: ReactSession.get(\"token\"),\r\n    username: ReactSession.get(\"username\"),\r\n  };\r\n\r\n  let response = await axios.get(`${properties.downloadPDF}?documentId=${id}`, {\r\n    headers: head,\r\n  });\r\n  console.log(response);\r\n  if (response) {\r\n    if (response.data) {\r\n      const downloadLink = document.createElement(\"a\");\r\n      const fileName = `${id}.pdf`;\r\n      const linkSource = `data:application/pdf;base64,${response.data}`;\r\n      downloadLink.href = linkSource;\r\n      downloadLink.download = fileName;\r\n      downloadLink.click();\r\n    }\r\n  } else {\r\n    console.log(\"not response found\");\r\n    alert(\"Server is not responding, please try after some time\");\r\n  }\r\n};\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { usePagination, useTable } from \"react-table\";\r\nimport { Button, Table } from \"reactstrap\";\r\n\r\nimport { DocumentColumns } from \"./DocumentColumns\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nexport const DocumentTable = (props) => {\r\n  const columns = useMemo(() => DocumentColumns, []);\r\n  // const data= useMemo(()=> MOCK_DATA, [])\r\n  const [data, setData] = useState([]);\r\n  let pymtReqId = props.pymtReqId;\r\n  console.log(\"Document Table pymtReqId:\" + pymtReqId);\r\n  let head = {\r\n    token: ReactSession.get(\"token\"),\r\n    username: ReactSession.get(\"username\"),\r\n  };\r\n  const getListDocumnetsFromServer = () => {\r\n    axios\r\n      .get(`${properties.getListDocuments}/${pymtReqId}`, { headers: head })\r\n      .then(\r\n        (response) => {\r\n          console.log(\"loading....\");\r\n          setData(response.data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListDocumnetsFromServer();\r\n    console.log(\"doc:: \" + data);\r\n  }, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    usePagination\r\n  );\r\n\r\n  const { pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        size='sm'\r\n        striped={true}\r\n        style={{ marginTop: 3 }}\r\n        {...getTableProps()}>\r\n        <thead style={{ background: \"#254a9e\", color: \"white\" }}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <span>\r\n          page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          Go to page:{\" \"}\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\" }}\r\n          />\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}>\r\n          {[10, 25, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>\r\n        <Button\r\n          style={{ background: \"#254a9e\", color: \"white\" }}\r\n          size='sm'\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Col, CustomInput } from \"reactstrap\";\r\n//import { PaymentRequestTable } from './PaymentRequestTable';\r\nimport axios, { post } from \"axios\";\r\nimport { Button } from \"reactstrap\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\nfunction DocumentUpload(props) {\r\n  const [clearFile, setClearFile] = useState();\r\n  // Allowing file type\r\n  let allowedExtensions = process.env.REACT_APP_VALID_FILE_EXTENSION_DOCUMENT;\r\n  let pymtId = props.pymtReqId;\r\n  console.log(\"document class pymt id::\" + pymtId);\r\n\r\n  const [files, setFile] = useState();\r\n  const [data, setData] = useState([]);\r\n  //validate file extension\r\n  // function ValidateFile() {\r\n  //   var arrInputs = document.getElementsByName(\"file\");\r\n\r\n  //   for (var i = 0; i < arrInputs.length; i++) {\r\n  //     var oInput = arrInputs[i];\r\n  //     if (oInput.type == \"file\") {\r\n  //       var sFileName = oInput.value;\r\n\r\n  //       if (sFileName.length > 0) {\r\n  //         var blnValid = false;\r\n  //         for (var j = 0; j < validFileExtensions.length; j++) {\r\n  //           var sCurExtension = validFileExtensions[j];\r\n  //           if (\r\n  //             sFileName\r\n  //               .substr(\r\n  //                 sFileName.length - sCurExtension.length,\r\n  //                 sCurExtension.length\r\n  //               )\r\n  //               .toLowerCase() == sCurExtension.toLowerCase()\r\n  //           ) {\r\n  //             blnValid = true;\r\n  //             break;\r\n  //           }\r\n  //         }\r\n\r\n  //         if (!blnValid) {\r\n  //           console.log(\"Invalid file\");\r\n  //           alert(\r\n  //             \"Sorry, \" +\r\n  //               files[0].name +\r\n  //               ` is invalid, allowed extensions are: ` +\r\n  //               validFileExtensions\r\n  //           );\r\n  //           return false;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   console.log(\"valid file\");\r\n  //   fileUpload(files[0]);\r\n  //   return true;\r\n  // }\r\n\r\n  function fileUpload() {\r\n    console.log(\"FILE: \" + files);\r\n    console.log(\"checkering file extension on submit\");\r\n    if (fileValidation()) {\r\n      const url = properties.fileUpload + `${pymtId}`;\r\n      const formData = new FormData();\r\n      formData.append(\"file\", files);\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          token: ReactSession.get(\"token\"),\r\n          username: ReactSession.get(\"username\"),\r\n        },\r\n      };\r\n      console.log(formData);\r\n      axios\r\n        .post(url, formData, config)\r\n        .then((response) => response.data)\r\n        .then(\r\n          (data) => {\r\n            setData(data);\r\n            console.info(\"report response << : \" + JSON.stringify(data));\r\n            alert(\"Document uploaded successfully\");\r\n            setClearFile(\"\");\r\n          },\r\n          (error) => {\r\n            console.log(\"File upload fail \" + error);\r\n            alert(\r\n              \"Error: Document upload failed please try again after some time.\"\r\n            );\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  function fileValidation(e) {\r\n    let extensions = /(\\.xls|\\.xlsx|\\.pdf)$/i;\r\n    var fileInput = document.getElementById(\"file\");\r\n    var filePath = fileInput.value;\r\n    if (!extensions.exec(filePath)) {\r\n      console.log(\"Invalid file extension\");\r\n      alert(`Invalid file, system will accept only [.xls, .xlsx, .pdf, .PDF] `);\r\n      fileInput.value = null;\r\n      return false;\r\n    }\r\n    console.log(\"Valid file extension found\");\r\n    return true;\r\n  }\r\n\r\n  const getFile = (e) => {\r\n    // const fileRef=(e.target.files[0]);\r\n    const fileRef = e.target.files[0];\r\n    console.log(fileRef);\r\n    setFile(fileRef);\r\n    fileValidation();\r\n  };\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5'>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Upload Document\r\n          </Label>\r\n          <Col sm={3}>\r\n            <div class='custom-file mb-3'>\r\n              {/* <input type=\"file\" onChange={onChange} className=\"custom-file-input\" name={fileName} id=\"input\" /> */}\r\n\r\n              <CustomInput\r\n                type='file'\r\n                accept='.xls, .xlsx, .pdf'\r\n                onChange={getFile}\r\n                id='file'\r\n                name='file'\r\n                key={clearFile}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <Button\r\n              onClick={fileUpload}\r\n              style={{ background: \"#254a9e\", color: \"white\" }}>\r\n              Upload\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n      <div className='App'></div>\r\n    </div>\r\n  );\r\n}\r\nexport default DocumentUpload;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { DocumentTable } from \"./DocumentTable\";\r\nimport { Route, useParams } from \"react-router\";\r\n\r\nimport axios from \"axios\";\r\nimport DocumentUpload from \"./DocumentUpload\";\r\nimport { properties } from \"./properties\";\r\nimport \"./Attachment.css\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\n{\r\n  /* <switch>\r\n  <Route path='/attachmentField/:id' children={<Child />} />\r\n</switch>; */\r\n}\r\n\r\nexport default function AttachmentFields() {\r\n  const [autoRenewal, setAutoRenewal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [attachmentFlag, setAttachmentFlag] = useState(\"false\");\r\n  const [governmentCheckBox, setGovernmentCheckBox] = useState(false);\r\n  const [isExcpApproval, setIsExcpApproval] = useState(false);\r\n  const [insuranceCheckBox, setInsuranceCheckBox] = useState(false);\r\n  const [noProperDocumentCheckBox, setNoProperDocumentCheckBox] =\r\n    useState(false);\r\n  const [disableSaveButton, setDisableSaveButton] = useState(false);\r\n  console.log(\"AttachmentFields started...\");\r\n  let { id } = useParams();\r\n  console.log(\"id >>>>>>>>\" + id);\r\n\r\n  const [formData, setState] = useState({});\r\n\r\n  const [loaddates, setDates] = useState({});\r\n\r\n  const [data1, setData1] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data3, setData3] = useState([]);\r\n\r\n  let handleYes = () => {\r\n    setAttachmentFlag(\"true\");\r\n    setOpen(false);\r\n    var autoRenewalData = \"\";\r\n    var isGovernmentEntity = \"\";\r\n    var isInsuranceCompany = \"\";\r\n    var noDocumentData = \"\";\r\n    var isExceptionalApproval = \"\";\r\n    if (autoRenewal) autoRenewalData = \"Y\";\r\n    else autoRenewalData = \"N\";\r\n\r\n    if (governmentCheckBox) {\r\n      console.log(\"Government\");\r\n      isGovernmentEntity = \"Y\";\r\n    } else {\r\n      isGovernmentEntity = \"N\";\r\n    }\r\n\r\n    if (insuranceCheckBox) {\r\n      console.log(\"insurance company\");\r\n      isInsuranceCompany = \"Y\";\r\n    } else {\r\n      isInsuranceCompany = \"N\";\r\n    }\r\n\r\n    if (noProperDocumentCheckBox) {\r\n      noDocumentData = \"Y\";\r\n    } else {\r\n      noDocumentData = \"N\";\r\n    }\r\n    if (isExcpApproval) {\r\n      isExceptionalApproval = \"Y\";\r\n    } else {\r\n      isExceptionalApproval = \"N\";\r\n    }\r\n    const postData = {\r\n      pymtReqId: id,\r\n      //matrixRefNo:data.matrixRefNo,\r\n      matrixFileRefNo: data.matrixFileRefNo,\r\n      mgmtCompId: data.mgmtCompId,\r\n      issuanceAuthority: \"Dubai Govt\",\r\n      tradeLicenseExpDate: data.tradeLicenseExpDate,\r\n      agreementExpDate: data.agreementExpDate,\r\n      budgetYear: data.budgetYear,\r\n      invoiceDateYear: data.invoiceDateYear,\r\n      invoiceAmount: data.invoiceAmount,\r\n      supplierId: data.supplierId,\r\n      serviceCode: data.serviceCode,\r\n      buildingId: data.buildingId,\r\n      hiddenTrade: data.hiddenTrade,\r\n      hiddenAgree: data.hiddenAgree,\r\n      attachmentFlag: \"true\",\r\n      noProperDocuments: noDocumentData,\r\n      autoRenewal: autoRenewalData,\r\n      isGovernmentEntity: isGovernmentEntity,\r\n      isInsuranceCompany: isInsuranceCompany,\r\n      isExceptionalApproval: isExceptionalApproval,\r\n      remarks: data.remarks,\r\n      bifurcation: data.bifurcation,\r\n    };\r\n    saveData(postData);\r\n  };\r\n  let handleNo = () => {\r\n    setOpen(false);\r\n    var autoRenewalData = \"\";\r\n    var isGovernmentEntity = \"\";\r\n    var isInsuranceCompany = \"\";\r\n    var noDocumentData = \"\";\r\n    var isExceptionalApproval = \"\";\r\n\r\n    if (autoRenewal) autoRenewalData = \"Y\";\r\n    else autoRenewalData = \"N\";\r\n\r\n    if (governmentCheckBox) {\r\n      console.log(\"Government\");\r\n      isGovernmentEntity = \"Y\";\r\n    } else {\r\n      isGovernmentEntity = \"N\";\r\n    }\r\n\r\n    if (insuranceCheckBox) {\r\n      console.log(\"insurance company\");\r\n      isInsuranceCompany = \"Y\";\r\n    } else {\r\n      isInsuranceCompany = \"N\";\r\n    }\r\n\r\n    if (noProperDocumentCheckBox) {\r\n      noDocumentData = \"Y\";\r\n    } else {\r\n      noDocumentData = \"N\";\r\n    }\r\n    if (isExcpApproval) {\r\n      isExceptionalApproval = \"Y\";\r\n    } else {\r\n      isExceptionalApproval = \"N\";\r\n    }\r\n    const postData = {\r\n      pymtReqId: id,\r\n      //matrixRefNo:data.matrixRefNo,\r\n      matrixFileRefNo: data.matrixFileRefNo,\r\n      mgmtCompId: data.mgmtCompId,\r\n      issuanceAuthority: \"Dubai Govt\",\r\n      tradeLicenseExpDate: data.tradeLicenseExpDate,\r\n      agreementExpDate: data.agreementExpDate,\r\n      budgetYear: data.budgetYear,\r\n      invoiceDateYear: data.invoiceDateYear,\r\n      invoiceAmount: data.invoiceAmount,\r\n      supplierId: data.supplierId,\r\n      serviceCode: data.serviceCode,\r\n      buildingId: data.buildingId,\r\n      hiddenTrade: data.hiddenTrade,\r\n      hiddenAgree: data.hiddenAgree,\r\n      attachmentFlag: \"false\",\r\n      noProperDocuments: noDocumentData,\r\n      autoRenewal: autoRenewalData,\r\n      isGovernmentEntity: isGovernmentEntity,\r\n      isInsuranceCompany: isInsuranceCompany,\r\n      isExceptionalApproval: isExceptionalApproval,\r\n      remarks: data.remarks,\r\n      bifurcation: data.bifurcation,\r\n    };\r\n    saveData(postData);\r\n  };\r\n  let handleCancel = () => {\r\n    setOpen(false);\r\n    return false;\r\n  };\r\n\r\n  const loadAttachmentDetails = (ids) => {\r\n    console.log(\"calling getMatrixRefNo\");\r\n    console.log(properties.getMatrixRefNo + `${ids}`);\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios.get(properties.getMatrixRefNo + `${ids}`, { headers: head }).then(\r\n      (response) => {\r\n        console.log(\r\n          \"Attachment Response Data loaded here\" + JSON.stringify(response.data)\r\n        );\r\n\r\n        setData({\r\n          data,\r\n          matrixRefNo: response.data.strMatrixRefNo,\r\n          invoiceAmount: response.data.invoiceAmount,\r\n          matrixFileRefNo: response.data.matrixFileRefNo,\r\n          subPaymentsCount: response.data.subPaymentsCount,\r\n          tradeLicenseExpDate: response.data.tradeLicenseExpDate,\r\n          agreementExpDate: response.data.agreementExpDate,\r\n          supplierId: response.data.supplierId,\r\n          mgmtCompId: response.data.mgmtCompId,\r\n          buildingId: response.data.buildingId,\r\n          serviceCode: response.data.serviceCode,\r\n          budgetYear: response.data.budgetYear,\r\n          bifurcation: response.data.bifurcation,\r\n          autoRenewal: response.data.autoRenewal,\r\n          isGovernmentEntity: response.data.isGovernmentEntity,\r\n          isInsuranceCompany: response.data.isInsuranceCompany,\r\n          // remarks: response.data.remarks,\r\n        });\r\n\r\n        if (response.data.tradeLicenseExpDate)\r\n          if (response.data.tradeLicenseExpDate < curdate) {\r\n            datecolor = \"readcolor\";\r\n            document.getElementById(\"tradeLicenseExpDate\").className =\r\n              datecolor;\r\n          }\r\n\r\n        if (response.data.agreementExpDate)\r\n          if (response.data.agreementExpDate < curdate) {\r\n            datecolor = \"readcolor\";\r\n            document.getElementById(\"agreementExpDate\").className = datecolor;\r\n          }\r\n\r\n        if (response.data.autoRenewal)\r\n          if (!\"Y\".localeCompare(response.data.autoRenewal))\r\n            setAutoRenewal(true);\r\n\r\n        if (response.data.isGovernmentEntity)\r\n          if (!\"Y\".localeCompare(response.data.isGovernmentEntity))\r\n            setGovernmentCheckBox(true);\r\n        if (response.data.isInsuranceCompany)\r\n          if (!\"Y\".localeCompare(response.data.isInsuranceCompany))\r\n            setInsuranceCheckBox(true);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    console.log(\"matrixRefNo completed\");\r\n  };\r\n  console.log(\r\n    \"matrixfilerefno\" + data.matrixFileRefNo + \":::\" + data.subPaymentsCount\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"loading AttachmentDetails calling\");\r\n    loadAttachmentDetails(`${id}`);\r\n  }, []);\r\n\r\n  const saveData = (postData) => {\r\n    console.log(postData);\r\n\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    console.log(head);\r\n    axios.post(properties.saveAttachmentData, postData, { headers: head }).then(\r\n      (response) => {\r\n        // alert(\"Data Saved Successfully\");\r\n        alert(response.data);\r\n        if (!\"Data Saved Successfully\".localeCompare(response.data)) {\r\n          setDisableSaveButton(true);\r\n        }\r\n        console.log(\"Response Data loaded here\" + JSON.stringify(response));\r\n        // window.close();\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n        alert(\"Error: Data not saved. Please try again  after sometime.\");\r\n        return false;\r\n      }\r\n    );\r\n    return false;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"submitted\");\r\n    var autoRenewalData = \"\";\r\n    var isGovernmentEntity = \"\";\r\n    var isInsuranceCompany = \"\";\r\n    var noDocumentData = \"\";\r\n    var isExceptionalApproval = \"\";\r\n    if (autoRenewal) autoRenewalData = \"Y\";\r\n    else autoRenewalData = \"N\";\r\n\r\n    if (governmentCheckBox) {\r\n      console.log(\"Government\");\r\n      isGovernmentEntity = \"Y\";\r\n    } else {\r\n      isGovernmentEntity = \"N\";\r\n    }\r\n    if (insuranceCheckBox) {\r\n      console.log(\"insurance company\");\r\n      isInsuranceCompany = \"Y\";\r\n    } else {\r\n      isInsuranceCompany = \"N\";\r\n    }\r\n\r\n    if (noProperDocumentCheckBox) {\r\n      noDocumentData = \"Y\";\r\n    } else {\r\n      noDocumentData = \"N\";\r\n    }\r\n    if (isExcpApproval) {\r\n      isExceptionalApproval = \"Y\";\r\n    } else {\r\n      isExceptionalApproval = \"N\";\r\n    }\r\n    const postData = {\r\n      pymtReqId: id,\r\n      mgmtCompId: data.mgmtCompId,\r\n      issuanceAuthority: \"Dubai Govt\",\r\n      tradeLicenseExpDate: data.tradeLicenseExpDate,\r\n      agreementExpDate: data.agreementExpDate,\r\n      budgetYear: data.budgetYear,\r\n      invoiceDateYear: data.invoiceDateYear,\r\n      invoiceAmount: data.invoiceAmount,\r\n      supplierId: data.supplierId,\r\n      serviceCode: data.serviceCode,\r\n      buildingId: data.buildingId,\r\n      // hiddenTrade: data.hiddenTrade,\r\n      // hiddenAgree: data.hiddenAgree,\r\n      attachmentFlag: \"false\",\r\n      noProperDocuments: noDocumentData,\r\n      autoRenewal: autoRenewalData,\r\n      isGovernmentEntity: isGovernmentEntity,\r\n      isInsuranceCompany: isInsuranceCompany,\r\n      bifurcation: data.bifurcation,\r\n      isExceptionalApproval: isExceptionalApproval,\r\n      remarks: data.remarks,\r\n    };\r\n    if (isExcpApproval || noProperDocumentCheckBox) {\r\n      if (!data.remarks) {\r\n        alert(\"Reason is mandatory\");\r\n        return false;\r\n      }\r\n    }\r\n    if (!isExcpApproval)\r\n      if (\r\n        data.budgetYear == undefined ||\r\n        data.serviceCode == undefined ||\r\n        data.serviceCode == \"\" ||\r\n        data.budgetYear == \"\"\r\n      ) {\r\n        alert(\"Please select all the mandatory fields\");\r\n        if (insuranceCheckBox) {\r\n          if (\r\n            data.tradeLicenseExpDate == undefined &&\r\n            data.hiddenTrade == undefined\r\n          ) {\r\n            event.preventDefault();\r\n            alert(\r\n              \"Trade license expiry date is mandatory for Insurance company\"\r\n            );\r\n          }\r\n        }\r\n        return false;\r\n      } else {\r\n        console.log(\"count :: \" + data.subPaymentsCount);\r\n        console.log(\"conut type:: \" + typeof data.subPaymentsCount);\r\n        if (Number(data.subPaymentsCount) > 0) setOpen(true);\r\n        else saveData(postData);\r\n      }\r\n    else {\r\n      console.log(\"with count :: \" + data.subPaymentsCount);\r\n      console.log(\"conut type:: \" + typeof data.subPaymentsCount);\r\n      if (Number(data.subPaymentsCount) > 0) setOpen(true);\r\n      else saveData(postData);\r\n    }\r\n  };\r\n\r\n  let datecolor = \"blackcolor\";\r\n\r\n  var today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1; //As January is 0.\r\n  var yyyy = today.getFullYear();\r\n\r\n  if (dd < 10) dd = \"0\" + dd;\r\n  if (mm < 10) mm = \"0\" + mm;\r\n  var curdate = yyyy + \"-\" + mm + \"-\" + dd;\r\n  console.log(\"today::\" + curdate);\r\n\r\n  function handle(e) {\r\n    var regex = /[^.=,;\\w\\s]/gi;\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value.replace(regex, \"\");\r\n    console.log(e.target.id + \":\" + e.target.value);\r\n    setData(newdata);\r\n    console.log(\"MY DATA :: \" + JSON.stringify(newdata));\r\n    console.log(\r\n      \"handle newdata.tradeLicenseExpDate:\" + newdata.tradeLicenseExpDate\r\n    );\r\n\r\n    // let splyer_id = null;\r\n    // let mgmt_cpny_id = null;\r\n    // if (newdata.supplierId != undefined) {\r\n    //   splyer_id = newdata.supplierId;\r\n    //   if (newdata.mgmtCompId == undefined) {\r\n    //     mgmt_cpny_id = 0;\r\n    //   } else if (\r\n    //     newdata.mgmtCompId != undefined &&\r\n    //     newdata.supplierId != undefined\r\n    //   ) {\r\n    //     mgmt_cpny_id = newdata.mgmtCompId;\r\n    //   }\r\n\r\n    //   console.info(\"m_c:\" + mgmt_cpny_id + \"s_n::\" + splyer_id);\r\n\r\n    // loadExpiryDates(splyer_id, mgmt_cpny_id);\r\n    //  u}\r\n  }\r\n\r\n  function handleTrade(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n\r\n    var dat = newdata.tradeLicenseExpDate;\r\n    console.log(\"vardat\" + dat);\r\n\r\n    console.log(\"newdata.tradeLicenseExpDate:\" + newdata.tradeLicenseExpDate);\r\n    data.tradeLicenseExpDate = newdata.tradeLicenseExpDate;\r\n    console.log(\"dates\" + data.tradeLicenseExpDate + \"::\" + today);\r\n    console.log(\r\n      \"condition\" + (new Date(data.tradeLicenseExpDate) <= new Date())\r\n    );\r\n\r\n    if (data.tradeLicenseExpDate < curdate) {\r\n      console.log(\"tradeLicenseExpDate < current date\");\r\n      datecolor = \"readcolor\";\r\n      document.getElementById(\"tradeLicenseExpDate\").className = datecolor;\r\n    } else {\r\n      document.getElementById(\"tradeLicenseExpDate\").className = \"blackcolor\";\r\n      // newdata.hiddenTrade = dat;\r\n      // console.log(\"newdata.hidddenTrade\" + newdata.hiddenTrade);\r\n    }\r\n  }\r\n\r\n  function handleAgree(e) {\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value;\r\n    setData(newdata);\r\n\r\n    var dat = newdata.agreementExpDate;\r\n    console.log(\"vardat\" + dat);\r\n\r\n    data.agreementExpDate = newdata.agreementExpDate;\r\n    if (data.agreementExpDate < curdate) {\r\n      console.log(\"agreementExpDate < current date\");\r\n      datecolor = \"readcolor\";\r\n      document.getElementById(\"agreementExpDate\").className = datecolor;\r\n    } else {\r\n      document.getElementById(\"agreementExpDate\").className = \"blackcolor\";\r\n      // newdata.hiddenAgree = dat;\r\n      // console.log(\"newdata.hiddenAgree\" + newdata.hiddenAgree);\r\n    }\r\n  }\r\n\r\n  // data.tradeLicenseExpDate = loaddates.tradeLicenseExpDate;\r\n  // data.agreementExpDate = loaddates.agreementExpDate;\r\n\r\n  const fetchData = async () => {\r\n    let headers = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    const company = await axios.get(properties.managementCompanyList, {\r\n      headers: headers,\r\n    });\r\n    console.log(\"company\", company.data);\r\n    setData1(company.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchSupplier = async () => {\r\n    const supplier = await axios.get(properties.supplierList);\r\n    console.log(\"supplier\" + supplier.data);\r\n    setData2(supplier.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchSupplier();\r\n  }, []);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    console.log(\"building\", building.data);\r\n    setData3(building.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n  }, []);\r\n\r\n  let isChecked = \"NO\";\r\n  function documents(e) {\r\n    isChecked = e.target.checked;\r\n    if (isChecked === true) {\r\n      isChecked = \"YES\";\r\n    } else {\r\n      isChecked = \"NO\";\r\n    }\r\n    // alert(isChecked);\r\n  }\r\n\r\n  let submitData = (e) => {\r\n    console.log(\"Submit:: \" + autoRenewal);\r\n  };\r\n\r\n  let auto_Renewal = \"NO\";\r\n  let handleAutoRenewal = (e) => {\r\n    setAutoRenewal(e.target.checked);\r\n  };\r\n  let handleInsCheckbox = (e) => {\r\n    setInsuranceCheckBox(e.target.checked);\r\n  };\r\n  let handleGovCheckbox = (e) => {\r\n    console.log(e.target.checked);\r\n    setGovernmentCheckBox(e.target.checked);\r\n  };\r\n  let handleIsExcpApproval = (e) => {\r\n    console.log(e.target.checked);\r\n    setIsExcpApproval(e.target.checked);\r\n  };\r\n\r\n  let handleNoProperDocumentCheckBox = (e) => {\r\n    console.log(e.target.checked);\r\n    setNoProperDocumentCheckBox(e.target.checked);\r\n  };\r\n\r\n  function renew(e) {\r\n    auto_Renewal = e.target.checked;\r\n    if (auto_Renewal === true) {\r\n      auto_Renewal = \"YES\";\r\n    } else {\r\n      auto_Renewal = \"NO\";\r\n    }\r\n    // alert(auto_Renewal);\r\n  }\r\n\r\n  let insurance = \"NO\";\r\n  function insuranceCompany(e) {\r\n    insurance = e.target.checked;\r\n    if (insurance === true) {\r\n      insurance = \"YES\";\r\n    } else {\r\n      insurance = \"NO\";\r\n    }\r\n    // alert(insurance);\r\n  }\r\n\r\n  let govt = \"NO\";\r\n  function Government(e) {\r\n    govt = e.target.checked;\r\n    if (govt === true) {\r\n      govt = \"YES\";\r\n    } else {\r\n      govt = \"NO\";\r\n    }\r\n    // alert(govt);\r\n  }\r\n\r\n  //checking spe char\r\n\r\n  let checkSpacialChar = (event) => {\r\n    var regex = /^[!@#\\$%\\^\\&*\\)\\(+/<>);[]_-]+$/g;\r\n    return event.key.match(regex);\r\n  };\r\n\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Matrix Ref No\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              value={data.matrixRefNo}\r\n              size='sm'\r\n              className='input'\r\n              autoComplete='off'\r\n            />\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Budget Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              autoComplete='off'\r\n              type='number'\r\n              maxLength={4}\r\n              onChange={(e) => handle(e)}\r\n              id='budgetYear'\r\n              value={data.budgetYear}\r\n              size='sm'\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Supplier Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              autoComplete='off'\r\n              size='sm'\r\n              type='select'\r\n              id='supplierId'\r\n              value={data.supplierId}\r\n              size='sm'\r\n              disabled='disabled'\r\n              style={{ width: \"350px\" }}\r\n              onChange={(e) => handle(e)}>\r\n              <option selected disabled>\r\n                Please select a supplier\r\n              </option>\r\n              {data2.map((opt2) => (\r\n                <option value={opt2.supplierId}>{opt2.supplierName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }}>\r\n            Invoice Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='number'\r\n              autoComplete='off'\r\n              maxLength={4}\r\n              onChange={(e) => handle(e)}\r\n              id='invoiceDateYear'\r\n              value={data.invoiceDateYear}\r\n              size='sm'\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Management Company Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              size='sm'\r\n              type='select'\r\n              autoComplete='off'\r\n              id='mgmtCompId'\r\n              value={data.mgmtCompId}\r\n              disabled='disabled'\r\n              style={{ width: \"350px\" }}\r\n              onChange={(e) => handle(e)}>\r\n              <option selected disabled>\r\n                Please select a company\r\n              </option>\r\n              {data1.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Payment Amount\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='invoiceAmount'\r\n              defaultValue={data.invoiceAmount}\r\n              size='sm'\r\n              disabled='disabled'\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Trade License Expiry Date\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='date'\r\n              autoComplete='off'\r\n              className={datecolor}\r\n              onChange={(e) => handleTrade(e)}\r\n              id='tradeLicenseExpDate'\r\n              defaultValue={data.tradeLicenseExpDate}\r\n              size='sm'\r\n            />\r\n            <Input type='text' id='hiddenTrade' hidden />\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Issuance Authority\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='issuanceAuthority'\r\n              // value={data.issuanceAuthority}\r\n              value='Dubai Govt'\r\n              size='sm'\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            {\" \"}\r\n            Agreement Expiry Date\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='date'\r\n              autoComplete='off'\r\n              className={datecolor}\r\n              onChange={(e) => handleAgree(e)}\r\n              id='agreementExpDate'\r\n              defaultValue={data.agreementExpDate}\r\n              size='sm'\r\n            />\r\n            <Input type='text' id='hiddenAgree' hidden />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"10rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={governmentCheckBox}\r\n                onChange={handleGovCheckbox}\r\n              />\r\n              Government\r\n            </Label>\r\n          </Col>\r\n\r\n          <Col md={2}>\r\n            <Label style={{ marginLeft: \"-3rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={autoRenewal}\r\n                onChange={handleAutoRenewal}\r\n              />\r\n              Auto Renewal\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            {\" \"}\r\n            Building Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              size='sm'\r\n              type='select'\r\n              autoComplete='off'\r\n              id='buildingId'\r\n              value={data.buildingId}\r\n              disabled='disabled'\r\n              onChange={(e) => handle(e)}>\r\n              <option selected hidden>\r\n                Please select building\r\n              </option>\r\n              {data3.map((opt) => (\r\n                <option value={opt.buildingId}>{opt.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"10rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={insuranceCheckBox}\r\n                onChange={handleInsCheckbox}\r\n              />\r\n              Insurance Company\r\n            </Label>\r\n          </Col>\r\n\r\n          <Col md={2.5}>\r\n            <Label style={{ marginLeft: \"-2rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                onChange={handleNoProperDocumentCheckBox}\r\n              />\r\n              No proper Data/Documents\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Service Code\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              // onKeyPress={(event) => checkSpacialChar(event)}\r\n              onChange={(e) => handle(e)}\r\n              id='serviceCode'\r\n              value={data.serviceCode}\r\n              size='sm'\r\n            />\r\n          </Col>\r\n          <Col md={4} className=''>\r\n            <Label style={{ marginLeft: \"10rem\" }} check>\r\n              <Checkbox color='primary' onChange={handleIsExcpApproval} />\r\n              Is Exceptional Approval\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginLeft: \"\" }}>\r\n            Bifurcation\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='bifurcation'\r\n              name='bifurcation'\r\n              value={data.bifurcation}\r\n              size='sm'\r\n              style={{ marginLeft: \"-5rem\" }}\r\n            />\r\n          </Col>\r\n\r\n          <Label sm={3} style={{ marginLeft: \"5rem\" }}>\r\n            Reason\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='textarea'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='remarks'\r\n              name='remarks'\r\n              value={data.remarks}\r\n              size='sm'\r\n              style={{ marginLeft: \"-15rem\", width: \"305px\", height: \"60px\" }}\r\n            />\r\n          </Col>\r\n\r\n          <Col sm={2} className='mt-3'>\r\n            <Button\r\n              disabled={disableSaveButton}\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                marginLeft: \"55rem\",\r\n              }}>\r\n              Save\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col sm={2} className='mt-3'>\r\n            <Button\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                marginLeft: \"47rem\",\r\n              }}\r\n              onClick={() => window.close()}>\r\n              Close\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <Dialog\r\n          open={open}\r\n          //onClose={handleClose}\r\n          aria-labelledby='alert-dialog-title'\r\n          aria-describedby='alert-dialog-description'>\r\n          <DialogTitle id='alert-dialog-title'>\r\n            Attachment Data Confirmation\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id='alert-dialog-description'>\r\n              This Payment Request is belongs to bulk payments, which is having{\" \"}\r\n              {data.subPaymentsCount} payment requests. Do you want to apply\r\n              same values to other Payment Requests also?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={handleYes}\r\n              color='primary'\r\n              style={{ width: \"5rem\" }}>\r\n              Yes\r\n            </Button>\r\n            <Button\r\n              onClick={handleNo}\r\n              color='primary'\r\n              style={{ width: \"5rem\" }}>\r\n              No\r\n            </Button>\r\n            <Button\r\n              onClick={handleCancel}\r\n              color='primary'\r\n              style={{ width: \"5rem\" }}>\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Form>\r\n\r\n      <br />\r\n      <hr className='hr' />\r\n\r\n      <div className='App'>\r\n        <DocumentUpload pymtReqId={id} />\r\n        <DocumentTable pymtReqId={id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Child() {\r\n  let { id } = useParams();\r\n  return <div></div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { DocumentTable } from \"./DocumentTable\";\r\nimport DocumentUpload from \"./DocumentUpload\";\r\nimport { Route, useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\n<switch>\r\n  <Route path='/ExceptionUpdate/:id/' children={<Child />} />\r\n</switch>;\r\n\r\nexport default function ExceptionUpdate() {\r\n  let { id } = useParams();\r\n\r\n  const [isExcpApproval, setIsExcpApproval] = useState(false);\r\n  const [autoRenewal, setAutoRenewal] = useState(false);\r\n  const [governmentCheckBox, setGovernmentCheckBox] = useState(false);\r\n  const [insuranceCheckBox, setInsuranceCheckBox] = useState(false);\r\n  const [noProperDocumentCheckBox, setNoProperDocumentCheckBox] =\r\n    useState(false);\r\n\r\n  console.log(\">>>>>>>><<<<<<<<<<<<<<\" + id);\r\n  const [formData, setState] = useState({});\r\n  const [data3, setData3] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data1, setData1] = useState([]);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  let handleAutoRenewal = (e) => {\r\n    setAutoRenewal(e.target.checked);\r\n  };\r\n  let handleGovernmentBox = (e) => {\r\n    setGovernmentCheckBox(e.target.checked);\r\n  };\r\n  let handleInsuranceBox = (e) => {\r\n    setInsuranceCheckBox(e.target.checked);\r\n  };\r\n  let handleNoProperDocumentBox = (e) => {\r\n    setNoProperDocumentCheckBox(e.target.checked);\r\n  };\r\n  let handleIsExcpApproval = (e) => {\r\n    console.log(e.target.checked);\r\n    setIsExcpApproval(e.target.checked);\r\n  };\r\n\r\n  function handle(e) {\r\n    var regex = /[^.=,;\\w\\s]/gi;\r\n    const newdata = { ...data };\r\n    newdata[e.target.id] = e.target.value.replace(regex, \"\");\r\n    setData(newdata);\r\n    console.log(newdata);\r\n  }\r\n\r\n  const loadAttachmentDetails = (ids) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .get(`${properties.loadAttachmentDetails}/${ids}`, { headers: head })\r\n      .then(\r\n        (response) => {\r\n          console.log(\r\n            \"Response Data loaded here\" + JSON.stringify(response.data)\r\n          );\r\n\r\n          setData({\r\n            data,\r\n            matrixRefNo: response.data[0].strMatrixRefNo,\r\n            mgmtCompId: response.data[0].mgmtCompId,\r\n            issuanceAuthority: response.data[0].issuanceAuthority,\r\n            tradeLicenseExpDate: response.data[0].tradeLicenseExpDate,\r\n            agreementExpDate: response.data[0].agreementExpDate,\r\n            budgetYear: response.data[0].budgetYear,\r\n            invoiceDateYear: response.data[0].invoiceDateYear,\r\n            invoiceAmount: response.data[0].invoiceAmount,\r\n            supplierId: response.data[0].supplierId,\r\n            status: response.data[0].status,\r\n            serviceCode: response.data[0].serviceCode,\r\n            buildingId: response.data[0].buildingId,\r\n            autoRenewal: response.data[0].autoRenewal,\r\n            noProperDocuments: response.data[0].noProperDocuments,\r\n            bifurcation: response.data[0].bifurcation,\r\n            isExceptionalApproval: response.data[0].isExceptionalApproval,\r\n            remarks: response.data[0].remarks,\r\n            isGovernmentEntity: response.data[0].isGovernmentEntity,\r\n            isInsuranceCompany: response.data[0].isInsuranceCompany,\r\n          });\r\n          if (!\"Y\".localeCompare(response.data[0].isExceptionalApproval)) {\r\n            setIsExcpApproval(true);\r\n          }\r\n\r\n          if (!\"Y\".localeCompare(response.data[0].noProperDocuments))\r\n            setNoProperDocumentCheckBox(true);\r\n\r\n          if (response.data[0].autoRenewal)\r\n            if (!\"Y\".localeCompare(response.data[0].autoRenewal))\r\n              setAutoRenewal(true);\r\n\r\n          if (response.data[0].isGovernmentEntity)\r\n            if (!\"Y\".localeCompare(response.data[0].isGovernmentEntity))\r\n              setGovernmentCheckBox(true);\r\n          if (response.data[0].isInsuranceCompany)\r\n            if (!\"Y\".localeCompare(response.data[0].isInsuranceCompany))\r\n              setInsuranceCheckBox(true);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  console.log(formData);\r\n\r\n  useEffect(() => {\r\n    loadAttachmentDetails(`${id}`);\r\n  }, []);\r\n\r\n  var autoRenewalData = \"\";\r\n  var isGovernmentEntity = \"\";\r\n  var isInsuranceCompany = \"\";\r\n  var noDocumentData = \"\";\r\n  var isExceptionalApproval = \"\";\r\n  if (autoRenewal) autoRenewalData = \"Y\";\r\n  else autoRenewalData = \"N\";\r\n\r\n  if (governmentCheckBox) {\r\n    console.log(\"Government\");\r\n    isGovernmentEntity = \"Y\";\r\n  } else {\r\n    isGovernmentEntity = \"N\";\r\n  }\r\n  if (insuranceCheckBox) {\r\n    console.log(\"insurance company\");\r\n    isInsuranceCompany = \"Y\";\r\n  } else {\r\n    isInsuranceCompany = \"N\";\r\n  }\r\n\r\n  if (noProperDocumentCheckBox) {\r\n    noDocumentData = \"Y\";\r\n  } else {\r\n    noDocumentData = \"N\";\r\n  }\r\n  if (isExcpApproval) {\r\n    isExceptionalApproval = \"Y\";\r\n  } else {\r\n    isExceptionalApproval = \"N\";\r\n  }\r\n  const putData = {\r\n    pymtReqId: id,\r\n    mgmtCompId: data.mgmtCompId,\r\n    issuanceAuthority: data.issuanceAuthority,\r\n    tradeLicenseExpDate: data.tradeLicenseExpDate,\r\n    agreementExpDate: data.agreementExpDate,\r\n    budgetYear: data.budgetYear,\r\n    invoiceDateYear: data.invoiceDateYear,\r\n    invoiceAmount: data.invoiceAmount,\r\n    supplierId: data.supplierId,\r\n    serviceCode: data.serviceCode,\r\n    buildingId: data.buildingId,\r\n    status: data.status,\r\n    bifurcation: data.bifurcation,\r\n    noProperDocuments: noDocumentData,\r\n    autoRenewal: autoRenewalData,\r\n    isGovernmentEntity: isGovernmentEntity,\r\n    isInsuranceCompany: isInsuranceCompany,\r\n    isExceptionalApproval: isExceptionalApproval,\r\n    bifurcation: data.bifurcation,\r\n    remarks: data.remarks,\r\n  };\r\n\r\n  const updateData = (putData) => {\r\n    console.log(putData);\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios.post(properties.exceptionUpdate, putData, { headers: head }).then(\r\n      (response) => {\r\n        alert(\"Data Updated Successfully\");\r\n        console.log(\"Response Data loaded here\" + JSON.stringify(response));\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n        alert(\"Error: Data not updated. Please try again  after sometime.\");\r\n        return false;\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(putData);\r\n    if (isExcpApproval || noProperDocumentCheckBox) {\r\n      if (!data.remarks) {\r\n        alert(\"Reason is mandatory\");\r\n        return false;\r\n      }\r\n    }\r\n    if (!isExcpApproval)\r\n      if (\r\n        data.mgmtCompId == undefined ||\r\n        data.supplierId == undefined ||\r\n        data.serviceCode == undefined ||\r\n        data.buildingId == undefined ||\r\n        data.invoiceAmount == undefined ||\r\n        data.issuanceAuthority == undefined ||\r\n        data.serviceCode == \"\" ||\r\n        data.issuanceAuthority == \"\" ||\r\n        data.mgmtCompId == \"\" ||\r\n        data.supplierId == \"\" ||\r\n        data.invoiceAmount == \"\" ||\r\n        data.budgetYear == \"\"\r\n      ) {\r\n        event.preventDefault();\r\n        alert(\"Please select all mandatory fields\");\r\n        if (insuranceCheckBox) {\r\n          if (\r\n            data.tradeLicenseExpDate == undefined &&\r\n            data.hiddenTrade == undefined\r\n          ) {\r\n            event.preventDefault();\r\n            alert(\r\n              \"Trade license expiry date is mandatory for Insurance company\"\r\n            );\r\n          }\r\n        }\r\n        return false;\r\n      } else {\r\n        updateData(putData);\r\n      }\r\n    else {\r\n      updateData(putData);\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const company = await axios.get(properties.managementCompanyList);\r\n    console.log(\"company\", company.data);\r\n    setData1(company.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchSupplier = async () => {\r\n    const supplier = await axios.get(properties.supplierList);\r\n    console.log(\"supplier\" + supplier.data);\r\n    setData3(supplier.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchSupplier();\r\n  }, []);\r\n\r\n  const fetchBuilding = async () => {\r\n    const building = await axios.get(properties.buildingNames);\r\n    console.log(\"building\", building.data);\r\n    setData2(building.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuilding();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5' onSubmit={handleSubmit}>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Matrix Ref No\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              size='sm'\r\n              value={data.matrixRefNo}\r\n            />\r\n          </Col>\r\n\r\n          <Label\r\n            sm={2}\r\n            style={{ marginLeft: \"10rem\" }}\r\n            autoComplete='off'\r\n            className='required'>\r\n            Budget Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              size='sm'\r\n              maxLength='4'\r\n              id='budgetYear'\r\n              defaultValue={data.budgetYear}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Supplier Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              size='sm'\r\n              type='select'\r\n              autoComplete='off'\r\n              id='supplierId'\r\n              disabled='disabled'\r\n              value={data.supplierId}\r\n              style={{ width: \"350px\" }}\r\n              onChange={(e) => handle(e)}>\r\n              <option selected hidden>\r\n                Please select a supplier\r\n              </option>\r\n              {data3.map((opt) => (\r\n                <option value={opt.supplierId}>{opt.supplierName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }}>\r\n            Invoice Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='number'\r\n              autoComplete='off'\r\n              size='sm'\r\n              maxLength={4}\r\n              id='invoiceDateYear'\r\n              defaultValue={data.invoiceDateYear}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            {\" \"}\r\n            Management Company Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              size='sm'\r\n              type='select'\r\n              autoComplete='off'\r\n              id='mgmtCompId'\r\n              disabled='disabled'\r\n              style={{ width: \"350px\" }}\r\n              value={data.mgmtCompId}\r\n              onChange={(e) => handle(e)}>\r\n              <option selected hidden>\r\n                Please select a company\r\n              </option>\r\n              {data1.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Payment Amount\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              size='sm'\r\n              disabled='disabled'\r\n              id='invoiceAmount'\r\n              defaultValue={data.invoiceAmount}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Trade License Expiry Date\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='Date'\r\n              size='sm'\r\n              id='tradeLicenseExpDate'\r\n              defaultValue={data.tradeLicenseExpDate}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Issuance Authority\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              size='sm'\r\n              id='issuanceAuthority'\r\n              defaultValue={data.issuanceAuthority}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }}>\r\n            Agreement Expiry Date\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='Date'\r\n              size='sm'\r\n              id='agreementExpDate'\r\n              defaultValue={data.agreementExpDate}\r\n              onChange={(e) => handle(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Status\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              size='sm'\r\n              id='status'\r\n              value={data.status}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Building Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              size='sm'\r\n              type='select'\r\n              autoComplete='off'\r\n              id='buildingId'\r\n              disabled='disabled'\r\n              value={data.buildingId}\r\n              onChange={(e) => handle(e)}>\r\n              <option selected hidden>\r\n                Please select building\r\n              </option>\r\n              {data2.map((opt) => (\r\n                <option value={opt.buildingId}>{opt.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"10rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={governmentCheckBox}\r\n                onChange={handleGovernmentBox}\r\n              />\r\n              Government\r\n            </Label>\r\n          </Col>\r\n\r\n          <Col md={2}>\r\n            <Label style={{ marginLeft: \"-3rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={autoRenewal}\r\n                onChange={handleAutoRenewal}\r\n              />\r\n              Auto Renewal\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Service Code\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='serviceCode'\r\n              value={data.serviceCode}\r\n              size='sm'\r\n            />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"10rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={insuranceCheckBox}\r\n                onChange={handleInsuranceBox}\r\n              />\r\n              Insurance Company\r\n            </Label>\r\n          </Col>\r\n\r\n          <Col md={2.5}>\r\n            <Label style={{ marginLeft: \"-2rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={noProperDocumentCheckBox}\r\n                onChange={handleNoProperDocumentBox}\r\n              />\r\n              No proper Data/Documents\r\n            </Label>\r\n          </Col>\r\n\r\n          <Label sm={3} className='mt-3'>\r\n            Bifurcation\r\n          </Label>\r\n          <Col sm={2} className='mt-3'>\r\n            <Input\r\n              type='text'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='bifurcation'\r\n              value={data.bifurcation}\r\n              size='sm'\r\n              style={{ marginLeft: \"-5rem\" }}\r\n            />\r\n          </Col>\r\n\r\n          <Col md={4} className='mt-3'>\r\n            <Label style={{ marginLeft: \"5rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={isExcpApproval}\r\n                onChange={handleIsExcpApproval}\r\n              />\r\n              Is Exceptional Approval\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginLeft: \"\" }}>\r\n            Reason\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='textarea'\r\n              autoComplete='off'\r\n              onChange={(e) => handle(e)}\r\n              id='remarks'\r\n              name='remarks'\r\n              value={data.remarks}\r\n              size='sm'\r\n              style={{ marginLeft: \"-5rem\", width: \"305px\", height: \"60px\" }}\r\n            />\r\n          </Col>\r\n          <Col sm={2}>\r\n            <Button\r\n              className='buttonUpdate'\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                // position: \"relative\",\r\n                marginLeft: \"18rem\",\r\n              }}>\r\n              update\r\n            </Button>\r\n          </Col>\r\n          <Col sm={2} style={{ marginLeft: \"13rem\" }}>\r\n            <Button\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                position: \"relative\",\r\n              }}\r\n              onClick={() => window.close()}>\r\n              Close\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n      <br />\r\n      <hr />\r\n\r\n      <div className='App'>\r\n        <DocumentUpload pymtReqId={id} />\r\n        <DocumentTable pymtReqId={id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Child() {\r\n  let { id } = useParams({});\r\n  return <div></div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { DocumentTable } from \"./DocumentTable\";\r\nimport { Route, useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { properties } from \"./properties\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n<switch>\r\n  <Route path='/attachmentFieldcomplreq/:id' children={<Child />} />\r\n</switch>;\r\n\r\nexport default function AttachmentFieldsCompletedRequest() {\r\n  let { id } = useParams();\r\n  console.log(id);\r\n\r\n  const [formData, setState] = useState({});\r\n  const [isExcpApproval, setIsExcpApproval] = useState(false);\r\n  const [autoRenewal, setAutoRenewal] = useState(false);\r\n  const [governmentCheckBox, setGovernmentCheckBox] = useState(false);\r\n  const [insuranceCheckBox, setInsuranceCheckBox] = useState(false);\r\n  const [noProperDocumentCheckBox, setNoProperDocumentCheckBox] =\r\n    useState(false);\r\n  const loadAttachmentDetails = (ids) => {\r\n    let head = {\r\n      token: ReactSession.get(\"token\"),\r\n      username: ReactSession.get(\"username\"),\r\n    };\r\n    axios\r\n      .get(properties.displayAttachmentDetails + `${ids}`, { headers: head })\r\n      .then(\r\n        (response) => {\r\n          console.log(\r\n            \"Response Data loaded here\" + JSON.stringify(response.data)\r\n          );\r\n\r\n          setState({\r\n            formData,\r\n            matrixRefNo: response.data[0].strMatrixRefNo,\r\n            mcNameEn: response.data[0].mcNameEn,\r\n            issuanceAuthority: response.data[0].issuanceAuthority,\r\n            tradeLicenseExpDate: response.data[0].tradeLicenseExpDate,\r\n            agreementExpDate: response.data[0].agreementExpDate,\r\n            budgetYear: response.data[0].budgetYear,\r\n            invoiceDateYear: response.data[0].invoiceDateYear,\r\n            invoiceAmount: response.data[0].invoiceAmount,\r\n            supplierName: response.data[0].supplierName,\r\n            status: response.data[0].status,\r\n            serviceCode: response.data[0].serviceCode,\r\n            buildingName: response.data[0].buildingName,\r\n            autoRenewal: response.data[0].autoRenewal,\r\n            isGovernmentEntity: response.data[0].isGovernmentEntity,\r\n            isInsuranceCompany: response.data[0].isInsuranceCompany,\r\n            noProperDocuments: response.data[0].noProperDocuments,\r\n            bifurcation: response.data[0].bifurcation,\r\n            isExceptionalApproval: response.data[0].isExceptionalApproval,\r\n            remarks: response.data[0].remarks,\r\n          });\r\n          if (!\"Y\".localeCompare(response.data[0].isExceptionalApproval)) {\r\n            setIsExcpApproval(true);\r\n          }\r\n\r\n          if (!\"Y\".localeCompare(response.data[0].noProperDocuments))\r\n            setNoProperDocumentCheckBox(true);\r\n\r\n          if (response.data[0].autoRenewal)\r\n            if (!\"Y\".localeCompare(response.data[0].autoRenewal))\r\n              setAutoRenewal(true);\r\n\r\n          if (response.data[0].isGovernmentEntity)\r\n            if (!\"Y\".localeCompare(response.data[0].isGovernmentEntity))\r\n              setGovernmentCheckBox(true);\r\n          if (response.data[0].isInsuranceCompany)\r\n            if (!\"Y\".localeCompare(response.data[0].isInsuranceCompany))\r\n              setInsuranceCheckBox(true);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  useEffect(() => {\r\n    loadAttachmentDetails(`${id}`);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-3 ml-5'>\r\n        <FormGroup row>\r\n          <Label sm={3}>Matrix Ref No</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.matrixRefNo} />\r\n          </Col>\r\n\r\n          <Label sm={3} className='ml-5'>\r\n            Budget Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.budgetYear} />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3}>Management Company Name</Label>\r\n          <Col sm={2}>\r\n            <Input size='sm' type='text' value={formData.mcNameEn}></Input>\r\n          </Col>\r\n\r\n          <Label sm={3} className='ml-5'>\r\n            Invoice Date/Year\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.invoiceDateYear} />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3}>Issuance Authority</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.issuanceAuthority} />\r\n          </Col>\r\n\r\n          <Label sm={3} className='ml-5'>\r\n            Invoice Amount\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.invoiceAmount} />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3}>Trade License Expiry Date</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.tradeLicenseExpDate} />\r\n          </Col>\r\n\r\n          <Label sm={3} className='ml-5'>\r\n            Supplier Name\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.supplierName} />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3}> Agreement Expiry Date</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.agreementExpDate} />\r\n          </Col>\r\n\r\n          <Label sm={3} className='ml-5'>\r\n            {\" \"}\r\n            Status\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.status} />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3}> Building Name</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.buildingName} />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"2rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={governmentCheckBox}\r\n                // onChange={handleGovernmentBox}\r\n              />\r\n              Government\r\n            </Label>\r\n          </Col>\r\n          <Col md={2}>\r\n            <Label style={{ marginLeft: \"-3rem\" }} check>\r\n              <Checkbox color='primary' checked={autoRenewal} />\r\n              Auto Renewal\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3} className=''>\r\n            Service Code\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input type='text' size='sm' value={formData.serviceCode} />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"2rem\" }} check>\r\n              <Checkbox color='primary' checked={insuranceCheckBox} />\r\n              Insurance Company\r\n            </Label>\r\n          </Col>\r\n\r\n          <Col md={2.5}>\r\n            <Label style={{ marginLeft: \"-2rem\" }} check>\r\n              <Checkbox color='primary' checked={noProperDocumentCheckBox} />\r\n              No proper Data/Documents\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label sm={3}>Bifurcation</Label>\r\n          <Col sm={2}>\r\n            <Input type='text' value={formData.bifurcation} size='sm' />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"2rem\" }} check>\r\n              <Checkbox color='primary' checked={isExcpApproval} />\r\n              Is Exceptional Approval\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={3} style={{ marginLeft: \"\" }}>\r\n            Reason\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='textarea'\r\n              id='remarks'\r\n              name='remarks'\r\n              value={formData.remarks}\r\n              size='sm'\r\n              style={{ marginLeft: \"\", width: \"305px\", height: \"60px\" }}\r\n            />\r\n          </Col>\r\n          <Col sm={2}>\r\n            <Button\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                marginLeft: \"32rem\",\r\n              }}\r\n              onClick={() => window.close()}>\r\n              Close\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n      <div className='App'>\r\n        <DocumentTable pymtReqId={id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Child() {\r\n  let { id } = useParams();\r\n  return <div></div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport { DocumentTable } from \"./DocumentTable\";\r\nimport { Route, useParams } from \"react-router\";\r\n\r\nimport axios from \"axios\";\r\nimport DocumentUpload from \"./DocumentUpload\";\r\nimport { properties } from \"./properties\";\r\nimport \"./Attachment.css\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nfunction AttachmentTemp() {\r\n  return (\r\n    <>\r\n      <div style={{ overflowX: \"hidden\" }}>\r\n        <Form className='my-3 ml-5'>\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }}>\r\n              Matrix Ref No\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' size='sm' className='input' />\r\n            </Col>\r\n\r\n            <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n              Budget Year\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' id='budgetYear' size='sm' required />\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n              Supplier Name\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input size='sm' type='select' id='supplierId' size='sm' required>\r\n                <option selected disabled>\r\n                  Please select a supplier\r\n                </option>\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2} style={{ marginLeft: \"10rem\" }}>\r\n              Invoice Date/Year\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' id='invoiceDateYear' size='sm' />\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n              Management Company Name\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input size='sm' type='select' id='mgmtCompId' required>\r\n                <option selected disabled>\r\n                  Please select a company\r\n                </option>\r\n              </Input>\r\n            </Col>\r\n\r\n            <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n              Invoice Amount\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' id='invoiceAmount' size='sm' required />\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n              Trade License Expiry Date\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='date' id='tradeLicenseExpDate' size='sm' required />\r\n              <Input type='text' id='hiddenTrade' hidden />\r\n            </Col>\r\n\r\n            <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n              Issuance Authority\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' id='issuanceAuthority' size='sm' required />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }}>\r\n              {\" \"}\r\n              Agreement Expiry Date\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='date' id='agreementExpDate' size='sm' />\r\n              <Input type='text' id='hiddenAgree' hidden />\r\n            </Col>\r\n\r\n            <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n              Service Code\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input type='text' id='serviceCode' size='sm' required />\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Col sm={4}>\r\n              <Label style={{ marginLeft: \"16rem\" }} check>\r\n                <Checkbox color='primary' />\r\n                Auto Renewal\r\n              </Label>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n              {\" \"}\r\n              Building Name\r\n            </Label>\r\n            <Col sm={2}>\r\n              <Input size='sm' type='select' id='buildingId' required>\r\n                <option selected hidden>\r\n                  Please select building\r\n                </option>\r\n              </Input>\r\n            </Col>\r\n\r\n            <Col sm={2}>\r\n              <Button\r\n                style={{\r\n                  background: \"#254a9e\",\r\n                  color: \"white\",\r\n                  position: \"relative\",\r\n                  marginLeft: \"80vh\",\r\n                }}>\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Col sm={7}>\r\n              <Label style={{ marginLeft: \"1.5rem\" }} check>\r\n                <Checkbox color='primary' />\r\n                Government\r\n              </Label>\r\n            </Col>\r\n\r\n            <Col sm={7}>\r\n              <Label style={{ marginLeft: \"1.5rem\" }} check>\r\n                <Checkbox color='primary' />\r\n                Insurance Company\r\n              </Label>\r\n            </Col>\r\n\r\n            <Col sm={7}>\r\n              <Label style={{ marginLeft: \"1.5rem\" }} check>\r\n                <Checkbox color='primary' />\r\n                No Proper Documents\r\n              </Label>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n\r\n        <div className='App'></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AttachmentTemp;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Temp() {\r\n  let { id } = useParams();\r\n  return (\r\n    <div className='text-center'>\r\n      <h1>Temporary React component with ID: {id}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Temp;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./mydiv.css\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport MuiTableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// Icons\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  selectTableCell: {\r\n    width: 40,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 20,\r\n  },\r\n  input: {\r\n    width: 130,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst CustomTableCell = ({ row, name, onChange }) => {\r\n  const classes = useStyles();\r\n  const { isEditMode } = row;\r\n  return (\r\n    <TableCell align='left' className={classes.tableCell}>\r\n      {isEditMode ? (\r\n        <Input\r\n          value={row[name]}\r\n          name={name}\r\n          onChange={(e) => onChange(e, row)}\r\n          className={classes.input}\r\n        />\r\n      ) : (\r\n        row[name]\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nfunction BulkEdit(props) {\r\n  const [rows, setRows] = useState(\r\n    props.data\r\n    // createData(\"A1.01\", \"Deficit\", 50000, 50.0, 5050.0, 2356.0, 1284.0),\r\n    // createData(\"A1.02\", \"Deficit\", 50000, 50.0, 5050.0, 2356.0, 1284.0),\r\n  );\r\n\r\n  const [previous, setPrevious] = React.useState({});\r\n  const classes = useStyles();\r\n\r\n  const onToggleEditMode = (id) => {\r\n    setRows((state) => {\r\n      return rows.map((row) => {\r\n        if (row.id === id) {\r\n          return { ...row, isEditMode: !row.isEditMode };\r\n        }\r\n\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.id]) {\r\n      setPrevious((state) => ({ ...state, [row.id]: row }));\r\n    }\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    const { id } = row;\r\n    const newRows = rows.map((row) => {\r\n      if (row.id === id) {\r\n        return { ...row, [name]: value };\r\n      }\r\n      return row;\r\n    });\r\n\r\n    setRows(newRows);\r\n  };\r\n\r\n  const onRevert = (id) => {\r\n    const newRows = rows.map((row) => {\r\n      if (row.id === id) {\r\n        return previous[id] ? previous[id] : row;\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n    setPrevious((state) => {\r\n      delete state[id];\r\n      return state;\r\n    });\r\n    onToggleEditMode(id);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} style={{ marginTop: \"-13px\" }}>\r\n      <Table className={classes.table}>\r\n        <TableHead\r\n          style={{\r\n            backgroundColor: \"#254A9E\",\r\n          }}>\r\n          <TableRow>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Action\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Service Code\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Service Name\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Amount\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              VAT\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Total Amount\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Consumed Amount\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{\r\n                fontSize: \"16px\",\r\n                color: \"white\",\r\n                fontWeight: \"500\",\r\n              }}>\r\n              Balance Amount\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell className={classes.selectTableCell}>\r\n                {row.isEditMode ? (\r\n                  <>\r\n                    <IconButton\r\n                      aria-label='done'\r\n                      onClick={() => onToggleEditMode(row.id)}>\r\n                      <DoneIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label='revert'\r\n                      onClick={() => onRevert(row.id)}>\r\n                      <RevertIcon />\r\n                    </IconButton>\r\n                  </>\r\n                ) : (\r\n                  <IconButton\r\n                    aria-label='delete'\r\n                    onClick={() => onToggleEditMode(row.id)}>\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                )}\r\n              </TableCell>\r\n              <CustomTableCell {...{ row, name: \"serviceCode\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"serviceName\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"amount\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"vat\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"totalAmount\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"consumedAmount\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"consumedAmount\", onChange }} />\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default BulkEdit;\r\n","import React from \"react\";\r\n\r\nfunction Test() {\r\n  return (\r\n    <div>\r\n      <h1>Test screen</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import React, { useMemo, useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport PaymentRequestFields from \"./PaymentRequestFields\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUser } from \"../action\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n// import { addUser } from \"../store/userStore\";\r\n\r\nfunction LoginFailed(props) {\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n  ReactSession.set(\"username\", \"\");\r\n  const dispatch = useDispatch();\r\n  let handleUsername = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n  let handlePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  let handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      (userName == process.env.REACT_APP_USERNAME1 &&\r\n        password == process.env.REACT_APP_PASSWORD) ||\r\n      (userName == process.env.REACT_APP_USERNAME2 &&\r\n        password == process.env.REACT_APP_PASSWORD)\r\n    ) {\r\n      dispatch(addUser(userName));\r\n      ReactSession.set(\"username\", userName);\r\n      history.push(\"/tabs/\");\r\n    } else {\r\n      alert(\"Bad Credentials!\");\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n        marginTop: \"4em\",\r\n        marginLeft: \"-15em\",\r\n        marginBottom: \"4.3em\",\r\n        marginRight: \"98.2em\",\r\n      }}>\r\n      <Card>\r\n        <CardBody\r\n          style={{\r\n            background: \"#254a9e\",\r\n            width: 800,\r\n            height: 50,\r\n            overflow: \"hidden\",\r\n          }}>\r\n          <h4 style={{ color: \"white\" }}>Login</h4>\r\n        </CardBody>\r\n\r\n        <Card className='my-3 ml-4' style={{ width: 750 }}>\r\n          <Form\r\n            className='text-center my-3'\r\n            method='POST'\r\n            action='j_security_check'\r\n            // onSubmit={handleSubmit}\r\n          >\r\n            <FormGroup>\r\n              <p className='ml-5' style={{ color: \"red\" }}>\r\n                Invalid Credentials\r\n              </p>\r\n              <Label style={{ color: \"#254a9e\" }} for='MashreqUser'>\r\n                User ID\r\n              </Label>\r\n              <input\r\n                className='ml-4'\r\n                type='userid'\r\n                name='j_username'\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label style={{ color: \"#254a9e\" }} for='MashreqPassword'>\r\n                Password\r\n              </Label>\r\n              <input\r\n                className='ml-2'\r\n                type='password'\r\n                name='j_password'\r\n                onChange={handlePassword}\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n            <Container className='ml-4' style={{ height: 50 }}>\r\n              <Button size='sm' style={{ background: \"#254a9e\" }}>\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                size='sm'\r\n                style={{ background: \"#254a9e\" }}\r\n                className='ml-4'>\r\n                Reset\r\n              </Button>\r\n            </Container>\r\n          </Form>\r\n        </Card>\r\n        <CardBody\r\n          style={{\r\n            background: \"#254a9e\",\r\n            width: 800,\r\n            height: 50,\r\n          }}></CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default LoginFailed;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Button,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { DocumentTable } from \"./DocumentTable\";\r\nimport { Route, useParams } from \"react-router\";\r\n\r\nimport axios from \"axios\";\r\nimport DocumentUpload from \"./DocumentUpload\";\r\nimport { properties } from \"./properties\";\r\nimport \"./Attachment.css\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ReactSession from \"react-client-session/dist/ReactSession\";\r\n\r\n{\r\n  /* <switch>\r\n  <Route path='/attachmentField/:id' children={<Child />} />\r\n</switch>; */\r\n}\r\n\r\nexport default function ReserveAttachmentFields() {\r\n\r\n  const [IsActiveCheckBox, isActive] = useState(false);\r\n  const [attachmentFlag, setAttachmentFlag] = useState(\"false\");\r\n  const [open, setOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [responseData, setResponseData] = useState([]);\r\n  const [disableSaveButton, setDisableSaveButton] = useState(false);\r\n  console.log(\"AttachmentFields started...\");\r\n  let { id } = useParams();\r\n  console.log(\"id >>>>>>>>\" + id);\r\n\r\n  // const [formData, setState] = useState({});\r\n\r\n  // const [loaddates, setDates] = useState({});\r\n\r\n  // const [data1, setData1] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [building, setBuilding] = useState([]);\r\n  const [company, setCompany] = useState([]);\r\n  const [dropDownData, setDropDownData] = useState({\r\n    accountNumber: \"\",\r\n    reserveAccountNumber: \"\",\r\n    mgmtCompId: \"\",\r\n    buildingId: \"\",\r\n    cifNumber: \"\",\r\n    branchCode: \"\",\r\n    isActive: \"\",\r\n  });\r\n  let handleInput = (e) => {\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setDropDownData({ ...dropDownData, [name]: value });\r\n    console.log(dropDownData);\r\n  };\r\n  let save = async (e) => {\r\n    e.preventDefault();\r\n    console.log(dropDownData);\r\n    if (!dropDownData.accountNumber) {\r\n      alert(\"Please select Account Number\");\r\n      return false;\r\n    };\r\n    if (!dropDownData.reserveAccountNumber) {\r\n      alert(\"Please select Reserve Account Number\");\r\n      return false;\r\n    };\r\n    // if (!dropDownData.mgmtCompId) {\r\n    //   alert(\"Please select Management Company Name\");\r\n    //   return false;\r\n    // };\r\n    // if (!dropDownData.buildingId) {\r\n    //   alert(\"Please select Building Name\");\r\n    //   return false;\r\n    // };\r\n    // if (!dropDownData.cifNumber) {\r\n    //   alert(\"Please select CIF Number\");\r\n    //   return false;\r\n    // };\r\n    // if (!dropDownData.branchCode) {\r\n    //   alert(\"Please select Branch Code\");\r\n    //   return false;\r\n    // };\r\n    // if (!dropDownData.isActive) {\r\n    //   alert(\"Please select Is Active\");\r\n    //   return false;\r\n    // };\r\n    if (dropDownData.buildingId != null && dropDownData.mgmtCompId != null && dropDownData.accountNumber != null && dropDownData.branchCode != null\r\n      && dropDownData.cifNumber != null && dropDownData.reserveAccountNumber != null && dropDownData.isActive!= null) {\r\n      alert(\"Data has been updated successfully\")\r\n\r\n    }\r\n    const requestData = {\r\n      account_Number: dropDownData.accountNumber,\r\n      cif_Number: dropDownData.cifNumber,\r\n      mgmnt_Comp_Id: dropDownData.mgmtCompId,\r\n      building_Id: dropDownData.buildingId,\r\n      reserve_Account_Number: dropDownData.reserveAccountNumber,\r\n      is_Active: 'Y',\r\n      branch_Code: dropDownData.branchCode\r\n    };\r\n    await axios.post(\r\n      `${properties.dataURl}/dataSave`,\r\n      requestData).then(response => setResponseData(response.data));\r\n    console.log(\">>>>>>>>>>.\", responseData);\r\n\r\n    //get API data\r\n    getFundDetails();\r\n    setIsOpen(false);\r\n  }\r\n  let getFundDetails = async () => {\r\n    const requestOptions = {\r\n      // method: 'POST',\r\n      // headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n      // title: 'mgmtCompId':202  'buildingId':104 ;\r\n      mgmtCompId: dropDownData.mgmtCompId,\r\n      buildingId: dropDownData.buildingId\r\n    };\r\n    await axios.post(\r\n      `${properties.dataURl}/data`,\r\n      requestOptions).then(response => setResponseData(response.data));\r\n    console.log(\">>>>>>>>>>.\", responseData);\r\n\r\n  }\r\n  let getBuildingNames = async (e) => {\r\n    e.preventDefault();\r\n    var name = e.target.name;\r\n    var value = e.target.value;\r\n    setDropDownData({ ...dropDownData, [name]: value });\r\n    console.log(dropDownData);\r\n    console.log(`${properties.getBuildingsByMgmtComp}/${e.target.value}`);\r\n    const building = await axios.get(\r\n      `${properties.getBuildingsByMgmtComp}/${e.target.value}`\r\n    );\r\n    console.log(\"Mapped building names :\" + building.data);\r\n    if (building.data) setBuilding(building.data);\r\n    else setBuilding([]);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"submitted\");\r\n\r\n    var isActive = \"\";\r\n\r\n\r\n\r\n    // if (IsActiveCheckBox) {\r\n    //   console.log(\"Is Active\");\r\n    //   isActive = \"Y\";\r\n    // } else {\r\n    //   isActive = \"N\";\r\n    // }\r\n\r\n    function handle(e) {\r\n      var regex = /[^.=,;\\w\\s]/gi;\r\n      const newdata = { ...data };\r\n      newdata[e.target.id] = e.target.value.replace(regex, \"\");\r\n      console.log(e.target.id + \":\" + e.target.value);\r\n      setData(newdata);\r\n      console.log(\"MY DATA :: \" + JSON.stringify(newdata));\r\n      console.log(\r\n        \"handle newdata.tradeLicenseExpDate:\" + newdata.tradeLicenseExpDate\r\n      );\r\n    }\r\n  }\r\n  let handleInsCheckbox = (e) => {\r\n    isActive(e.target.checked);\r\n  };\r\n  return (\r\n    <div style={{ overflowX: \"hidden\" }}>\r\n      <Form className='my-1 ml-5'>\r\n        <FormGroup row className='my-2 ml--3' inline>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required'>\r\n            Account Number\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              id='accountNumber' name='accountNumber' onChange={(e) => handleInput(e)}\r\n              type='number' />\r\n            {company.map((opt) => (\r\n              <option value={opt.reserveFundId}></option>\r\n            ))}\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Reserved Account Number\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type=\"number\" id='reserveAccountNumber' name='reserveAccountNumber' onChange={(e) => handleInput(e)}\r\n            />\r\n          </Col>\r\n\r\n        </FormGroup>\r\n        <FormGroup row className='my-2 ml--3' inline>\r\n          <Label className='required' sm={3} style={{ marginRight: -80 }}>Management Company Name</Label>\r\n          <Col>\r\n            <Input className='formInput' type='select'\r\n              id='mgmtCompId'\r\n              name='mgmtCompId'\r\n              // value={company.mgmtCompId}\r\n              onChange={(e) => handleInput(e)}\r\n              onChange1={(e) => {\r\n                getBuildingNames(e);\r\n              }}\r\n              style={{ width: \"15rem\", marginRight:\"-300px\"  }}>\r\n\r\n              <option selected disabled>\r\n                Please select a company\r\n              </option>\r\n              <option value='201'>RDK OWNERS ASSOCIATION MANAGEMENT LLC</option>\r\n              <option value='202'>KAIZEN OWNER ASSOCIATION MANAGEMENT</option>\r\n              <option value='203'>Better Communities Owner Association</option>\r\n              <option value='204'>STRATUM OWNERS ASSOCIATION MANAGEMENT SERVICES LLC</option>\r\n              <option value='205'>SG Community Management Services LLC</option>\r\n              {company.map((opt) => (\r\n                <option value={opt.mgmtCompId}>{opt.mcNameEn}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n\r\n          <Label className=\"formLable\"  style={{ marginLeft: \"4rem\" }}>Building Name</Label>\r\n          <Col >\r\n            <Input className='formInput'\r\n              type='select'\r\n              id='buildingId'\r\n              name='buildingId'\r\n              // value={dropDownData.mgmtCompId}\r\n              onChange={(e) => handleInput(e)}\r\n              style={{ width: \"15rem\",marginLeft:\"-200px\" }}>\r\n\r\n              <option selected disabled>\r\n                Please select a building\r\n              </option>\r\n              <option value='101'>TWO TOWERS</option>\r\n              <option value='102'>BINGHATTI GATEWAY</option>\r\n              <option value='103'>MILLENNIUM BINGHATTI RESIDENCES BUSINESS BAY</option>\r\n              <option value='104'>MILANO GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='105'>GIOVANNI BOUTIQUE SUITES</option>\r\n              <option value='106'>PALM VIEW</option>\r\n              <option value='107'>W Residences - The Palm</option>\r\n              {building.map((opt2) => (\r\n                <option value={opt2.buildingId}>{opt2.buildingName}</option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row className='my-2 ml--3' inline>\r\n          <Label sm={3} style={{ marginRight: -80 }} className='required' >\r\n            CIF Number\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type='number' id='cifNumber' name='cifNumber' onChange={(e) => handleInput(e)}  />\r\n            {company.map((opt) => (\r\n              <option value={opt.cifNumber}></option>\r\n            ))}\r\n          </Col>\r\n\r\n          <Label sm={2} style={{ marginLeft: \"10rem\" }} className='required'>\r\n            Branch Code\r\n          </Label>\r\n          <Col sm={2}>\r\n            <Input\r\n              type=\"number\" id='branchCode' name='branchCode' onChange={(e) => handleInput(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Label style={{ marginLeft: \"0rem\" }} check>\r\n              <Checkbox\r\n                color='primary'\r\n                checked={IsActiveCheckBox}\r\n                onChange={handleInsCheckbox}\r\n              />\r\n              Is Active\r\n            </Label>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row className='my-2 ml--3' inline>\r\n          <Button\r\n            type=\"submit\" onClick={save} style={{ background: \"#254a9e\", color: \"white\", marginLeft: \"430px\" }}>\r\n            UPDATE & SAVE{\" \"}\r\n          </Button>\r\n\r\n          <Col sm={2} className='mt-3'>\r\n            <Button\r\n              style={{\r\n                background: \"#254a9e\",\r\n                color: \"white\",\r\n                position: \"relative\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n              onClick={() => window.close()}>\r\n              Close\r\n            </Button>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n\r\n      </Form>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Child() {\r\n  let { id } = useParams();\r\n  return <div></div>;\r\n}","import \"./App.css\";\nimport \"./component/mydiv.css\";\n\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\n\nimport AppTabs from \"./component/AppTabs\";\n//import BulkPaymentDetails from './component/BulkPaymentDetails';\nimport DocumentPath from \"./component/DocumentPath\";\nimport Footer from \"./component/Footer\";\nimport Header from \"./component/Header\";\nimport Login from \"./component/Login\";\nimport AttachmentFields from \"./component/AttachmentFields\";\nimport AttachmentFieldsCompletedRequest from \"./component/AttachmentFields_CompletedRequest\";\nimport ExceptionUpdate from \"./component/ExceptionUpdate\";\nimport PaymentRequestFields from \"./component/PaymentRequestFields\";\nimport { DocumentTable } from \"./component/DocumentTable\";\nimport AttachmentTemp from \"./component/AttachmentTemp\";\nimport Temp from \"./component/Temp\";\nimport ReactSession from \"react-client-session/dist/ReactSession\";\nimport BulkEdit from \"./component/BulkEdit\";\nimport Test from \"./component/Test\";\nimport LoginFailed from \"./component/LoginFailed\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { properties } from \"./component/properties\";\nimport ReserveAttachmentFields from \"./component/ReserveAttachmentFields\";\n\n\nfunction App() {\n  const [isUser, setIsUser] = useState(true);\n  console.log(`OA React Application started`);\n  console.log(process.env.REACT_APP_BASE_URL);\n  ReactSession.setStoreType(\"localStorage\");\n\n  \n  // let auth = async () => {\n  //   setIsUser(true);\n  //   console.log(\n  //     `${properties.userAuth}?token=${ReactSession.get(\n  //       \"token\"\n  //     )}&username=${ReactSession.get(\"username\")}`\n  //   );\n  //   let response = await axios.get(\n  //     `${properties.userAuth}?token=${ReactSession.get(\n  //       \"token\"\n  //     )}&username=${ReactSession.get(\"username\")}`\n  //   );\n  //   console.log(response);\n  //   if (response) {\n  //     if (response.data) {\n  //       console.log(\"user already logged in\");\n  //       setIsUser(true);\n  //     }\n  //   }\n  // };\n  // // //caling userAuth\n  // // if (!isUser) auth();\n  // // console.log(\"PAth: \" + window.location.pathname);\n  // // if (!\"/ownersassociation/\".localeCompare(window.location.pathname)) {\n  // //   console.log(\"token cleared\");\n  // //   ReactSession.set(\"token\", \"\");\n  // // }\n  // console.log(isUser);\n  // if (!isUser)\n  //   if (ReactSession.get(\"token\")) {\n  //     console.log(\"user already logged in\");\n  //     setIsUser(true);\n  //   } else {\n  //     console.log(\"please login first\");\n  //   }\n\n  return (\n    <div className='App'>\n      <Header />\n      <hr />\n      <Switch>\n        <Route path='/' exact component={Login} />\n        {isUser && (\n          <>\n            <Route path='/bulkEdit' exact component={BulkEdit} />\n            <Route path='/' exact component={Login} />\n            <Route path='/loginFailed' exact component={LoginFailed} />\n            <Route path='/tabs/' exact component={AppTabs} />\n            {/* <Route path='/bulkPaymentdetails/:id' exact component={BulkPaymentDetails}/> */}\n            <Route path='/documentpath/:id' exact component={DocumentPath} />\n            <Route\n              path='/attachmentField/:id'\n              exact\n              component={AttachmentFields}\n            />\n            <Route path='/attachmentTemp/' exact component={AttachmentTemp} />\n            <Route path='/temp/:id' exact component={Temp} />\n\n            \n            <Route\n              path='/ReservedAttachmentFields/:id'\n              exact\n              component={ReserveAttachmentFields}\n            />\n            \n\n            <Route\n              path='/ExceptionUpdate/:id'\n              exact\n              component={ExceptionUpdate}\n            />\n            <Route path='/test' exact component={Test} />\n          </>\n        )}\n        <Redirect to='/' />\n      </Switch>\n      <Footer />\n     \n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = { username: \"\" };\r\nconst ADD_USER = \"ADD_USER\";\r\nexport function setUser(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_USER:\r\n      return { username: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { setUser } from \"./addUserReducer\";\r\n\r\nconst reducer = combineReducers({ userStore: setUser });\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"../reducer/index\";\r\nconst userStore = createStore(reducer, {});\r\n\r\nexport default userStore;\r\n","import \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport userStore from \"./store/userStore\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.REACT_APP_BASE_URL}>\n    <Provider store={userStore}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}